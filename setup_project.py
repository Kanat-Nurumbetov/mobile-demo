#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∞–≤—Ç–æ—Ç–µ—Å—Ç–æ–≤
"""

import os
import sys
from pathlib import Path
from config.settings import *

def check_apk_setup():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É APK —Ñ–∞–π–ª–∞"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É APK —Ñ–∞–π–ª–∞...")

    if USE_LOCAL_APK:
        if AVAILABLE_APK_PATH:
            print(f"‚úÖ APK —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω: {AVAILABLE_APK_PATH}")
            print(f"üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {Path(AVAILABLE_APK_PATH).stat().st_size / 1024 / 1024:.1f} MB")
        else:
            print(f"‚ùå APK —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            print(f"üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:")
            print(f"   1. –ü–æ–º–µ—Å—Ç–∏—Ç–µ APK —Ñ–∞–π–ª –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: {APK_DIR}")
            print(f"   2. –ü–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ —Ñ–∞–π–ª –≤: {APK_FILE_NAME}")
            print(f"   3. –ò–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ APK_FILE_NAME –≤ config/settings.py")
            print(f"   4. –ò–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ USE_LOCAL_APK=false –≤ .env —Ñ–∞–π–ª–µ")
            return False
    else:
        print("üîÑ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ/—ç–º—É–ª—è—Ç–æ—Ä–µ")

    return True

def check_environment():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–∫—Ä—É–∂–µ–Ω–∏–µ"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ...")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python –≤–µ—Ä—Å–∏—é
    python_version = sys.version_info
    if python_version.major < 3 or (python_version.major == 3 and python_version.minor < 8):
        print(f"‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8+, —É –≤–∞—Å: {python_version.major}.{python_version.minor}")
        return False
    else:
        print(f"‚úÖ Python –≤–µ—Ä—Å–∏—è: {python_version.major}.{python_version.minor}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º adb
    adb_result = os.system("adb version > /dev/null 2>&1")
    if adb_result == 0:
        print("‚úÖ ADB –¥–æ—Å—Ç—É–ø–µ–Ω")
    else:
        print("‚ùå ADB –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        return False

    return True

def check_directories():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞...")

    directories = [
        SCREENSHOTS_DIR,
        REPORTS_DIR,
        TEST_DATA_DIR,
        APK_DIR
    ]

    for directory in directories:
        if directory.exists():
            print(f"‚úÖ {directory.name}/")
        else:
            directory.mkdir(exist_ok=True)
            print(f"üÜï –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {directory.name}/")

    return True

def show_commands():
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã"""
    print("\nüìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤:")
    print("=" * 50)
    print("# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤:")
    print("pytest -v")
    print()
    print("# –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ QR —Ç–µ—Å—Ç–æ–≤:")
    print("pytest tests/test_qr_payment.py -n 2 -v")
    print()
    print("# –¢–µ—Å—Ç—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ OD:")
    print("pytest tests/test_od_navigation.py -v")
    print()
    print("# Smoke —Ç–µ—Å—Ç—ã:")
    print("pytest -m smoke -v")
    print()
    print("# –° HTML –æ—Ç—á–µ—Ç–æ–º:")
    print("pytest --html=reports/report.html --self-contained-html")
    print()
    print("# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤:")
    print("adb devices")
    print()
    print("# –ó–∞–ø—É—Å–∫ Appium —Å–µ—Ä–≤–µ—Ä–∞:")
    print("appium --port 4723")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∞–≤—Ç–æ—Ç–µ—Å—Ç–æ–≤ B2B Mobile")
    print("=" * 50)

    success = True

    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    success &= check_environment()
    success &= check_directories()
    success &= check_apk_setup()

    if success:
        print("\n‚úÖ –ü—Ä–æ–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        show_commands()
    else:
        print("\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ø—Ä–æ–µ–∫—Ç–∞")
        sys.exit(1)

if __name__ == "__main__":
    main()