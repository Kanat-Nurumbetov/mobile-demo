2025-07-29T06:23:37.449Z CLI info     Config : {"userName":"kanat_VX6i9G","accessKey":"Asfusxe4qfUBqPdDszBs","projectName":"BrowserStack Samples","buildName":"browserstack build","buildIdentifier":"#${BUILD_NUMBER}","framework":"pytest","platforms":[{"os":"OS X","osVersion":"Big Sur","browserName":"Chrome","browserVersion":"latest"},{"os":"Windows","osVersion":10,"browserName":"Edge","browserVersion":"latest"},{"deviceName":"Samsung Galaxy S22 Ultra","browserName":"chrome","osVersion":12}],"parallelsPerPlatform":1,"browserstackLocal":true,"debug":false,"networkLogs":false,"consoleLogs":"errors"}
2025-07-29T06:23:37.471Z CLI info [testhub:module]  [kanat_VX6i9G]   [e077a873-e317-47d4-93f4-4b82fad3ad81]  Starting testhub from 10526:0
2025-07-29T06:23:37.472Z CLI info [testhub:module]  [kanat_VX6i9G]   [e077a873-e317-47d4-93f4-4b82fad3ad81]  startBuild: payload=

{"started_at":"2025-07-29T06:23:37.472Z","host_info":{"hostname":"MacBook-Pro-00059362.local","platform":"darwin","type":"Darwin","version":"Darwin Kernel Version 24.5.0: Tue Apr 22 19:53:26 PDT 2025; root:xnu-11417.121.6~2/RELEASE_X86_64","arch":"x64"},"ci_info":{"build_number":null},"version_control":{"name":"git","sha":"727003fc212f2f290a50bbf7310668e8901e6d4b","short_sha":"727003fc21","branch":"main","tag":null,"committer":"00059362 <a00059362@MacBook-Pro-00059362.local>","committer_date":"2025-07-28T09:08:59.000Z","author":"00059362 <a00059362@MacBook-Pro-00059362.local>","author_date":"2025-07-28T09:08:59.000Z","commit_message":"Refactor project","root":"/Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo","common_git_dir":"/Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/.git","worktree_git_dir":"/Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/.git","last_tag":null,"commits_since_last_tag":null,"remotes":[{"name":"origin","url":"https://github.com/Kanat-Nurumbetov/mobile-demo.git"}]},"project_name":"BrowserStack Samples","name":"browserstack build","build_identifier":"#1","build_run_identifier":null,"description":"","tags":[],"failed_tests_rerun":false,"accessibility":{"settings":{}},"framework_details":{"frameworkName":"pytest","frameworkVersion":"8.4.1","sdkVersion":"1.30.5","cliVersion":"1.6.1","language":"python","testFramework":{"name":"selenium","version":"4.34.0"}},"product_map":{"observability":true,"accessibility":null,"percy":false,"automate":true,"app_automate":false},"browserstackAutomation":true}
2025-07-29T06:23:37.472Z CLI info  [kanat_VX6i9G]   [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://sdk.browserstack.com
2025-07-29T06:23:38.606Z CLI info [testhub:module]  [kanat_VX6i9G]   [e077a873-e317-47d4-93f4-4b82fad3ad81]  startBuild: response=vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh
2025-07-29T06:23:38.608Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://api.browserstack.com
2025-07-29T06:23:51.113Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making GET request to https://hub.browserstack.com
2025-07-29T06:23:51.920Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making GET request to https://hub-euw.browserstack.com
2025-07-29T06:23:51.922Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making GET request to https://hub-use.browserstack.com
2025-07-29T06:23:51.922Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making GET request to https://hub-aps.browserstack.com
2025-07-29T06:23:52.631Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '16aad46d-bc6a-44b4-ad4d-c90356c0acd3',
    name: 'setup',
    result: 'pending',
    test_run_id: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:23:52.623Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:23:52.648Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:23:52Z [conftest][INFO] - üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä –≤ —Ä–µ–∂–∏–º–µ: browserstack',
      level: 'INFO',
      test_run_uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303'
    }
  ]
} to 10526:0
2025-07-29T06:23:52.688Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '4d15b71a-5e22-46a3-ad6b-fa17300b12fd',
    name: 'setup',
    result: 'pending',
    test_run_id: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:23:52.683Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:23:52.702Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:23:52Z [conftest][INFO] - üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä –≤ —Ä–µ–∂–∏–º–µ: browserstack',
      level: 'INFO',
      test_run_uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d'
    }
  ]
} to 10526:0
2025-07-29T06:23:52.744Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '39625ba2-1685-4da2-ac42-fa3a13301474',
    name: 'setup',
    result: 'pending',
    test_run_id: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:23:52.739Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:23:52.759Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:23:52Z [conftest][INFO] - üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä –≤ —Ä–µ–∂–∏–º–µ: browserstack',
      level: 'INFO',
      test_run_uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e'
    }
  ]
} to 10526:0
2025-07-29T06:23:52.762Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:23:52Z [utils.driver_factory][INFO] - üåê –°–æ–∑–¥–∞–µ–º BrowserStack –¥—Ä–∞–π–≤–µ—Ä...',
      level: 'INFO',
      test_run_uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e'
    }
  ]
} to 10526:0
2025-07-29T06:23:52.765Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
      kind: 'TEST_LOG',
      message: 'üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º APK –≤ BrowserStack: /Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/apk/halyk_bank_app.apk',
      level: 'INFO',
      test_run_uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e'
    }
  ]
} to 10526:0
2025-07-29T06:23:53.148Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:23:53Z [utils.driver_factory][INFO] - üåê –°–æ–∑–¥–∞–µ–º BrowserStack –¥—Ä–∞–π–≤–µ—Ä...',
      level: 'INFO',
      test_run_uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303'
    }
  ]
} to 10526:0
2025-07-29T06:23:53.151Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
      kind: 'TEST_LOG',
      message: 'üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º APK –≤ BrowserStack: /Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/apk/halyk_bank_app.apk',
      level: 'INFO',
      test_run_uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303'
    }
  ]
} to 10526:0
2025-07-29T06:23:53.208Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:23:53Z [utils.driver_factory][INFO] - üåê –°–æ–∑–¥–∞–µ–º BrowserStack –¥—Ä–∞–π–≤–µ—Ä...',
      level: 'INFO',
      test_run_uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d'
    }
  ]
} to 10526:0
2025-07-29T06:23:53.211Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
      kind: 'TEST_LOG',
      message: 'üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º APK –≤ BrowserStack: /Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/apk/halyk_bank_app.apk',
      level: 'INFO',
      test_run_uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d'
    }
  ]
} to 10526:0
2025-07-29T06:23:54.612Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Processing batch event [
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '16aad46d-bc6a-44b4-ad4d-c90356c0acd3',
      name: 'setup',
      result: 'pending',
      test_run_id: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:23:52.623Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '4d15b71a-5e22-46a3-ad6b-fa17300b12fd',
      name: 'setup',
      result: 'pending',
      test_run_id: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:23:52.683Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '39625ba2-1685-4da2-ac42-fa3a13301474',
      name: 'setup',
      result: 'pending',
      test_run_id: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:23:52.739Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 10526:0
2025-07-29T06:23:54.614Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T06:24:48.886Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ APK: 403',
      level: 'INFO',
      test_run_uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e'
    }
  ]
} to 10526:0
2025-07-29T06:24:48.890Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
      kind: 'TEST_LOG',
      message: '–û—Ç–≤–µ—Ç: {"error":"[BROWSERSTACK_TESTING_TIME_LIMIT_EXHAUSTED]App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial."}',
      level: 'INFO',
      test_run_uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e'
    }
  ]
} to 10526:0
2025-07-29T06:24:48.912Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:24:48Z [utils.driver_factory][WARNING] - ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å APK, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
      level: 'INFO',
      test_run_uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e'
    }
  ]
} to 10526:0
2025-07-29T06:24:48.916Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
      kind: 'TEST_LOG',
      message: 'üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä BrowserStack –¥–ª—è android',
      level: 'INFO',
      test_run_uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e'
    }
  ]
} to 10526:0
2025-07-29T06:24:48.919Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
      kind: 'TEST_LOG',
      message: 'Capabilities: {\n' +
        '  "device": "Samsung Galaxy S22",\n' +
        '  "os_version": "12.0",\n' +
        '  "project": "Halyk Bank Tests",\n' +
        '  "build": "Android Build v1.0",\n' +
        '  "name": "Halyk Bank Android Test",\n' +
        '  "app": null,\n' +
        '  "browserstack.debug": true,\n' +
        '  "browserstack.video": true,\n' +
        '  "browserstack.networkLogs": true,\n' +
        '  "browserstack.appiumLogs": true,\n' +
        '  "browserstack.local": true,\n' +
        '  "browserstack.console": "verbose",\n' +
        '  "browserstack.deviceLogs": true,\n' +
        '  "browserstack.appium_version": "2.0.1",\n' +
        '  "browserstack.idleTimeout": 300,\n' +
        '  "browserstack.acceptInsecureCerts": true,\n' +
        '  "appPackage": "kz.halyk.onlinebank.stage",\n' +
        '  "appActivity": "kz.halyk.onlinebank.ui_release4.screens.splash.SplashActivity"\n' +
        '}',
      level: 'INFO',
      test_run_uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e'
    }
  ]
} to 10526:0
2025-07-29T06:24:48.924Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:24:48Z [bstack1lll1l1lll1_opy_][INFO] - Remote Server Address being passed as : https://[REDACTED]:[REDACTED]@hub-cloud.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e'
    }
  ]
} to 10526:0
2025-07-29T06:24:48.938Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:24:48Z [bstack1lll1l1lll1_opy_][INFO] - Completed setup!',
      level: 'INFO',
      test_run_uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e'
    }
  ]
} to 10526:0
2025-07-29T06:24:48.945Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
      kind: 'TEST_LOG',
      message: "2025-07-29T06:24:48Z [bstack1lll1l1lll1_opy_][INFO] - driver.__init__ platform_index=1: args=() kwargs={'command_executor': 'https://hub-euw.browserstack.com/wd/hub', 'options': <selenium.webdriver.edge.options.Options object at 0x10c8192b0>, 'locator_converter': <appium.webdriver.locator_converter.AppiumLocatorConverter object at 0x10c819d30>, 'web_element_cls': <class 'appium.webdriver.webelement.WebElement'>, 'client_config': <appium.webdriver.client_config.AppiumClientConfig object at 0x10c819be0>, 'keep_alive': True, 'file_detector': None}",
      level: 'INFO',
      test_run_uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e'
    }
  ]
} to 10526:0
2025-07-29T06:24:48.952Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:24:48Z [bstack1lll1l1lll1_opy_][WARNING] - hub_url=https://hub-euw.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e'
    }
  ]
} to 10526:0
2025-07-29T06:24:48.957Z CLI info [local:module]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  initSession: localIdentifier=Jul_29_1123_MacBook-Pro-00059362.local_r47k pid=10541
2025-07-29T06:24:49.974Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞ BrowserStack: Message: App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial.\n',
      level: 'INFO',
      test_run_uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e'
    }
  ]
} to 10526:0
2025-07-29T06:24:49.978Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:24:49Z [utils.driver_factory][ERROR] - ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å BrowserStack –¥—Ä–∞–π–≤–µ—Ä',
      level: 'INFO',
      test_run_uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e'
    }
  ]
} to 10526:0
2025-07-29T06:24:49.983Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:24:49Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      level: 'INFO',
      test_run_uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e'
    }
  ]
} to 10526:0
2025-07-29T06:24:50.077Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '39625ba2-1685-4da2-ac42-fa3a13301474',
    name: 'setup',
    result: 'failed',
    test_run_id: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:23:52.739Z',
    finished_at: '2025-07-29T06:24:50.070Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:24:50.084Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
      kind: 'TEST_LOG',
      message: '\x1B[31mE\x1B[0m',
      level: 'INFO',
      test_run_uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e'
    }
  ]
} to 10526:0
2025-07-29T06:24:50.099Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:24:50Z [bstack1lll111l11l_opy_][WARNING] - dropping due to lack of results False',
      level: 'INFO',
      test_run_uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e'
    }
  ]
} to 10526:0
2025-07-29T06:24:50.108Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '140c7153-111f-4d95-87b6-33c5e2c699a2',
    name: 'teardown',
    result: 'pending',
    test_run_id: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:24:50.102Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:24:50.112Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:24:50Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Samsung] (–∑–∞ 0.13—Å)',
      level: 'INFO',
      test_run_uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e'
    }
  ]
} to 10526:0
2025-07-29T06:24:50.118Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:24:50.098Z',
      uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
      kind: 'TEST_LOG',
      message: 'dropping due to lack of results False',
      level: 'WARNING',
      test_run_uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e'
    }
  ]
} to 10526:0
2025-07-29T06:24:50.119Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:24:50.111Z',
      uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Samsung] (–∑–∞ 0.13—Å)',
      level: 'INFO',
      test_run_uuid: '127acbbf-0f9b-4738-8b4b-f76486bed97e'
    }
  ]
} to 10526:0
2025-07-29T06:24:50.137Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '140c7153-111f-4d95-87b6-33c5e2c699a2',
    name: 'teardown',
    result: 'passed',
    test_run_id: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:24:50.102Z',
    finished_at: '2025-07-29T06:24:50.122Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:24:50.164Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'd6b00a25-95b9-4f9f-8a58-caf97ca9ef0b',
    name: 'setup',
    result: 'pending',
    test_run_id: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:24:50.159Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:24:50.176Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:24:50Z [conftest][INFO] - üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä –≤ —Ä–µ–∂–∏–º–µ: browserstack',
      level: 'INFO',
      test_run_uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f'
    }
  ]
} to 10526:0
2025-07-29T06:24:50.180Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:24:50Z [utils.driver_factory][INFO] - üåê –°–æ–∑–¥–∞–µ–º BrowserStack –¥—Ä–∞–π–≤–µ—Ä...',
      level: 'INFO',
      test_run_uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f'
    }
  ]
} to 10526:0
2025-07-29T06:24:50.185Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
      kind: 'TEST_LOG',
      message: 'üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º APK –≤ BrowserStack: /Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/apk/halyk_bank_app.apk',
      level: 'INFO',
      test_run_uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f'
    }
  ]
} to 10526:0
2025-07-29T06:24:50.624Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '39625ba2-1685-4da2-ac42-fa3a13301474',
      name: 'setup',
      result: 'failed',
      test_run_id: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:23:52.739Z',
      finished_at: '2025-07-29T06:24:50.070Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '140c7153-111f-4d95-87b6-33c5e2c699a2',
      name: 'teardown',
      result: 'pending',
      test_run_id: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:24:50.102Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '140c7153-111f-4d95-87b6-33c5e2c699a2',
      name: 'teardown',
      result: 'passed',
      test_run_id: '127acbbf-0f9b-4738-8b4b-f76486bed97e',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:24:50.102Z',
      finished_at: '2025-07-29T06:24:50.122Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'd6b00a25-95b9-4f9f-8a58-caf97ca9ef0b',
      name: 'setup',
      result: 'pending',
      test_run_id: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:24:50.159Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 10526:0
2025-07-29T06:24:50.625Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T06:25:51.354Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ APK: 403',
      level: 'INFO',
      test_run_uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f'
    }
  ]
} to 10526:0
2025-07-29T06:25:51.359Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
      kind: 'TEST_LOG',
      message: '–û—Ç–≤–µ—Ç: {"error":"[BROWSERSTACK_TESTING_TIME_LIMIT_EXHAUSTED]App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial."}',
      level: 'INFO',
      test_run_uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f'
    }
  ]
} to 10526:0
2025-07-29T06:25:51.384Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:25:51Z [utils.driver_factory][WARNING] - ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å APK, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
      level: 'INFO',
      test_run_uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f'
    }
  ]
} to 10526:0
2025-07-29T06:25:51.388Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
      kind: 'TEST_LOG',
      message: 'üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä BrowserStack –¥–ª—è android',
      level: 'INFO',
      test_run_uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f'
    }
  ]
} to 10526:0
2025-07-29T06:25:51.393Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
      kind: 'TEST_LOG',
      message: 'Capabilities: {\n' +
        '  "device": "Samsung Galaxy S22",\n' +
        '  "os_version": "12.0",\n' +
        '  "project": "Halyk Bank Tests",\n' +
        '  "build": "Android Build v1.0",\n' +
        '  "name": "Halyk Bank Android Test",\n' +
        '  "app": null,\n' +
        '  "browserstack.debug": true,\n' +
        '  "browserstack.video": true,\n' +
        '  "browserstack.networkLogs": true,\n' +
        '  "browserstack.appiumLogs": true,\n' +
        '  "browserstack.local": true,\n' +
        '  "browserstack.console": "verbose",\n' +
        '  "browserstack.deviceLogs": true,\n' +
        '  "browserstack.appium_version": "2.0.1",\n' +
        '  "browserstack.idleTimeout": 300,\n' +
        '  "browserstack.acceptInsecureCerts": true,\n' +
        '  "appPackage": "kz.halyk.onlinebank.stage",\n' +
        '  "appActivity": "kz.halyk.onlinebank.ui_release4.screens.splash.SplashActivity"\n' +
        '}',
      level: 'INFO',
      test_run_uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f'
    }
  ]
} to 10526:0
2025-07-29T06:25:51.398Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:25:51Z [bstack1lll1l1lll1_opy_][INFO] - Remote Server Address being passed as : https://[REDACTED]:[REDACTED]@hub-cloud.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f'
    }
  ]
} to 10526:0
2025-07-29T06:25:51.409Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:25:51Z [bstack1lll1l1lll1_opy_][INFO] - Completed setup!',
      level: 'INFO',
      test_run_uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f'
    }
  ]
} to 10526:0
2025-07-29T06:25:51.417Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
      kind: 'TEST_LOG',
      message: "2025-07-29T06:25:51Z [bstack1lll1l1lll1_opy_][INFO] - driver.__init__ platform_index=1: args=() kwargs={'command_executor': 'https://hub-euw.browserstack.com/wd/hub', 'options': <selenium.webdriver.edge.options.Options object at 0x10c8d6490>, 'locator_converter': <appium.webdriver.locator_converter.AppiumLocatorConverter object at 0x10c8d5f90>, 'web_element_cls': <class 'appium.webdriver.webelement.WebElement'>, 'client_config': <appium.webdriver.client_config.AppiumClientConfig object at 0x10c8d5bd0>, 'keep_alive': True, 'file_detector': None}",
      level: 'INFO',
      test_run_uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f'
    }
  ]
} to 10526:0
2025-07-29T06:25:51.422Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:25:51Z [bstack1lll1l1lll1_opy_][WARNING] - hub_url=https://hub-euw.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f'
    }
  ]
} to 10526:0
2025-07-29T06:25:51.426Z CLI info [local:module]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  initSession: localIdentifier=Jul_29_1123_MacBook-Pro-00059362.local_r47k pid=10541
2025-07-29T06:25:51.628Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ APK: 403',
      level: 'INFO',
      test_run_uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d'
    }
  ]
} to 10526:0
2025-07-29T06:25:51.634Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
      kind: 'TEST_LOG',
      message: '–û—Ç–≤–µ—Ç: {"error":"[BROWSERSTACK_TESTING_TIME_LIMIT_EXHAUSTED]App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial."}',
      level: 'INFO',
      test_run_uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d'
    }
  ]
} to 10526:0
2025-07-29T06:25:51.666Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:25:51Z [utils.driver_factory][WARNING] - ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å APK, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
      level: 'INFO',
      test_run_uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d'
    }
  ]
} to 10526:0
2025-07-29T06:25:51.671Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
      kind: 'TEST_LOG',
      message: 'üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä BrowserStack –¥–ª—è android',
      level: 'INFO',
      test_run_uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d'
    }
  ]
} to 10526:0
2025-07-29T06:25:51.676Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
      kind: 'TEST_LOG',
      message: 'Capabilities: {\n' +
        '  "device": "Samsung Galaxy S22",\n' +
        '  "os_version": "12.0",\n' +
        '  "project": "Halyk Bank Tests",\n' +
        '  "build": "Android Build v1.0",\n' +
        '  "name": "Halyk Bank Android Test",\n' +
        '  "app": null,\n' +
        '  "browserstack.debug": true,\n' +
        '  "browserstack.video": true,\n' +
        '  "browserstack.networkLogs": true,\n' +
        '  "browserstack.appiumLogs": true,\n' +
        '  "browserstack.local": true,\n' +
        '  "browserstack.console": "verbose",\n' +
        '  "browserstack.deviceLogs": true,\n' +
        '  "browserstack.appium_version": "2.0.1",\n' +
        '  "browserstack.idleTimeout": 300,\n' +
        '  "browserstack.acceptInsecureCerts": true,\n' +
        '  "appPackage": "kz.halyk.onlinebank.stage",\n' +
        '  "appActivity": "kz.halyk.onlinebank.ui_release4.screens.splash.SplashActivity"\n' +
        '}',
      level: 'INFO',
      test_run_uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d'
    }
  ]
} to 10526:0
2025-07-29T06:25:51.682Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:25:51Z [bstack1lll1l1lll1_opy_][INFO] - Remote Server Address being passed as : https://[REDACTED]:[REDACTED]@hub-cloud.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d'
    }
  ]
} to 10526:0
2025-07-29T06:25:51.694Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:25:51Z [bstack1lll1l1lll1_opy_][INFO] - Completed setup!',
      level: 'INFO',
      test_run_uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d'
    }
  ]
} to 10526:0
2025-07-29T06:25:51.702Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
      kind: 'TEST_LOG',
      message: "2025-07-29T06:25:51Z [bstack1lll1l1lll1_opy_][INFO] - driver.__init__ platform_index=0: args=() kwargs={'command_executor': 'https://hub-euw.browserstack.com/wd/hub', 'options': <selenium.webdriver.chrome.options.Options object at 0x1059592b0>, 'locator_converter': <appium.webdriver.locator_converter.AppiumLocatorConverter object at 0x105959d30>, 'web_element_cls': <class 'appium.webdriver.webelement.WebElement'>, 'client_config': <appium.webdriver.client_config.AppiumClientConfig object at 0x105959be0>, 'keep_alive': True, 'file_detector': None}",
      level: 'INFO',
      test_run_uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d'
    }
  ]
} to 10526:0
2025-07-29T06:25:51.709Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:25:51Z [bstack1lll1l1lll1_opy_][WARNING] - hub_url=https://hub-euw.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d'
    }
  ]
} to 10526:0
2025-07-29T06:25:51.714Z CLI info [local:module]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  initSession: localIdentifier=Jul_29_1123_MacBook-Pro-00059362.local_r47k pid=10541
2025-07-29T06:25:52.637Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 10526:0
2025-07-29T06:25:52.638Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T06:25:52.770Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞ BrowserStack: Message: App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial.\n',
      level: 'INFO',
      test_run_uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f'
    }
  ]
} to 10526:0
2025-07-29T06:25:52.776Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:25:52Z [utils.driver_factory][ERROR] - ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å BrowserStack –¥—Ä–∞–π–≤–µ—Ä',
      level: 'INFO',
      test_run_uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f'
    }
  ]
} to 10526:0
2025-07-29T06:25:52.782Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:25:52Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      level: 'INFO',
      test_run_uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f'
    }
  ]
} to 10526:0
2025-07-29T06:25:52.804Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'd6b00a25-95b9-4f9f-8a58-caf97ca9ef0b',
    name: 'setup',
    result: 'failed',
    test_run_id: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:24:50.159Z',
    finished_at: '2025-07-29T06:25:52.798Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:25:52.812Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
      kind: 'TEST_LOG',
      message: '\x1B[31mE\x1B[0m',
      level: 'INFO',
      test_run_uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f'
    }
  ]
} to 10526:0
2025-07-29T06:25:52.831Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:25:52Z [bstack1lll111l11l_opy_][WARNING] - dropping due to lack of results False',
      level: 'INFO',
      test_run_uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f'
    }
  ]
} to 10526:0
2025-07-29T06:25:52.841Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'e060c867-f585-4d13-9ad5-6db2535b07a2',
    name: 'teardown',
    result: 'pending',
    test_run_id: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:25:52.835Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:25:52.846Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:25:52Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Samsung] (–∑–∞ 0.06—Å)',
      level: 'INFO',
      test_run_uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f'
    }
  ]
} to 10526:0
2025-07-29T06:25:52.852Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:25:52.830Z',
      uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
      kind: 'TEST_LOG',
      message: 'dropping due to lack of results False',
      level: 'WARNING',
      test_run_uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f'
    }
  ]
} to 10526:0
2025-07-29T06:25:52.852Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:25:52.844Z',
      uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Samsung] (–∑–∞ 0.06—Å)',
      level: 'INFO',
      test_run_uuid: '7169fcef-a6d2-43f0-8d15-41fbbe38397f'
    }
  ]
} to 10526:0
2025-07-29T06:25:52.870Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'e060c867-f585-4d13-9ad5-6db2535b07a2',
    name: 'teardown',
    result: 'passed',
    test_run_id: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:25:52.835Z',
    finished_at: '2025-07-29T06:25:52.856Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:25:52.878Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞ BrowserStack: Message: App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial.\n',
      level: 'INFO',
      test_run_uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d'
    }
  ]
} to 10526:0
2025-07-29T06:25:52.895Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'a04f677f-bc50-4ce7-9691-85fe157b8357',
    name: 'setup',
    result: 'pending',
    test_run_id: '5743f87c-bb06-4d6d-b26a-078d8833c172',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:25:52.891Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:25:52.906Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:25:52Z [conftest][INFO] - üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä –≤ —Ä–µ–∂–∏–º–µ: browserstack',
      level: 'INFO',
      test_run_uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172'
    }
  ]
} to 10526:0
2025-07-29T06:25:52.911Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:25:52Z [utils.driver_factory][INFO] - üåê –°–æ–∑–¥–∞–µ–º BrowserStack –¥—Ä–∞–π–≤–µ—Ä...',
      level: 'INFO',
      test_run_uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172'
    }
  ]
} to 10526:0
2025-07-29T06:25:52.915Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172',
      kind: 'TEST_LOG',
      message: 'üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º APK –≤ BrowserStack: /Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/apk/halyk_bank_app.apk',
      level: 'INFO',
      test_run_uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172'
    }
  ]
} to 10526:0
2025-07-29T06:25:53.384Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:25:53Z [utils.driver_factory][ERROR] - ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å BrowserStack –¥—Ä–∞–π–≤–µ—Ä',
      level: 'INFO',
      test_run_uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d'
    }
  ]
} to 10526:0
2025-07-29T06:25:53.392Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:25:53Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      level: 'INFO',
      test_run_uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d'
    }
  ]
} to 10526:0
2025-07-29T06:25:53.480Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '4d15b71a-5e22-46a3-ad6b-fa17300b12fd',
    name: 'setup',
    result: 'failed',
    test_run_id: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:23:52.683Z',
    finished_at: '2025-07-29T06:25:53.475Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:25:53.489Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
      kind: 'TEST_LOG',
      message: '\x1B[31mE\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d'
    }
  ]
} to 10526:0
2025-07-29T06:25:53.509Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:25:53Z [bstack1lll111l11l_opy_][WARNING] - dropping due to lack of results False',
      level: 'INFO',
      test_run_uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d'
    }
  ]
} to 10526:0
2025-07-29T06:25:53.519Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'e7aae1e7-18d3-456b-b3ce-419f15be52fb',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:25:53.513Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:25:53.524Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:25:53Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Samsung] (–∑–∞ 0.13—Å)',
      level: 'INFO',
      test_run_uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d'
    }
  ]
} to 10526:0
2025-07-29T06:25:53.532Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:25:53.508Z',
      uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
      kind: 'TEST_LOG',
      message: 'dropping due to lack of results False',
      level: 'WARNING',
      test_run_uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d'
    }
  ]
} to 10526:0
2025-07-29T06:25:53.532Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:25:53.523Z',
      uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Samsung] (–∑–∞ 0.13—Å)',
      level: 'INFO',
      test_run_uuid: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d'
    }
  ]
} to 10526:0
2025-07-29T06:25:53.551Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'e7aae1e7-18d3-456b-b3ce-419f15be52fb',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:25:53.513Z',
    finished_at: '2025-07-29T06:25:53.537Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:25:53.582Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'ddcca79b-0bf1-4c51-8fe3-31b84bc79239',
    name: 'setup',
    result: 'pending',
    test_run_id: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:25:53.578Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:25:53.596Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:25:53Z [conftest][INFO] - üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä –≤ —Ä–µ–∂–∏–º–µ: browserstack',
      level: 'INFO',
      test_run_uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05'
    }
  ]
} to 10526:0
2025-07-29T06:25:53.601Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:25:53Z [utils.driver_factory][INFO] - üåê –°–æ–∑–¥–∞–µ–º BrowserStack –¥—Ä–∞–π–≤–µ—Ä...',
      level: 'INFO',
      test_run_uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05'
    }
  ]
} to 10526:0
2025-07-29T06:25:53.605Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
      kind: 'TEST_LOG',
      message: 'üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º APK –≤ BrowserStack: /Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/apk/halyk_bank_app.apk',
      level: 'INFO',
      test_run_uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05'
    }
  ]
} to 10526:0
2025-07-29T06:25:54.638Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'd6b00a25-95b9-4f9f-8a58-caf97ca9ef0b',
      name: 'setup',
      result: 'failed',
      test_run_id: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:24:50.159Z',
      finished_at: '2025-07-29T06:25:52.798Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'e060c867-f585-4d13-9ad5-6db2535b07a2',
      name: 'teardown',
      result: 'pending',
      test_run_id: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:25:52.835Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'e060c867-f585-4d13-9ad5-6db2535b07a2',
      name: 'teardown',
      result: 'passed',
      test_run_id: '7169fcef-a6d2-43f0-8d15-41fbbe38397f',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:25:52.835Z',
      finished_at: '2025-07-29T06:25:52.856Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'a04f677f-bc50-4ce7-9691-85fe157b8357',
      name: 'setup',
      result: 'pending',
      test_run_id: '5743f87c-bb06-4d6d-b26a-078d8833c172',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:25:52.891Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '4d15b71a-5e22-46a3-ad6b-fa17300b12fd',
      name: 'setup',
      result: 'failed',
      test_run_id: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:23:52.683Z',
      finished_at: '2025-07-29T06:25:53.475Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'e7aae1e7-18d3-456b-b3ce-419f15be52fb',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:25:53.513Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'e7aae1e7-18d3-456b-b3ce-419f15be52fb',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'b7fad6ee-d0a2-4c3e-ba52-f52df8907c7d',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:25:53.513Z',
      finished_at: '2025-07-29T06:25:53.537Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'ddcca79b-0bf1-4c51-8fe3-31b84bc79239',
      name: 'setup',
      result: 'pending',
      test_run_id: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:25:53.578Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 10526:0
2025-07-29T06:25:54.639Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T06:26:00.163Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ APK: 403',
      level: 'INFO',
      test_run_uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303'
    }
  ]
} to 10526:0
2025-07-29T06:26:00.171Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
      kind: 'TEST_LOG',
      message: '–û—Ç–≤–µ—Ç: {"error":"[BROWSERSTACK_TESTING_TIME_LIMIT_EXHAUSTED]App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial."}',
      level: 'INFO',
      test_run_uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303'
    }
  ]
} to 10526:0
2025-07-29T06:26:00.200Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:26:00Z [utils.driver_factory][WARNING] - ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å APK, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
      level: 'INFO',
      test_run_uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303'
    }
  ]
} to 10526:0
2025-07-29T06:26:00.207Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
      kind: 'TEST_LOG',
      message: 'üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä BrowserStack –¥–ª—è android',
      level: 'INFO',
      test_run_uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303'
    }
  ]
} to 10526:0
2025-07-29T06:26:00.212Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
      kind: 'TEST_LOG',
      message: 'Capabilities: {\n' +
        '  "device": "Samsung Galaxy S22",\n' +
        '  "os_version": "12.0",\n' +
        '  "project": "Halyk Bank Tests",\n' +
        '  "build": "Android Build v1.0",\n' +
        '  "name": "Halyk Bank Android Test",\n' +
        '  "app": null,\n' +
        '  "browserstack.debug": true,\n' +
        '  "browserstack.video": true,\n' +
        '  "browserstack.networkLogs": true,\n' +
        '  "browserstack.appiumLogs": true,\n' +
        '  "browserstack.local": true,\n' +
        '  "browserstack.console": "verbose",\n' +
        '  "browserstack.deviceLogs": true,\n' +
        '  "browserstack.appium_version": "2.0.1",\n' +
        '  "browserstack.idleTimeout": 300,\n' +
        '  "browserstack.acceptInsecureCerts": true,\n' +
        '  "appPackage": "kz.halyk.onlinebank.stage",\n' +
        '  "appActivity": "kz.halyk.onlinebank.ui_release4.screens.splash.SplashActivity"\n' +
        '}',
      level: 'INFO',
      test_run_uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303'
    }
  ]
} to 10526:0
2025-07-29T06:26:00.220Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:26:00Z [bstack1lll1l1lll1_opy_][INFO] - Remote Server Address being passed as : https://[REDACTED]:[REDACTED]@hub-cloud.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303'
    }
  ]
} to 10526:0
2025-07-29T06:26:00.235Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:26:00Z [bstack1lll1l1lll1_opy_][INFO] - Completed setup!',
      level: 'INFO',
      test_run_uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303'
    }
  ]
} to 10526:0
2025-07-29T06:26:00.247Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
      kind: 'TEST_LOG',
      message: "2025-07-29T06:26:00Z [bstack1lll1l1lll1_opy_][INFO] - driver.__init__ platform_index=2: args=() kwargs={'command_executor': 'https://hub-euw.browserstack.com/wd/hub', 'options': <selenium.webdriver.chrome.options.Options object at 0x10ef592b0>, 'locator_converter': <appium.webdriver.locator_converter.AppiumLocatorConverter object at 0x10ef59d30>, 'web_element_cls': <class 'appium.webdriver.webelement.WebElement'>, 'client_config': <appium.webdriver.client_config.AppiumClientConfig object at 0x10ef59be0>, 'keep_alive': True, 'file_detector': None}",
      level: 'INFO',
      test_run_uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303'
    }
  ]
} to 10526:0
2025-07-29T06:26:00.256Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:26:00Z [bstack1lll1l1lll1_opy_][WARNING] - hub_url=https://hub-euw.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303'
    }
  ]
} to 10526:0
2025-07-29T06:26:00.262Z CLI info [local:module]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  initSession: localIdentifier=Jul_29_1123_MacBook-Pro-00059362.local_r47k pid=10541
2025-07-29T06:26:00.637Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 10526:0
2025-07-29T06:26:00.638Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T06:26:01.358Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞ BrowserStack: Message: App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial.\n',
      level: 'INFO',
      test_run_uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303'
    }
  ]
} to 10526:0
2025-07-29T06:26:01.366Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:26:01Z [utils.driver_factory][ERROR] - ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å BrowserStack –¥—Ä–∞–π–≤–µ—Ä',
      level: 'INFO',
      test_run_uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303'
    }
  ]
} to 10526:0
2025-07-29T06:26:01.374Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:26:01Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      level: 'INFO',
      test_run_uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303'
    }
  ]
} to 10526:0
2025-07-29T06:26:01.458Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '16aad46d-bc6a-44b4-ad4d-c90356c0acd3',
    name: 'setup',
    result: 'failed',
    test_run_id: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:23:52.623Z',
    finished_at: '2025-07-29T06:26:01.453Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:26:01.469Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
      kind: 'TEST_LOG',
      message: '\x1B[31mE\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303'
    }
  ]
} to 10526:0
2025-07-29T06:26:01.493Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:26:01Z [bstack1lll111l11l_opy_][WARNING] - dropping due to lack of results False',
      level: 'INFO',
      test_run_uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303'
    }
  ]
} to 10526:0
2025-07-29T06:26:01.504Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'e93d8ef5-ed02-4adc-adf4-33151a2cc1d5',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:26:01.499Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:26:01.511Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:26:01Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Samsung] (–∑–∞ 0.13—Å)',
      level: 'INFO',
      test_run_uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303'
    }
  ]
} to 10526:0
2025-07-29T06:26:01.519Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:26:01.491Z',
      uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
      kind: 'TEST_LOG',
      message: 'dropping due to lack of results False',
      level: 'WARNING',
      test_run_uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303'
    }
  ]
} to 10526:0
2025-07-29T06:26:01.519Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:26:01.509Z',
      uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Samsung] (–∑–∞ 0.13—Å)',
      level: 'INFO',
      test_run_uuid: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303'
    }
  ]
} to 10526:0
2025-07-29T06:26:01.540Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'e93d8ef5-ed02-4adc-adf4-33151a2cc1d5',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:26:01.499Z',
    finished_at: '2025-07-29T06:26:01.526Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:26:01.572Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'eb8b1db5-67d9-48ab-9159-8ca89c4284f4',
    name: 'setup',
    result: 'pending',
    test_run_id: '593d58ca-a56d-4355-a114-58a82252e5ac',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:26:01.569Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:26:01.586Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '593d58ca-a56d-4355-a114-58a82252e5ac',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:26:01Z [conftest][INFO] - üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä –≤ —Ä–µ–∂–∏–º–µ: browserstack',
      level: 'INFO',
      test_run_uuid: '593d58ca-a56d-4355-a114-58a82252e5ac'
    }
  ]
} to 10526:0
2025-07-29T06:26:01.592Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '593d58ca-a56d-4355-a114-58a82252e5ac',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:26:01Z [utils.driver_factory][INFO] - üåê –°–æ–∑–¥–∞–µ–º BrowserStack –¥—Ä–∞–π–≤–µ—Ä...',
      level: 'INFO',
      test_run_uuid: '593d58ca-a56d-4355-a114-58a82252e5ac'
    }
  ]
} to 10526:0
2025-07-29T06:26:01.598Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '593d58ca-a56d-4355-a114-58a82252e5ac',
      kind: 'TEST_LOG',
      message: 'üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º APK –≤ BrowserStack: /Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/apk/halyk_bank_app.apk',
      level: 'INFO',
      test_run_uuid: '593d58ca-a56d-4355-a114-58a82252e5ac'
    }
  ]
} to 10526:0
2025-07-29T06:26:02.637Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '16aad46d-bc6a-44b4-ad4d-c90356c0acd3',
      name: 'setup',
      result: 'failed',
      test_run_id: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:23:52.623Z',
      finished_at: '2025-07-29T06:26:01.453Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'e93d8ef5-ed02-4adc-adf4-33151a2cc1d5',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:26:01.499Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'e93d8ef5-ed02-4adc-adf4-33151a2cc1d5',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'e8a78b02-fc57-4f63-99e9-5bb7ed52a303',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:26:01.499Z',
      finished_at: '2025-07-29T06:26:01.526Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'eb8b1db5-67d9-48ab-9159-8ca89c4284f4',
      name: 'setup',
      result: 'pending',
      test_run_id: '593d58ca-a56d-4355-a114-58a82252e5ac',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:26:01.569Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 10526:0
2025-07-29T06:26:02.637Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T06:27:13.085Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '593d58ca-a56d-4355-a114-58a82252e5ac',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ APK: 403',
      level: 'INFO',
      test_run_uuid: '593d58ca-a56d-4355-a114-58a82252e5ac'
    }
  ]
} to 10526:0
2025-07-29T06:27:13.093Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '593d58ca-a56d-4355-a114-58a82252e5ac',
      kind: 'TEST_LOG',
      message: '–û—Ç–≤–µ—Ç: {"error":"[BROWSERSTACK_TESTING_TIME_LIMIT_EXHAUSTED]App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial."}',
      level: 'INFO',
      test_run_uuid: '593d58ca-a56d-4355-a114-58a82252e5ac'
    }
  ]
} to 10526:0
2025-07-29T06:27:13.126Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '593d58ca-a56d-4355-a114-58a82252e5ac',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:27:13Z [utils.driver_factory][WARNING] - ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å APK, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
      level: 'INFO',
      test_run_uuid: '593d58ca-a56d-4355-a114-58a82252e5ac'
    }
  ]
} to 10526:0
2025-07-29T06:27:13.135Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '593d58ca-a56d-4355-a114-58a82252e5ac',
      kind: 'TEST_LOG',
      message: 'üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä BrowserStack –¥–ª—è android',
      level: 'INFO',
      test_run_uuid: '593d58ca-a56d-4355-a114-58a82252e5ac'
    }
  ]
} to 10526:0
2025-07-29T06:27:13.143Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '593d58ca-a56d-4355-a114-58a82252e5ac',
      kind: 'TEST_LOG',
      message: 'Capabilities: {\n' +
        '  "device": "Samsung Galaxy S22",\n' +
        '  "os_version": "12.0",\n' +
        '  "project": "Halyk Bank Tests",\n' +
        '  "build": "Android Build v1.0",\n' +
        '  "name": "Halyk Bank Android Test",\n' +
        '  "app": null,\n' +
        '  "browserstack.debug": true,\n' +
        '  "browserstack.video": true,\n' +
        '  "browserstack.networkLogs": true,\n' +
        '  "browserstack.appiumLogs": true,\n' +
        '  "browserstack.local": true,\n' +
        '  "browserstack.console": "verbose",\n' +
        '  "browserstack.deviceLogs": true,\n' +
        '  "browserstack.appium_version": "2.0.1",\n' +
        '  "browserstack.idleTimeout": 300,\n' +
        '  "browserstack.acceptInsecureCerts": true,\n' +
        '  "appPackage": "kz.halyk.onlinebank.stage",\n' +
        '  "appActivity": "kz.halyk.onlinebank.ui_release4.screens.splash.SplashActivity"\n' +
        '}',
      level: 'INFO',
      test_run_uuid: '593d58ca-a56d-4355-a114-58a82252e5ac'
    }
  ]
} to 10526:0
2025-07-29T06:27:13.153Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '593d58ca-a56d-4355-a114-58a82252e5ac',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:27:13Z [bstack1lll1l1lll1_opy_][INFO] - Remote Server Address being passed as : https://[REDACTED]:[REDACTED]@hub-cloud.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: '593d58ca-a56d-4355-a114-58a82252e5ac'
    }
  ]
} to 10526:0
2025-07-29T06:27:13.171Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '593d58ca-a56d-4355-a114-58a82252e5ac',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:27:13Z [bstack1lll1l1lll1_opy_][INFO] - Completed setup!',
      level: 'INFO',
      test_run_uuid: '593d58ca-a56d-4355-a114-58a82252e5ac'
    }
  ]
} to 10526:0
2025-07-29T06:27:13.185Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '593d58ca-a56d-4355-a114-58a82252e5ac',
      kind: 'TEST_LOG',
      message: "2025-07-29T06:27:13Z [bstack1lll1l1lll1_opy_][INFO] - driver.__init__ platform_index=2: args=() kwargs={'command_executor': 'https://hub-euw.browserstack.com/wd/hub', 'options': <selenium.webdriver.chrome.options.Options object at 0x10f01e210>, 'locator_converter': <appium.webdriver.locator_converter.AppiumLocatorConverter object at 0x10f01dd10>, 'web_element_cls': <class 'appium.webdriver.webelement.WebElement'>, 'client_config': <appium.webdriver.client_config.AppiumClientConfig object at 0x10f01d950>, 'keep_alive': True, 'file_detector': None}",
      level: 'INFO',
      test_run_uuid: '593d58ca-a56d-4355-a114-58a82252e5ac'
    }
  ]
} to 10526:0
2025-07-29T06:27:13.195Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '593d58ca-a56d-4355-a114-58a82252e5ac',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:27:13Z [bstack1lll1l1lll1_opy_][WARNING] - hub_url=https://hub-euw.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: '593d58ca-a56d-4355-a114-58a82252e5ac'
    }
  ]
} to 10526:0
2025-07-29T06:27:13.202Z CLI info [local:module]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  initSession: localIdentifier=Jul_29_1123_MacBook-Pro-00059362.local_r47k pid=10541
2025-07-29T06:27:14.440Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '593d58ca-a56d-4355-a114-58a82252e5ac',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞ BrowserStack: Message: App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial.\n',
      level: 'INFO',
      test_run_uuid: '593d58ca-a56d-4355-a114-58a82252e5ac'
    }
  ]
} to 10526:0
2025-07-29T06:27:14.447Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '593d58ca-a56d-4355-a114-58a82252e5ac',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:27:14Z [utils.driver_factory][ERROR] - ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å BrowserStack –¥—Ä–∞–π–≤–µ—Ä',
      level: 'INFO',
      test_run_uuid: '593d58ca-a56d-4355-a114-58a82252e5ac'
    }
  ]
} to 10526:0
2025-07-29T06:27:14.455Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '593d58ca-a56d-4355-a114-58a82252e5ac',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:27:14Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      level: 'INFO',
      test_run_uuid: '593d58ca-a56d-4355-a114-58a82252e5ac'
    }
  ]
} to 10526:0
2025-07-29T06:27:14.482Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'eb8b1db5-67d9-48ab-9159-8ca89c4284f4',
    name: 'setup',
    result: 'failed',
    test_run_id: '593d58ca-a56d-4355-a114-58a82252e5ac',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:26:01.569Z',
    finished_at: '2025-07-29T06:27:14.477Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:27:14.495Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '593d58ca-a56d-4355-a114-58a82252e5ac',
      kind: 'TEST_LOG',
      message: '\x1B[31mE\x1B[0m',
      level: 'INFO',
      test_run_uuid: '593d58ca-a56d-4355-a114-58a82252e5ac'
    }
  ]
} to 10526:0
2025-07-29T06:27:14.521Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '593d58ca-a56d-4355-a114-58a82252e5ac',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:27:14Z [bstack1lll111l11l_opy_][WARNING] - dropping due to lack of results False',
      level: 'INFO',
      test_run_uuid: '593d58ca-a56d-4355-a114-58a82252e5ac'
    }
  ]
} to 10526:0
2025-07-29T06:27:14.533Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '8de37b56-6a0c-4802-b75d-cadf57137932',
    name: 'teardown',
    result: 'pending',
    test_run_id: '593d58ca-a56d-4355-a114-58a82252e5ac',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:27:14.527Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:27:14.541Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '593d58ca-a56d-4355-a114-58a82252e5ac',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:27:14Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Samsung] (–∑–∞ 0.08—Å)',
      level: 'INFO',
      test_run_uuid: '593d58ca-a56d-4355-a114-58a82252e5ac'
    }
  ]
} to 10526:0
2025-07-29T06:27:14.548Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:27:14.520Z',
      uuid: '593d58ca-a56d-4355-a114-58a82252e5ac',
      kind: 'TEST_LOG',
      message: 'dropping due to lack of results False',
      level: 'WARNING',
      test_run_uuid: '593d58ca-a56d-4355-a114-58a82252e5ac'
    }
  ]
} to 10526:0
2025-07-29T06:27:14.549Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:27:14.539Z',
      uuid: '593d58ca-a56d-4355-a114-58a82252e5ac',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Samsung] (–∑–∞ 0.08—Å)',
      level: 'INFO',
      test_run_uuid: '593d58ca-a56d-4355-a114-58a82252e5ac'
    }
  ]
} to 10526:0
2025-07-29T06:27:14.567Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '8de37b56-6a0c-4802-b75d-cadf57137932',
    name: 'teardown',
    result: 'passed',
    test_run_id: '593d58ca-a56d-4355-a114-58a82252e5ac',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:27:14.527Z',
    finished_at: '2025-07-29T06:27:14.554Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:27:14.601Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '0a3208b4-3654-42e0-807a-f05d432634ca',
    name: 'setup',
    result: 'pending',
    test_run_id: '85c7b537-1a8f-42d6-a452-4a4c7491266b',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:27:14.597Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:27:14.616Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '85c7b537-1a8f-42d6-a452-4a4c7491266b',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:27:14Z [conftest][INFO] - üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä –≤ —Ä–µ–∂–∏–º–µ: browserstack',
      level: 'INFO',
      test_run_uuid: '85c7b537-1a8f-42d6-a452-4a4c7491266b'
    }
  ]
} to 10526:0
2025-07-29T06:27:14.625Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '85c7b537-1a8f-42d6-a452-4a4c7491266b',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:27:14Z [utils.driver_factory][INFO] - üåê –°–æ–∑–¥–∞–µ–º BrowserStack –¥—Ä–∞–π–≤–µ—Ä...',
      level: 'INFO',
      test_run_uuid: '85c7b537-1a8f-42d6-a452-4a4c7491266b'
    }
  ]
} to 10526:0
2025-07-29T06:27:14.636Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '85c7b537-1a8f-42d6-a452-4a4c7491266b',
      kind: 'TEST_LOG',
      message: 'üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º APK –≤ BrowserStack: /Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/apk/halyk_bank_app.apk',
      level: 'INFO',
      test_run_uuid: '85c7b537-1a8f-42d6-a452-4a4c7491266b'
    }
  ]
} to 10526:0
2025-07-29T06:27:14.650Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'eb8b1db5-67d9-48ab-9159-8ca89c4284f4',
      name: 'setup',
      result: 'failed',
      test_run_id: '593d58ca-a56d-4355-a114-58a82252e5ac',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:26:01.569Z',
      finished_at: '2025-07-29T06:27:14.477Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '8de37b56-6a0c-4802-b75d-cadf57137932',
      name: 'teardown',
      result: 'pending',
      test_run_id: '593d58ca-a56d-4355-a114-58a82252e5ac',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:27:14.527Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '8de37b56-6a0c-4802-b75d-cadf57137932',
      name: 'teardown',
      result: 'passed',
      test_run_id: '593d58ca-a56d-4355-a114-58a82252e5ac',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:27:14.527Z',
      finished_at: '2025-07-29T06:27:14.554Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '0a3208b4-3654-42e0-807a-f05d432634ca',
      name: 'setup',
      result: 'pending',
      test_run_id: '85c7b537-1a8f-42d6-a452-4a4c7491266b',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:27:14.597Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 10526:0
2025-07-29T06:27:14.654Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T06:27:19.901Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ APK: 403',
      level: 'INFO',
      test_run_uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172'
    }
  ]
} to 10526:0
2025-07-29T06:27:19.911Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172',
      kind: 'TEST_LOG',
      message: '–û—Ç–≤–µ—Ç: {"error":"[BROWSERSTACK_TESTING_TIME_LIMIT_EXHAUSTED]App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial."}',
      level: 'INFO',
      test_run_uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172'
    }
  ]
} to 10526:0
2025-07-29T06:27:19.939Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:27:19Z [utils.driver_factory][WARNING] - ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å APK, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
      level: 'INFO',
      test_run_uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172'
    }
  ]
} to 10526:0
2025-07-29T06:27:19.947Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172',
      kind: 'TEST_LOG',
      message: 'üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä BrowserStack –¥–ª—è android',
      level: 'INFO',
      test_run_uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172'
    }
  ]
} to 10526:0
2025-07-29T06:27:19.955Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172',
      kind: 'TEST_LOG',
      message: 'Capabilities: {\n' +
        '  "device": "Samsung Galaxy S22",\n' +
        '  "os_version": "12.0",\n' +
        '  "project": "Halyk Bank Tests",\n' +
        '  "build": "Android Build v1.0",\n' +
        '  "name": "Halyk Bank Android Test",\n' +
        '  "app": null,\n' +
        '  "browserstack.debug": true,\n' +
        '  "browserstack.video": true,\n' +
        '  "browserstack.networkLogs": true,\n' +
        '  "browserstack.appiumLogs": true,\n' +
        '  "browserstack.local": true,\n' +
        '  "browserstack.console": "verbose",\n' +
        '  "browserstack.deviceLogs": true,\n' +
        '  "browserstack.appium_version": "2.0.1",\n' +
        '  "browserstack.idleTimeout": 300,\n' +
        '  "browserstack.acceptInsecureCerts": true,\n' +
        '  "appPackage": "kz.halyk.onlinebank.stage",\n' +
        '  "appActivity": "kz.halyk.onlinebank.ui_release4.screens.splash.SplashActivity"\n' +
        '}',
      level: 'INFO',
      test_run_uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172'
    }
  ]
} to 10526:0
2025-07-29T06:27:19.963Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:27:19Z [bstack1lll1l1lll1_opy_][INFO] - Remote Server Address being passed as : https://[REDACTED]:[REDACTED]@hub-cloud.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172'
    }
  ]
} to 10526:0
2025-07-29T06:27:19.980Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:27:19Z [bstack1lll1l1lll1_opy_][INFO] - Completed setup!',
      level: 'INFO',
      test_run_uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172'
    }
  ]
} to 10526:0
2025-07-29T06:27:19.995Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172',
      kind: 'TEST_LOG',
      message: "2025-07-29T06:27:19Z [bstack1lll1l1lll1_opy_][INFO] - driver.__init__ platform_index=1: args=() kwargs={'command_executor': 'https://hub-euw.browserstack.com/wd/hub', 'options': <selenium.webdriver.edge.options.Options object at 0x10c8d7b10>, 'locator_converter': <appium.webdriver.locator_converter.AppiumLocatorConverter object at 0x10c8d7750>, 'web_element_cls': <class 'appium.webdriver.webelement.WebElement'>, 'client_config': <appium.webdriver.client_config.AppiumClientConfig object at 0x10c8d7610>, 'keep_alive': True, 'file_detector': None}",
      level: 'INFO',
      test_run_uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172'
    }
  ]
} to 10526:0
2025-07-29T06:27:20.003Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:27:20Z [bstack1lll1l1lll1_opy_][WARNING] - hub_url=https://hub-euw.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172'
    }
  ]
} to 10526:0
2025-07-29T06:27:20.009Z CLI info [local:module]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  initSession: localIdentifier=Jul_29_1123_MacBook-Pro-00059362.local_r47k pid=10541
2025-07-29T06:27:20.655Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 10526:0
2025-07-29T06:27:20.656Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T06:27:21.165Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞ BrowserStack: Message: App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial.\n',
      level: 'INFO',
      test_run_uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172'
    }
  ]
} to 10526:0
2025-07-29T06:27:21.175Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:27:21Z [utils.driver_factory][ERROR] - ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å BrowserStack –¥—Ä–∞–π–≤–µ—Ä',
      level: 'INFO',
      test_run_uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172'
    }
  ]
} to 10526:0
2025-07-29T06:27:21.184Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:27:21Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      level: 'INFO',
      test_run_uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172'
    }
  ]
} to 10526:0
2025-07-29T06:27:21.203Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'a04f677f-bc50-4ce7-9691-85fe157b8357',
    name: 'setup',
    result: 'failed',
    test_run_id: '5743f87c-bb06-4d6d-b26a-078d8833c172',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:25:52.891Z',
    finished_at: '2025-07-29T06:27:21.198Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:27:21.217Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172',
      kind: 'TEST_LOG',
      message: '\x1B[31mE\x1B[0m',
      level: 'INFO',
      test_run_uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172'
    }
  ]
} to 10526:0
2025-07-29T06:27:21.245Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:27:21Z [bstack1lll111l11l_opy_][WARNING] - dropping due to lack of results False',
      level: 'INFO',
      test_run_uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172'
    }
  ]
} to 10526:0
2025-07-29T06:27:21.257Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '221a1d54-376b-4762-b5a7-ef95981f09ea',
    name: 'teardown',
    result: 'pending',
    test_run_id: '5743f87c-bb06-4d6d-b26a-078d8833c172',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:27:21.251Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:27:21.265Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:27:21Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Pixel] (–∑–∞ 0.07—Å)',
      level: 'INFO',
      test_run_uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172'
    }
  ]
} to 10526:0
2025-07-29T06:27:21.273Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:27:21.244Z',
      uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172',
      kind: 'TEST_LOG',
      message: 'dropping due to lack of results False',
      level: 'WARNING',
      test_run_uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172'
    }
  ]
} to 10526:0
2025-07-29T06:27:21.273Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:27:21.264Z',
      uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Pixel] (–∑–∞ 0.07—Å)',
      level: 'INFO',
      test_run_uuid: '5743f87c-bb06-4d6d-b26a-078d8833c172'
    }
  ]
} to 10526:0
2025-07-29T06:27:21.291Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '221a1d54-376b-4762-b5a7-ef95981f09ea',
    name: 'teardown',
    result: 'passed',
    test_run_id: '5743f87c-bb06-4d6d-b26a-078d8833c172',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:27:21.251Z',
    finished_at: '2025-07-29T06:27:21.279Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:27:21.324Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '86f94adb-a5a7-4251-a02a-97ab9caf269a',
    name: 'setup',
    result: 'pending',
    test_run_id: 'aa13c835-17cd-4aa6-8475-3652d555cd40',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:27:21.320Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:27:21.337Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'aa13c835-17cd-4aa6-8475-3652d555cd40',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:27:21Z [conftest][INFO] - üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä –≤ —Ä–µ–∂–∏–º–µ: browserstack',
      level: 'INFO',
      test_run_uuid: 'aa13c835-17cd-4aa6-8475-3652d555cd40'
    }
  ]
} to 10526:0
2025-07-29T06:27:21.343Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'aa13c835-17cd-4aa6-8475-3652d555cd40',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:27:21Z [utils.driver_factory][INFO] - üåê –°–æ–∑–¥–∞–µ–º BrowserStack –¥—Ä–∞–π–≤–µ—Ä...',
      level: 'INFO',
      test_run_uuid: 'aa13c835-17cd-4aa6-8475-3652d555cd40'
    }
  ]
} to 10526:0
2025-07-29T06:27:21.350Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'aa13c835-17cd-4aa6-8475-3652d555cd40',
      kind: 'TEST_LOG',
      message: 'üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º APK –≤ BrowserStack: /Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/apk/halyk_bank_app.apk',
      level: 'INFO',
      test_run_uuid: 'aa13c835-17cd-4aa6-8475-3652d555cd40'
    }
  ]
} to 10526:0
2025-07-29T06:27:22.656Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'a04f677f-bc50-4ce7-9691-85fe157b8357',
      name: 'setup',
      result: 'failed',
      test_run_id: '5743f87c-bb06-4d6d-b26a-078d8833c172',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:25:52.891Z',
      finished_at: '2025-07-29T06:27:21.198Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '221a1d54-376b-4762-b5a7-ef95981f09ea',
      name: 'teardown',
      result: 'pending',
      test_run_id: '5743f87c-bb06-4d6d-b26a-078d8833c172',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:27:21.251Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '221a1d54-376b-4762-b5a7-ef95981f09ea',
      name: 'teardown',
      result: 'passed',
      test_run_id: '5743f87c-bb06-4d6d-b26a-078d8833c172',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:27:21.251Z',
      finished_at: '2025-07-29T06:27:21.279Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '86f94adb-a5a7-4251-a02a-97ab9caf269a',
      name: 'setup',
      result: 'pending',
      test_run_id: 'aa13c835-17cd-4aa6-8475-3652d555cd40',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:27:21.320Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 10526:0
2025-07-29T06:27:22.657Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T06:28:00.979Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ APK: 403',
      level: 'INFO',
      test_run_uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05'
    }
  ]
} to 10526:0
2025-07-29T06:28:00.990Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
      kind: 'TEST_LOG',
      message: '–û—Ç–≤–µ—Ç: {"error":"[BROWSERSTACK_TESTING_TIME_LIMIT_EXHAUSTED]App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial."}',
      level: 'INFO',
      test_run_uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05'
    }
  ]
} to 10526:0
2025-07-29T06:28:01.015Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:28:01Z [utils.driver_factory][WARNING] - ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å APK, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
      level: 'INFO',
      test_run_uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05'
    }
  ]
} to 10526:0
2025-07-29T06:28:01.023Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
      kind: 'TEST_LOG',
      message: 'üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä BrowserStack –¥–ª—è android',
      level: 'INFO',
      test_run_uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05'
    }
  ]
} to 10526:0
2025-07-29T06:28:01.031Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
      kind: 'TEST_LOG',
      message: 'Capabilities: {\n' +
        '  "device": "Samsung Galaxy S22",\n' +
        '  "os_version": "12.0",\n' +
        '  "project": "Halyk Bank Tests",\n' +
        '  "build": "Android Build v1.0",\n' +
        '  "name": "Halyk Bank Android Test",\n' +
        '  "app": null,\n' +
        '  "browserstack.debug": true,\n' +
        '  "browserstack.video": true,\n' +
        '  "browserstack.networkLogs": true,\n' +
        '  "browserstack.appiumLogs": true,\n' +
        '  "browserstack.local": true,\n' +
        '  "browserstack.console": "verbose",\n' +
        '  "browserstack.deviceLogs": true,\n' +
        '  "browserstack.appium_version": "2.0.1",\n' +
        '  "browserstack.idleTimeout": 300,\n' +
        '  "browserstack.acceptInsecureCerts": true,\n' +
        '  "appPackage": "kz.halyk.onlinebank.stage",\n' +
        '  "appActivity": "kz.halyk.onlinebank.ui_release4.screens.splash.SplashActivity"\n' +
        '}',
      level: 'INFO',
      test_run_uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05'
    }
  ]
} to 10526:0
2025-07-29T06:28:01.040Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:28:01Z [bstack1lll1l1lll1_opy_][INFO] - Remote Server Address being passed as : https://[REDACTED]:[REDACTED]@hub-cloud.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05'
    }
  ]
} to 10526:0
2025-07-29T06:28:01.059Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:28:01Z [bstack1lll1l1lll1_opy_][INFO] - Completed setup!',
      level: 'INFO',
      test_run_uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05'
    }
  ]
} to 10526:0
2025-07-29T06:28:01.075Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
      kind: 'TEST_LOG',
      message: "2025-07-29T06:28:01Z [bstack1lll1l1lll1_opy_][INFO] - driver.__init__ platform_index=0: args=() kwargs={'command_executor': 'https://hub-euw.browserstack.com/wd/hub', 'options': <selenium.webdriver.chrome.options.Options object at 0x105e22490>, 'locator_converter': <appium.webdriver.locator_converter.AppiumLocatorConverter object at 0x105e21f90>, 'web_element_cls': <class 'appium.webdriver.webelement.WebElement'>, 'client_config': <appium.webdriver.client_config.AppiumClientConfig object at 0x105e21bd0>, 'keep_alive': True, 'file_detector': None}",
      level: 'INFO',
      test_run_uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05'
    }
  ]
} to 10526:0
2025-07-29T06:28:01.084Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:28:01Z [bstack1lll1l1lll1_opy_][WARNING] - hub_url=https://hub-euw.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05'
    }
  ]
} to 10526:0
2025-07-29T06:28:01.091Z CLI info [local:module]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  initSession: localIdentifier=Jul_29_1123_MacBook-Pro-00059362.local_r47k pid=10541
2025-07-29T06:28:02.143Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞ BrowserStack: Message: App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial.\n',
      level: 'INFO',
      test_run_uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05'
    }
  ]
} to 10526:0
2025-07-29T06:28:02.151Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:28:02Z [utils.driver_factory][ERROR] - ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å BrowserStack –¥—Ä–∞–π–≤–µ—Ä',
      level: 'INFO',
      test_run_uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05'
    }
  ]
} to 10526:0
2025-07-29T06:28:02.172Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:28:02Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      level: 'INFO',
      test_run_uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05'
    }
  ]
} to 10526:0
2025-07-29T06:28:02.198Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'ddcca79b-0bf1-4c51-8fe3-31b84bc79239',
    name: 'setup',
    result: 'failed',
    test_run_id: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:25:53.578Z',
    finished_at: '2025-07-29T06:28:02.193Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:28:02.221Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
      kind: 'TEST_LOG',
      message: '\x1B[31mE\x1B[0m',
      level: 'INFO',
      test_run_uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05'
    }
  ]
} to 10526:0
2025-07-29T06:28:02.257Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:28:02Z [bstack1lll111l11l_opy_][WARNING] - dropping due to lack of results False',
      level: 'INFO',
      test_run_uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05'
    }
  ]
} to 10526:0
2025-07-29T06:28:02.275Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '3d6ea3e2-aff9-4539-a053-01fa9350ce16',
    name: 'teardown',
    result: 'pending',
    test_run_id: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:28:02.270Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:28:02.283Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:28:02Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Samsung] (–∑–∞ 0.10—Å)',
      level: 'INFO',
      test_run_uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05'
    }
  ]
} to 10526:0
2025-07-29T06:28:02.293Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:28:02.255Z',
      uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
      kind: 'TEST_LOG',
      message: 'dropping due to lack of results False',
      level: 'WARNING',
      test_run_uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05'
    }
  ]
} to 10526:0
2025-07-29T06:28:02.293Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:28:02.282Z',
      uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Samsung] (–∑–∞ 0.10—Å)',
      level: 'INFO',
      test_run_uuid: '972a16c6-39f2-45ee-8afd-dee3ec0acf05'
    }
  ]
} to 10526:0
2025-07-29T06:28:02.319Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '3d6ea3e2-aff9-4539-a053-01fa9350ce16',
    name: 'teardown',
    result: 'passed',
    test_run_id: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:28:02.270Z',
    finished_at: '2025-07-29T06:28:02.301Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:28:02.356Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '923cf41e-824d-4d66-b41a-f8af7484963c',
    name: 'setup',
    result: 'pending',
    test_run_id: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:28:02.352Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:28:02.375Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:28:02Z [conftest][INFO] - üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä –≤ —Ä–µ–∂–∏–º–µ: browserstack',
      level: 'INFO',
      test_run_uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1'
    }
  ]
} to 10526:0
2025-07-29T06:28:02.382Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:28:02Z [utils.driver_factory][INFO] - üåê –°–æ–∑–¥–∞–µ–º BrowserStack –¥—Ä–∞–π–≤–µ—Ä...',
      level: 'INFO',
      test_run_uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1'
    }
  ]
} to 10526:0
2025-07-29T06:28:02.390Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
      kind: 'TEST_LOG',
      message: 'üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º APK –≤ BrowserStack: /Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/apk/halyk_bank_app.apk',
      level: 'INFO',
      test_run_uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1'
    }
  ]
} to 10526:0
2025-07-29T06:28:02.664Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'ddcca79b-0bf1-4c51-8fe3-31b84bc79239',
      name: 'setup',
      result: 'failed',
      test_run_id: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:25:53.578Z',
      finished_at: '2025-07-29T06:28:02.193Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '3d6ea3e2-aff9-4539-a053-01fa9350ce16',
      name: 'teardown',
      result: 'pending',
      test_run_id: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:28:02.270Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '3d6ea3e2-aff9-4539-a053-01fa9350ce16',
      name: 'teardown',
      result: 'passed',
      test_run_id: '972a16c6-39f2-45ee-8afd-dee3ec0acf05',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:28:02.270Z',
      finished_at: '2025-07-29T06:28:02.301Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '923cf41e-824d-4d66-b41a-f8af7484963c',
      name: 'setup',
      result: 'pending',
      test_run_id: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:28:02.352Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 10526:0
2025-07-29T06:28:02.666Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T06:42:26.776Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'aa13c835-17cd-4aa6-8475-3652d555cd40',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:42:26Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      level: 'INFO',
      test_run_uuid: 'aa13c835-17cd-4aa6-8475-3652d555cd40'
    }
  ]
} to 10526:0
2025-07-29T06:42:27.830Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Processing batch event [ { event_type: 'LogCreated', logs: [ [Object] ] } ] to 10526:0
2025-07-29T06:42:27.830Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T06:42:29.171Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '86f94adb-a5a7-4251-a02a-97ab9caf269a',
    name: 'setup',
    result: 'failed',
    test_run_id: 'aa13c835-17cd-4aa6-8475-3652d555cd40',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:27:21.320Z',
    finished_at: '2025-07-29T06:42:29.166Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:42:29.188Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'aa13c835-17cd-4aa6-8475-3652d555cd40',
      kind: 'TEST_LOG',
      message: '\x1B[31mE\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'aa13c835-17cd-4aa6-8475-3652d555cd40'
    }
  ]
} to 10526:0
2025-07-29T06:42:29.222Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'aa13c835-17cd-4aa6-8475-3652d555cd40',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:42:29Z [bstack1lll111l11l_opy_][WARNING] - dropping due to lack of results False',
      level: 'INFO',
      test_run_uuid: 'aa13c835-17cd-4aa6-8475-3652d555cd40'
    }
  ]
} to 10526:0
2025-07-29T06:42:29.236Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '34b70586-1f32-4166-85c4-63bb6bf332e8',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'aa13c835-17cd-4aa6-8475-3652d555cd40',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:42:29.230Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:42:29.245Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'aa13c835-17cd-4aa6-8475-3652d555cd40',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:42:29Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Pixel] (–∑–∞ 2.46—Å)',
      level: 'INFO',
      test_run_uuid: 'aa13c835-17cd-4aa6-8475-3652d555cd40'
    }
  ]
} to 10526:0
2025-07-29T06:42:29.256Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:42:29.220Z',
      uuid: 'aa13c835-17cd-4aa6-8475-3652d555cd40',
      kind: 'TEST_LOG',
      message: 'dropping due to lack of results False',
      level: 'WARNING',
      test_run_uuid: 'aa13c835-17cd-4aa6-8475-3652d555cd40'
    }
  ]
} to 10526:0
2025-07-29T06:42:29.256Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:42:29.244Z',
      uuid: 'aa13c835-17cd-4aa6-8475-3652d555cd40',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Pixel] (–∑–∞ 2.46—Å)',
      level: 'INFO',
      test_run_uuid: 'aa13c835-17cd-4aa6-8475-3652d555cd40'
    }
  ]
} to 10526:0
2025-07-29T06:42:29.275Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '34b70586-1f32-4166-85c4-63bb6bf332e8',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'aa13c835-17cd-4aa6-8475-3652d555cd40',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:42:29.230Z',
    finished_at: '2025-07-29T06:42:29.265Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:42:29.320Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'ada57beb-4cad-47e1-8263-e09fa1ce55ee',
    name: 'setup',
    result: 'pending',
    test_run_id: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:42:29.316Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:42:29.337Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:42:29Z [conftest][INFO] - üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä –≤ —Ä–µ–∂–∏–º–µ: browserstack',
      level: 'INFO',
      test_run_uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c'
    }
  ]
} to 10526:0
2025-07-29T06:42:29.346Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:42:29Z [utils.driver_factory][INFO] - üåê –°–æ–∑–¥–∞–µ–º BrowserStack –¥—Ä–∞–π–≤–µ—Ä...',
      level: 'INFO',
      test_run_uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c'
    }
  ]
} to 10526:0
2025-07-29T06:42:29.355Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
      kind: 'TEST_LOG',
      message: 'üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º APK –≤ BrowserStack: /Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/apk/halyk_bank_app.apk',
      level: 'INFO',
      test_run_uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c'
    }
  ]
} to 10526:0
2025-07-29T06:42:29.513Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '85c7b537-1a8f-42d6-a452-4a4c7491266b',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:42:29Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      level: 'INFO',
      test_run_uuid: '85c7b537-1a8f-42d6-a452-4a4c7491266b'
    }
  ]
} to 10526:0
2025-07-29T06:42:29.831Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Processing batch event [
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '86f94adb-a5a7-4251-a02a-97ab9caf269a',
      name: 'setup',
      result: 'failed',
      test_run_id: 'aa13c835-17cd-4aa6-8475-3652d555cd40',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:27:21.320Z',
      finished_at: '2025-07-29T06:42:29.166Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '34b70586-1f32-4166-85c4-63bb6bf332e8',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'aa13c835-17cd-4aa6-8475-3652d555cd40',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:42:29.230Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '34b70586-1f32-4166-85c4-63bb6bf332e8',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'aa13c835-17cd-4aa6-8475-3652d555cd40',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:42:29.230Z',
      finished_at: '2025-07-29T06:42:29.265Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'ada57beb-4cad-47e1-8263-e09fa1ce55ee',
      name: 'setup',
      result: 'pending',
      test_run_id: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:42:29.316Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 10526:0
2025-07-29T06:42:29.832Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T06:42:31.930Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '0a3208b4-3654-42e0-807a-f05d432634ca',
    name: 'setup',
    result: 'failed',
    test_run_id: '85c7b537-1a8f-42d6-a452-4a4c7491266b',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:27:14.597Z',
    finished_at: '2025-07-29T06:42:31.924Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:42:31.948Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '85c7b537-1a8f-42d6-a452-4a4c7491266b',
      kind: 'TEST_LOG',
      message: '\x1B[31mE\x1B[0m',
      level: 'INFO',
      test_run_uuid: '85c7b537-1a8f-42d6-a452-4a4c7491266b'
    }
  ]
} to 10526:0
2025-07-29T06:42:31.986Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '85c7b537-1a8f-42d6-a452-4a4c7491266b',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:42:31Z [bstack1lll111l11l_opy_][WARNING] - dropping due to lack of results False',
      level: 'INFO',
      test_run_uuid: '85c7b537-1a8f-42d6-a452-4a4c7491266b'
    }
  ]
} to 10526:0
2025-07-29T06:42:32.001Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'ba359b2b-be67-4946-8d4c-8ea052ae4db9',
    name: 'teardown',
    result: 'pending',
    test_run_id: '85c7b537-1a8f-42d6-a452-4a4c7491266b',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:42:31.995Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:42:32.011Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '85c7b537-1a8f-42d6-a452-4a4c7491266b',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:42:32Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Pixel] (–∑–∞ 2.49—Å)',
      level: 'INFO',
      test_run_uuid: '85c7b537-1a8f-42d6-a452-4a4c7491266b'
    }
  ]
} to 10526:0
2025-07-29T06:42:32.022Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:42:31.985Z',
      uuid: '85c7b537-1a8f-42d6-a452-4a4c7491266b',
      kind: 'TEST_LOG',
      message: 'dropping due to lack of results False',
      level: 'WARNING',
      test_run_uuid: '85c7b537-1a8f-42d6-a452-4a4c7491266b'
    }
  ]
} to 10526:0
2025-07-29T06:42:32.022Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:42:32.010Z',
      uuid: '85c7b537-1a8f-42d6-a452-4a4c7491266b',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Pixel] (–∑–∞ 2.49—Å)',
      level: 'INFO',
      test_run_uuid: '85c7b537-1a8f-42d6-a452-4a4c7491266b'
    }
  ]
} to 10526:0
2025-07-29T06:42:32.040Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'ba359b2b-be67-4946-8d4c-8ea052ae4db9',
    name: 'teardown',
    result: 'passed',
    test_run_id: '85c7b537-1a8f-42d6-a452-4a4c7491266b',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:42:31.995Z',
    finished_at: '2025-07-29T06:42:32.031Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:42:32.086Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '5f1c950a-6d69-4009-91f7-054fa27482d6',
    name: 'setup',
    result: 'pending',
    test_run_id: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:42:32.082Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:42:32.102Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:42:32Z [conftest][INFO] - üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä –≤ —Ä–µ–∂–∏–º–µ: browserstack',
      level: 'INFO',
      test_run_uuid: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba'
    }
  ]
} to 10526:0
2025-07-29T06:42:32.112Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:42:32Z [utils.driver_factory][INFO] - üåê –°–æ–∑–¥–∞–µ–º BrowserStack –¥—Ä–∞–π–≤–µ—Ä...',
      level: 'INFO',
      test_run_uuid: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba'
    }
  ]
} to 10526:0
2025-07-29T06:42:32.120Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba',
      kind: 'TEST_LOG',
      message: 'üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º APK –≤ BrowserStack: /Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/apk/halyk_bank_app.apk',
      level: 'INFO',
      test_run_uuid: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba'
    }
  ]
} to 10526:0
2025-07-29T06:42:33.832Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Processing batch event [
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '0a3208b4-3654-42e0-807a-f05d432634ca',
      name: 'setup',
      result: 'failed',
      test_run_id: '85c7b537-1a8f-42d6-a452-4a4c7491266b',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:27:14.597Z',
      finished_at: '2025-07-29T06:42:31.924Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'ba359b2b-be67-4946-8d4c-8ea052ae4db9',
      name: 'teardown',
      result: 'pending',
      test_run_id: '85c7b537-1a8f-42d6-a452-4a4c7491266b',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:42:31.995Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'ba359b2b-be67-4946-8d4c-8ea052ae4db9',
      name: 'teardown',
      result: 'passed',
      test_run_id: '85c7b537-1a8f-42d6-a452-4a4c7491266b',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:42:31.995Z',
      finished_at: '2025-07-29T06:42:32.031Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '5f1c950a-6d69-4009-91f7-054fa27482d6',
      name: 'setup',
      result: 'pending',
      test_run_id: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:42:32.082Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 10526:0
2025-07-29T06:42:33.833Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T06:43:06.119Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ APK: 504',
      level: 'INFO',
      test_run_uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1'
    }
  ]
} to 10526:0
2025-07-29T06:43:06.130Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
      kind: 'TEST_LOG',
      message: '–û—Ç–≤–µ—Ç: ',
      level: 'INFO',
      test_run_uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1'
    }
  ]
} to 10526:0
2025-07-29T06:43:06.160Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:43:06Z [utils.driver_factory][WARNING] - ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å APK, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
      level: 'INFO',
      test_run_uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1'
    }
  ]
} to 10526:0
2025-07-29T06:43:06.170Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
      kind: 'TEST_LOG',
      message: 'üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä BrowserStack –¥–ª—è android',
      level: 'INFO',
      test_run_uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1'
    }
  ]
} to 10526:0
2025-07-29T06:43:06.180Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
      kind: 'TEST_LOG',
      message: 'Capabilities: {\n' +
        '  "device": "Samsung Galaxy S22",\n' +
        '  "os_version": "12.0",\n' +
        '  "project": "Halyk Bank Tests",\n' +
        '  "build": "Android Build v1.0",\n' +
        '  "name": "Halyk Bank Android Test",\n' +
        '  "app": null,\n' +
        '  "browserstack.debug": true,\n' +
        '  "browserstack.video": true,\n' +
        '  "browserstack.networkLogs": true,\n' +
        '  "browserstack.appiumLogs": true,\n' +
        '  "browserstack.local": true,\n' +
        '  "browserstack.console": "verbose",\n' +
        '  "browserstack.deviceLogs": true,\n' +
        '  "browserstack.appium_version": "2.0.1",\n' +
        '  "browserstack.idleTimeout": 300,\n' +
        '  "browserstack.acceptInsecureCerts": true,\n' +
        '  "appPackage": "kz.halyk.onlinebank.stage",\n' +
        '  "appActivity": "kz.halyk.onlinebank.ui_release4.screens.splash.SplashActivity"\n' +
        '}',
      level: 'INFO',
      test_run_uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1'
    }
  ]
} to 10526:0
2025-07-29T06:43:06.190Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:43:06Z [bstack1lll1l1lll1_opy_][INFO] - Remote Server Address being passed as : https://[REDACTED]:[REDACTED]@hub-cloud.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1'
    }
  ]
} to 10526:0
2025-07-29T06:43:06.213Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:43:06Z [bstack1lll1l1lll1_opy_][INFO] - Completed setup!',
      level: 'INFO',
      test_run_uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1'
    }
  ]
} to 10526:0
2025-07-29T06:43:06.233Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
      kind: 'TEST_LOG',
      message: "2025-07-29T06:43:06Z [bstack1lll1l1lll1_opy_][INFO] - driver.__init__ platform_index=0: args=() kwargs={'command_executor': 'https://hub-euw.browserstack.com/wd/hub', 'options': <selenium.webdriver.chrome.options.Options object at 0x105e23b10>, 'locator_converter': <appium.webdriver.locator_converter.AppiumLocatorConverter object at 0x105e23750>, 'web_element_cls': <class 'appium.webdriver.webelement.WebElement'>, 'client_config': <appium.webdriver.client_config.AppiumClientConfig object at 0x105e234d0>, 'keep_alive': True, 'file_detector': None}",
      level: 'INFO',
      test_run_uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1'
    }
  ]
} to 10526:0
2025-07-29T06:43:06.242Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:43:06Z [bstack1lll1l1lll1_opy_][WARNING] - hub_url=https://hub-euw.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1'
    }
  ]
} to 10526:0
2025-07-29T06:43:06.251Z CLI info [local:module]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  initSession: localIdentifier=Jul_29_1123_MacBook-Pro-00059362.local_r47k pid=10541
2025-07-29T06:43:07.840Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 10526:0
2025-07-29T06:43:07.841Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T06:43:07.894Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞ BrowserStack: Message: App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial.\n',
      level: 'INFO',
      test_run_uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1'
    }
  ]
} to 10526:0
2025-07-29T06:43:07.907Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:43:07Z [utils.driver_factory][ERROR] - ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å BrowserStack –¥—Ä–∞–π–≤–µ—Ä',
      level: 'INFO',
      test_run_uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1'
    }
  ]
} to 10526:0
2025-07-29T06:43:07.918Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:43:07Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      level: 'INFO',
      test_run_uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1'
    }
  ]
} to 10526:0
2025-07-29T06:43:07.940Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '923cf41e-824d-4d66-b41a-f8af7484963c',
    name: 'setup',
    result: 'failed',
    test_run_id: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:28:02.352Z',
    finished_at: '2025-07-29T06:43:07.934Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:43:07.959Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
      kind: 'TEST_LOG',
      message: '\x1B[31mE\x1B[0m',
      level: 'INFO',
      test_run_uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1'
    }
  ]
} to 10526:0
2025-07-29T06:43:08.001Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:43:07Z [bstack1lll111l11l_opy_][WARNING] - dropping due to lack of results False',
      level: 'INFO',
      test_run_uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1'
    }
  ]
} to 10526:0
2025-07-29T06:43:08.016Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '137f7fd0-275b-43b1-a0b6-19edf61a309c',
    name: 'teardown',
    result: 'pending',
    test_run_id: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:43:08.011Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:43:08.027Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:43:08Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Pixel] (–∑–∞ 0.10—Å)',
      level: 'INFO',
      test_run_uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1'
    }
  ]
} to 10526:0
2025-07-29T06:43:08.040Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:43:07.999Z',
      uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
      kind: 'TEST_LOG',
      message: 'dropping due to lack of results False',
      level: 'WARNING',
      test_run_uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1'
    }
  ]
} to 10526:0
2025-07-29T06:43:08.041Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:43:08.026Z',
      uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Pixel] (–∑–∞ 0.10—Å)',
      level: 'INFO',
      test_run_uuid: '3533dac1-a2ce-42e1-8acc-db318392ddc1'
    }
  ]
} to 10526:0
2025-07-29T06:43:08.087Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '137f7fd0-275b-43b1-a0b6-19edf61a309c',
    name: 'teardown',
    result: 'passed',
    test_run_id: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:43:08.011Z',
    finished_at: '2025-07-29T06:43:08.074Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:43:08.137Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '43c9b1aa-df0e-49c8-bd54-76f21b2d9898',
    name: 'setup',
    result: 'pending',
    test_run_id: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:43:08.130Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:43:08.161Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:43:08Z [conftest][INFO] - üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä –≤ —Ä–µ–∂–∏–º–µ: browserstack',
      level: 'INFO',
      test_run_uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a'
    }
  ]
} to 10526:0
2025-07-29T06:43:08.172Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:43:08Z [utils.driver_factory][INFO] - üåê –°–æ–∑–¥–∞–µ–º BrowserStack –¥—Ä–∞–π–≤–µ—Ä...',
      level: 'INFO',
      test_run_uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a'
    }
  ]
} to 10526:0
2025-07-29T06:43:08.182Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
      kind: 'TEST_LOG',
      message: 'üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º APK –≤ BrowserStack: /Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/apk/halyk_bank_app.apk',
      level: 'INFO',
      test_run_uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a'
    }
  ]
} to 10526:0
2025-07-29T06:43:09.841Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '923cf41e-824d-4d66-b41a-f8af7484963c',
      name: 'setup',
      result: 'failed',
      test_run_id: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:28:02.352Z',
      finished_at: '2025-07-29T06:43:07.934Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '137f7fd0-275b-43b1-a0b6-19edf61a309c',
      name: 'teardown',
      result: 'pending',
      test_run_id: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:43:08.011Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '137f7fd0-275b-43b1-a0b6-19edf61a309c',
      name: 'teardown',
      result: 'passed',
      test_run_id: '3533dac1-a2ce-42e1-8acc-db318392ddc1',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:43:08.011Z',
      finished_at: '2025-07-29T06:43:08.074Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '43c9b1aa-df0e-49c8-bd54-76f21b2d9898',
      name: 'setup',
      result: 'pending',
      test_run_id: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:43:08.130Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 10526:0
2025-07-29T06:43:09.842Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T06:43:29.184Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ APK: 403',
      level: 'INFO',
      test_run_uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c'
    }
  ]
} to 10526:0
2025-07-29T06:43:29.198Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
      kind: 'TEST_LOG',
      message: '–û—Ç–≤–µ—Ç: {"error":"[BROWSERSTACK_TESTING_TIME_LIMIT_EXHAUSTED]App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial."}',
      level: 'INFO',
      test_run_uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c'
    }
  ]
} to 10526:0
2025-07-29T06:43:29.230Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:43:29Z [utils.driver_factory][WARNING] - ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å APK, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
      level: 'INFO',
      test_run_uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c'
    }
  ]
} to 10526:0
2025-07-29T06:43:29.243Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
      kind: 'TEST_LOG',
      message: 'üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä BrowserStack –¥–ª—è android',
      level: 'INFO',
      test_run_uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c'
    }
  ]
} to 10526:0
2025-07-29T06:43:29.253Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
      kind: 'TEST_LOG',
      message: 'Capabilities: {\n' +
        '  "device": "Samsung Galaxy S22",\n' +
        '  "os_version": "12.0",\n' +
        '  "project": "Halyk Bank Tests",\n' +
        '  "build": "Android Build v1.0",\n' +
        '  "name": "Halyk Bank Android Test",\n' +
        '  "app": null,\n' +
        '  "browserstack.debug": true,\n' +
        '  "browserstack.video": true,\n' +
        '  "browserstack.networkLogs": true,\n' +
        '  "browserstack.appiumLogs": true,\n' +
        '  "browserstack.local": true,\n' +
        '  "browserstack.console": "verbose",\n' +
        '  "browserstack.deviceLogs": true,\n' +
        '  "browserstack.appium_version": "2.0.1",\n' +
        '  "browserstack.idleTimeout": 300,\n' +
        '  "browserstack.acceptInsecureCerts": true,\n' +
        '  "appPackage": "kz.halyk.onlinebank.stage",\n' +
        '  "appActivity": "kz.halyk.onlinebank.ui_release4.screens.splash.SplashActivity"\n' +
        '}',
      level: 'INFO',
      test_run_uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c'
    }
  ]
} to 10526:0
2025-07-29T06:43:29.265Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:43:29Z [bstack1lll1l1lll1_opy_][INFO] - Remote Server Address being passed as : https://[REDACTED]:[REDACTED]@hub-cloud.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c'
    }
  ]
} to 10526:0
2025-07-29T06:43:29.288Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:43:29Z [bstack1lll1l1lll1_opy_][INFO] - Completed setup!',
      level: 'INFO',
      test_run_uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c'
    }
  ]
} to 10526:0
2025-07-29T06:43:29.308Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
      kind: 'TEST_LOG',
      message: "2025-07-29T06:43:29Z [bstack1lll1l1lll1_opy_][INFO] - driver.__init__ platform_index=1: args=() kwargs={'command_executor': 'https://hub-euw.browserstack.com/wd/hub', 'options': <selenium.webdriver.edge.options.Options object at 0x10c8db360>, 'locator_converter': <appium.webdriver.locator_converter.AppiumLocatorConverter object at 0x10c8db5c0>, 'web_element_cls': <class 'appium.webdriver.webelement.WebElement'>, 'client_config': <appium.webdriver.client_config.AppiumClientConfig object at 0x10c8dbce0>, 'keep_alive': True, 'file_detector': None}",
      level: 'INFO',
      test_run_uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c'
    }
  ]
} to 10526:0
2025-07-29T06:43:29.320Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:43:29Z [bstack1lll1l1lll1_opy_][WARNING] - hub_url=https://hub-euw.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c'
    }
  ]
} to 10526:0
2025-07-29T06:43:29.331Z CLI info [local:module]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  initSession: localIdentifier=Jul_29_1123_MacBook-Pro-00059362.local_r47k pid=10541
2025-07-29T06:43:29.849Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 10526:0
2025-07-29T06:43:29.850Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T06:43:30.551Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞ BrowserStack: Message: App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial.\n',
      level: 'INFO',
      test_run_uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c'
    }
  ]
} to 10526:0
2025-07-29T06:43:30.564Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:43:30Z [utils.driver_factory][ERROR] - ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å BrowserStack –¥—Ä–∞–π–≤–µ—Ä',
      level: 'INFO',
      test_run_uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c'
    }
  ]
} to 10526:0
2025-07-29T06:43:30.576Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:43:30Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_universal[Universal-QR]',
      level: 'INFO',
      test_run_uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c'
    }
  ]
} to 10526:0
2025-07-29T06:43:30.620Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'ada57beb-4cad-47e1-8263-e09fa1ce55ee',
    name: 'setup',
    result: 'failed',
    test_run_id: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:42:29.316Z',
    finished_at: '2025-07-29T06:43:30.615Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:43:30.642Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
      kind: 'TEST_LOG',
      message: '\x1B[31mE\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c'
    }
  ]
} to 10526:0
2025-07-29T06:43:30.687Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:43:30Z [bstack1lll111l11l_opy_][WARNING] - dropping due to lack of results False',
      level: 'INFO',
      test_run_uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c'
    }
  ]
} to 10526:0
2025-07-29T06:43:30.703Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '8dc2ce0d-edac-4eda-91cf-b7cd29e60d26',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:43:30.698Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:43:30.714Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:43:30Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Universal-QR] (–∑–∞ 0.13—Å)',
      level: 'INFO',
      test_run_uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c'
    }
  ]
} to 10526:0
2025-07-29T06:43:30.727Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:43:30.686Z',
      uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
      kind: 'TEST_LOG',
      message: 'dropping due to lack of results False',
      level: 'WARNING',
      test_run_uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c'
    }
  ]
} to 10526:0
2025-07-29T06:43:30.727Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:43:30.713Z',
      uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Universal-QR] (–∑–∞ 0.13—Å)',
      level: 'INFO',
      test_run_uuid: 'e741364b-f44a-4c7f-b317-0c9c1f90576c'
    }
  ]
} to 10526:0
2025-07-29T06:43:30.751Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '8dc2ce0d-edac-4eda-91cf-b7cd29e60d26',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:43:30.698Z',
    finished_at: '2025-07-29T06:43:30.737Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:43:30.802Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '576dad7b-398f-447b-bf2c-9f7bd61337ab',
    name: 'setup',
    result: 'pending',
    test_run_id: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:43:30.798Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:43:30.821Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:43:30Z [conftest][INFO] - üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä –≤ —Ä–µ–∂–∏–º–µ: browserstack',
      level: 'INFO',
      test_run_uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588'
    }
  ]
} to 10526:0
2025-07-29T06:43:30.832Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:43:30Z [utils.driver_factory][INFO] - üåê –°–æ–∑–¥–∞–µ–º BrowserStack –¥—Ä–∞–π–≤–µ—Ä...',
      level: 'INFO',
      test_run_uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588'
    }
  ]
} to 10526:0
2025-07-29T06:43:30.844Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
      kind: 'TEST_LOG',
      message: 'üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º APK –≤ BrowserStack: /Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/apk/halyk_bank_app.apk',
      level: 'INFO',
      test_run_uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588'
    }
  ]
} to 10526:0
2025-07-29T06:43:31.851Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'ada57beb-4cad-47e1-8263-e09fa1ce55ee',
      name: 'setup',
      result: 'failed',
      test_run_id: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:42:29.316Z',
      finished_at: '2025-07-29T06:43:30.615Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '8dc2ce0d-edac-4eda-91cf-b7cd29e60d26',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:43:30.698Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '8dc2ce0d-edac-4eda-91cf-b7cd29e60d26',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'e741364b-f44a-4c7f-b317-0c9c1f90576c',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:43:30.698Z',
      finished_at: '2025-07-29T06:43:30.737Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '576dad7b-398f-447b-bf2c-9f7bd61337ab',
      name: 'setup',
      result: 'pending',
      test_run_id: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:43:30.798Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 10526:0
2025-07-29T06:43:31.852Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T06:44:26.383Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ APK: 403',
      level: 'INFO',
      test_run_uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588'
    }
  ]
} to 10526:0
2025-07-29T06:44:26.398Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
      kind: 'TEST_LOG',
      message: '–û—Ç–≤–µ—Ç: {"error":"[BROWSERSTACK_TESTING_TIME_LIMIT_EXHAUSTED]App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial."}',
      level: 'INFO',
      test_run_uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588'
    }
  ]
} to 10526:0
2025-07-29T06:44:26.428Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:44:26Z [utils.driver_factory][WARNING] - ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å APK, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
      level: 'INFO',
      test_run_uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588'
    }
  ]
} to 10526:0
2025-07-29T06:44:26.441Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
      kind: 'TEST_LOG',
      message: 'üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä BrowserStack –¥–ª—è android',
      level: 'INFO',
      test_run_uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588'
    }
  ]
} to 10526:0
2025-07-29T06:44:26.453Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
      kind: 'TEST_LOG',
      message: 'Capabilities: {\n' +
        '  "device": "Samsung Galaxy S22",\n' +
        '  "os_version": "12.0",\n' +
        '  "project": "Halyk Bank Tests",\n' +
        '  "build": "Android Build v1.0",\n' +
        '  "name": "Halyk Bank Android Test",\n' +
        '  "app": null,\n' +
        '  "browserstack.debug": true,\n' +
        '  "browserstack.video": true,\n' +
        '  "browserstack.networkLogs": true,\n' +
        '  "browserstack.appiumLogs": true,\n' +
        '  "browserstack.local": true,\n' +
        '  "browserstack.console": "verbose",\n' +
        '  "browserstack.deviceLogs": true,\n' +
        '  "browserstack.appium_version": "2.0.1",\n' +
        '  "browserstack.idleTimeout": 300,\n' +
        '  "browserstack.acceptInsecureCerts": true,\n' +
        '  "appPackage": "kz.halyk.onlinebank.stage",\n' +
        '  "appActivity": "kz.halyk.onlinebank.ui_release4.screens.splash.SplashActivity"\n' +
        '}',
      level: 'INFO',
      test_run_uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588'
    }
  ]
} to 10526:0
2025-07-29T06:44:26.464Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:44:26Z [bstack1lll1l1lll1_opy_][INFO] - Remote Server Address being passed as : https://[REDACTED]:[REDACTED]@hub-cloud.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588'
    }
  ]
} to 10526:0
2025-07-29T06:44:26.490Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:44:26Z [bstack1lll1l1lll1_opy_][INFO] - Completed setup!',
      level: 'INFO',
      test_run_uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588'
    }
  ]
} to 10526:0
2025-07-29T06:44:26.510Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
      kind: 'TEST_LOG',
      message: "2025-07-29T06:44:26Z [bstack1lll1l1lll1_opy_][INFO] - driver.__init__ platform_index=1: args=() kwargs={'command_executor': 'https://hub-euw.browserstack.com/wd/hub', 'options': <selenium.webdriver.edge.options.Options object at 0x10c8d9940>, 'locator_converter': <appium.webdriver.locator_converter.AppiumLocatorConverter object at 0x10c8da8b0>, 'web_element_cls': <class 'appium.webdriver.webelement.WebElement'>, 'client_config': <appium.webdriver.client_config.AppiumClientConfig object at 0x10c8dad70>, 'keep_alive': True, 'file_detector': None}",
      level: 'INFO',
      test_run_uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588'
    }
  ]
} to 10526:0
2025-07-29T06:44:26.521Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:44:26Z [bstack1lll1l1lll1_opy_][WARNING] - hub_url=https://hub-euw.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588'
    }
  ]
} to 10526:0
2025-07-29T06:44:26.532Z CLI info [local:module]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  initSession: localIdentifier=Jul_29_1123_MacBook-Pro-00059362.local_r47k pid=10541
2025-07-29T06:44:27.865Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 10526:0
2025-07-29T06:44:27.866Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T06:44:27.889Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞ BrowserStack: Message: App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial.\n',
      level: 'INFO',
      test_run_uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588'
    }
  ]
} to 10526:0
2025-07-29T06:44:27.904Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:44:27Z [utils.driver_factory][ERROR] - ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å BrowserStack –¥—Ä–∞–π–≤–µ—Ä',
      level: 'INFO',
      test_run_uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588'
    }
  ]
} to 10526:0
2025-07-29T06:44:27.916Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:44:27Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_universal[Megapolis-QR]',
      level: 'INFO',
      test_run_uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588'
    }
  ]
} to 10526:0
2025-07-29T06:44:27.940Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '576dad7b-398f-447b-bf2c-9f7bd61337ab',
    name: 'setup',
    result: 'failed',
    test_run_id: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:43:30.798Z',
    finished_at: '2025-07-29T06:44:27.934Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:44:27.962Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
      kind: 'TEST_LOG',
      message: '\x1B[31mE\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588'
    }
  ]
} to 10526:0
2025-07-29T06:44:28.008Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:44:28Z [bstack1lll111l11l_opy_][WARNING] - dropping due to lack of results False',
      level: 'INFO',
      test_run_uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588'
    }
  ]
} to 10526:0
2025-07-29T06:44:28.025Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'e61618a9-5194-45df-acdd-69094a769355',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:44:28.020Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:44:28.037Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:44:28Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Megapolis-QR] (–∑–∞ 0.11—Å)',
      level: 'INFO',
      test_run_uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588'
    }
  ]
} to 10526:0
2025-07-29T06:44:28.050Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:44:28.006Z',
      uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
      kind: 'TEST_LOG',
      message: 'dropping due to lack of results False',
      level: 'WARNING',
      test_run_uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588'
    }
  ]
} to 10526:0
2025-07-29T06:44:28.050Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:44:28.035Z',
      uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Megapolis-QR] (–∑–∞ 0.11—Å)',
      level: 'INFO',
      test_run_uuid: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588'
    }
  ]
} to 10526:0
2025-07-29T06:44:28.072Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'e61618a9-5194-45df-acdd-69094a769355',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:44:28.020Z',
    finished_at: '2025-07-29T06:44:28.061Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:44:28.121Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'b1436b39-6ef2-4722-8b0c-af8fb3bb5760',
    name: 'setup',
    result: 'pending',
    test_run_id: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:44:28.117Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:44:28.140Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:44:28Z [conftest][INFO] - üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä –≤ —Ä–µ–∂–∏–º–µ: browserstack',
      level: 'INFO',
      test_run_uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f'
    }
  ]
} to 10526:0
2025-07-29T06:44:28.153Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:44:28Z [utils.driver_factory][INFO] - üåê –°–æ–∑–¥–∞–µ–º BrowserStack –¥—Ä–∞–π–≤–µ—Ä...',
      level: 'INFO',
      test_run_uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f'
    }
  ]
} to 10526:0
2025-07-29T06:44:28.165Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
      kind: 'TEST_LOG',
      message: 'üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º APK –≤ BrowserStack: /Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/apk/halyk_bank_app.apk',
      level: 'INFO',
      test_run_uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f'
    }
  ]
} to 10526:0
2025-07-29T06:44:29.867Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '576dad7b-398f-447b-bf2c-9f7bd61337ab',
      name: 'setup',
      result: 'failed',
      test_run_id: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:43:30.798Z',
      finished_at: '2025-07-29T06:44:27.934Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'e61618a9-5194-45df-acdd-69094a769355',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:44:28.020Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'e61618a9-5194-45df-acdd-69094a769355',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'ccfc0171-b1b7-4ab4-8a8f-be91bf975588',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:44:28.020Z',
      finished_at: '2025-07-29T06:44:28.061Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'b1436b39-6ef2-4722-8b0c-af8fb3bb5760',
      name: 'setup',
      result: 'pending',
      test_run_id: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:44:28.117Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 10526:0
2025-07-29T06:44:29.869Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T06:45:18.313Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ APK: 403',
      level: 'INFO',
      test_run_uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a'
    }
  ]
} to 10526:0
2025-07-29T06:45:18.329Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
      kind: 'TEST_LOG',
      message: '–û—Ç–≤–µ—Ç: {"error":"[BROWSERSTACK_TESTING_TIME_LIMIT_EXHAUSTED]App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial."}',
      level: 'INFO',
      test_run_uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a'
    }
  ]
} to 10526:0
2025-07-29T06:45:18.362Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:45:18Z [utils.driver_factory][WARNING] - ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å APK, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
      level: 'INFO',
      test_run_uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a'
    }
  ]
} to 10526:0
2025-07-29T06:45:18.374Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
      kind: 'TEST_LOG',
      message: 'üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä BrowserStack –¥–ª—è android',
      level: 'INFO',
      test_run_uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a'
    }
  ]
} to 10526:0
2025-07-29T06:45:18.387Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
      kind: 'TEST_LOG',
      message: 'Capabilities: {\n' +
        '  "device": "Samsung Galaxy S22",\n' +
        '  "os_version": "12.0",\n' +
        '  "project": "Halyk Bank Tests",\n' +
        '  "build": "Android Build v1.0",\n' +
        '  "name": "Halyk Bank Android Test",\n' +
        '  "app": null,\n' +
        '  "browserstack.debug": true,\n' +
        '  "browserstack.video": true,\n' +
        '  "browserstack.networkLogs": true,\n' +
        '  "browserstack.appiumLogs": true,\n' +
        '  "browserstack.local": true,\n' +
        '  "browserstack.console": "verbose",\n' +
        '  "browserstack.deviceLogs": true,\n' +
        '  "browserstack.appium_version": "2.0.1",\n' +
        '  "browserstack.idleTimeout": 300,\n' +
        '  "browserstack.acceptInsecureCerts": true,\n' +
        '  "appPackage": "kz.halyk.onlinebank.stage",\n' +
        '  "appActivity": "kz.halyk.onlinebank.ui_release4.screens.splash.SplashActivity"\n' +
        '}',
      level: 'INFO',
      test_run_uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a'
    }
  ]
} to 10526:0
2025-07-29T06:45:18.399Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:45:18Z [bstack1lll1l1lll1_opy_][INFO] - Remote Server Address being passed as : https://[REDACTED]:[REDACTED]@hub-cloud.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a'
    }
  ]
} to 10526:0
2025-07-29T06:45:18.426Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:45:18Z [bstack1lll1l1lll1_opy_][INFO] - Completed setup!',
      level: 'INFO',
      test_run_uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a'
    }
  ]
} to 10526:0
2025-07-29T06:45:18.447Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
      kind: 'TEST_LOG',
      message: "2025-07-29T06:45:18Z [bstack1lll1l1lll1_opy_][INFO] - driver.__init__ platform_index=0: args=() kwargs={'command_executor': 'https://hub-euw.browserstack.com/wd/hub', 'options': <selenium.webdriver.chrome.options.Options object at 0x105e26d70>, 'locator_converter': <appium.webdriver.locator_converter.AppiumLocatorConverter object at 0x105e269e0>, 'web_element_cls': <class 'appium.webdriver.webelement.WebElement'>, 'client_config': <appium.webdriver.client_config.AppiumClientConfig object at 0x105e26780>, 'keep_alive': True, 'file_detector': None}",
      level: 'INFO',
      test_run_uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a'
    }
  ]
} to 10526:0
2025-07-29T06:45:18.460Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:45:18Z [bstack1lll1l1lll1_opy_][WARNING] - hub_url=https://hub-euw.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a'
    }
  ]
} to 10526:0
2025-07-29T06:45:18.470Z CLI info [local:module]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  initSession: localIdentifier=Jul_29_1123_MacBook-Pro-00059362.local_r47k pid=10541
2025-07-29T06:45:19.082Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ APK: 403',
      level: 'INFO',
      test_run_uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f'
    }
  ]
} to 10526:0
2025-07-29T06:45:19.099Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
      kind: 'TEST_LOG',
      message: '–û—Ç–≤–µ—Ç: {"error":"[BROWSERSTACK_TESTING_TIME_LIMIT_EXHAUSTED]App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial."}',
      level: 'INFO',
      test_run_uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f'
    }
  ]
} to 10526:0
2025-07-29T06:45:19.132Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:45:19Z [utils.driver_factory][WARNING] - ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å APK, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
      level: 'INFO',
      test_run_uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f'
    }
  ]
} to 10526:0
2025-07-29T06:45:19.147Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
      kind: 'TEST_LOG',
      message: 'üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä BrowserStack –¥–ª—è android',
      level: 'INFO',
      test_run_uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f'
    }
  ]
} to 10526:0
2025-07-29T06:45:19.160Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
      kind: 'TEST_LOG',
      message: 'Capabilities: {\n' +
        '  "device": "Samsung Galaxy S22",\n' +
        '  "os_version": "12.0",\n' +
        '  "project": "Halyk Bank Tests",\n' +
        '  "build": "Android Build v1.0",\n' +
        '  "name": "Halyk Bank Android Test",\n' +
        '  "app": null,\n' +
        '  "browserstack.debug": true,\n' +
        '  "browserstack.video": true,\n' +
        '  "browserstack.networkLogs": true,\n' +
        '  "browserstack.appiumLogs": true,\n' +
        '  "browserstack.local": true,\n' +
        '  "browserstack.console": "verbose",\n' +
        '  "browserstack.deviceLogs": true,\n' +
        '  "browserstack.appium_version": "2.0.1",\n' +
        '  "browserstack.idleTimeout": 300,\n' +
        '  "browserstack.acceptInsecureCerts": true,\n' +
        '  "appPackage": "kz.halyk.onlinebank.stage",\n' +
        '  "appActivity": "kz.halyk.onlinebank.ui_release4.screens.splash.SplashActivity"\n' +
        '}',
      level: 'INFO',
      test_run_uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f'
    }
  ]
} to 10526:0
2025-07-29T06:45:19.173Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:45:19Z [bstack1lll1l1lll1_opy_][INFO] - Remote Server Address being passed as : https://[REDACTED]:[REDACTED]@hub-cloud.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f'
    }
  ]
} to 10526:0
2025-07-29T06:45:19.201Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:45:19Z [bstack1lll1l1lll1_opy_][INFO] - Completed setup!',
      level: 'INFO',
      test_run_uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f'
    }
  ]
} to 10526:0
2025-07-29T06:45:19.225Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
      kind: 'TEST_LOG',
      message: "2025-07-29T06:45:19Z [bstack1lll1l1lll1_opy_][INFO] - driver.__init__ platform_index=1: args=() kwargs={'command_executor': 'https://hub-euw.browserstack.com/wd/hub', 'options': <selenium.webdriver.edge.options.Options object at 0x10c8ebe30>, 'locator_converter': <appium.webdriver.locator_converter.AppiumLocatorConverter object at 0x10c8eb530>, 'web_element_cls': <class 'appium.webdriver.webelement.WebElement'>, 'client_config': <appium.webdriver.client_config.AppiumClientConfig object at 0x10c8eab10>, 'keep_alive': True, 'file_detector': None}",
      level: 'INFO',
      test_run_uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f'
    }
  ]
} to 10526:0
2025-07-29T06:45:19.238Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:45:19Z [bstack1lll1l1lll1_opy_][WARNING] - hub_url=https://hub-euw.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f'
    }
  ]
} to 10526:0
2025-07-29T06:45:19.249Z CLI info [local:module]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  initSession: localIdentifier=Jul_29_1123_MacBook-Pro-00059362.local_r47k pid=10541
2025-07-29T06:45:19.564Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞ BrowserStack: Message: App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial.\n',
      level: 'INFO',
      test_run_uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a'
    }
  ]
} to 10526:0
2025-07-29T06:45:19.578Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:45:19Z [utils.driver_factory][ERROR] - ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å BrowserStack –¥—Ä–∞–π–≤–µ—Ä',
      level: 'INFO',
      test_run_uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a'
    }
  ]
} to 10526:0
2025-07-29T06:45:19.592Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:45:19Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      level: 'INFO',
      test_run_uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a'
    }
  ]
} to 10526:0
2025-07-29T06:45:19.618Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '43c9b1aa-df0e-49c8-bd54-76f21b2d9898',
    name: 'setup',
    result: 'failed',
    test_run_id: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:43:08.130Z',
    finished_at: '2025-07-29T06:45:19.612Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:45:19.643Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
      kind: 'TEST_LOG',
      message: '\x1B[31mE\x1B[0m',
      level: 'INFO',
      test_run_uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a'
    }
  ]
} to 10526:0
2025-07-29T06:45:19.696Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:45:19Z [bstack1lll111l11l_opy_][WARNING] - dropping due to lack of results False',
      level: 'INFO',
      test_run_uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a'
    }
  ]
} to 10526:0
2025-07-29T06:45:19.714Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'd98282b1-0564-46e9-bb53-fedb3b36aa27',
    name: 'teardown',
    result: 'pending',
    test_run_id: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:45:19.708Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:45:19.726Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:45:19Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Pixel] (–∑–∞ 0.12—Å)',
      level: 'INFO',
      test_run_uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a'
    }
  ]
} to 10526:0
2025-07-29T06:45:19.740Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:45:19.694Z',
      uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
      kind: 'TEST_LOG',
      message: 'dropping due to lack of results False',
      level: 'WARNING',
      test_run_uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a'
    }
  ]
} to 10526:0
2025-07-29T06:45:19.740Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:45:19.725Z',
      uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Pixel] (–∑–∞ 0.12—Å)',
      level: 'INFO',
      test_run_uuid: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a'
    }
  ]
} to 10526:0
2025-07-29T06:45:19.762Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'd98282b1-0564-46e9-bb53-fedb3b36aa27',
    name: 'teardown',
    result: 'passed',
    test_run_id: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:45:19.708Z',
    finished_at: '2025-07-29T06:45:19.751Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:45:19.812Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '70749592-e3c5-4336-bbce-615be45669ac',
    name: 'setup',
    result: 'pending',
    test_run_id: '3d84dd9d-549c-4fab-8e19-f8868317b020',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:45:19.808Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:45:19.829Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '3d84dd9d-549c-4fab-8e19-f8868317b020',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:45:19Z [conftest][INFO] - üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä –≤ —Ä–µ–∂–∏–º–µ: browserstack',
      level: 'INFO',
      test_run_uuid: '3d84dd9d-549c-4fab-8e19-f8868317b020'
    }
  ]
} to 10526:0
2025-07-29T06:45:19.841Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '3d84dd9d-549c-4fab-8e19-f8868317b020',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:45:19Z [utils.driver_factory][INFO] - üåê –°–æ–∑–¥–∞–µ–º BrowserStack –¥—Ä–∞–π–≤–µ—Ä...',
      level: 'INFO',
      test_run_uuid: '3d84dd9d-549c-4fab-8e19-f8868317b020'
    }
  ]
} to 10526:0
2025-07-29T06:45:19.852Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:50.995Z',
      uuid: '3d84dd9d-549c-4fab-8e19-f8868317b020',
      kind: 'TEST_LOG',
      message: 'üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º APK –≤ BrowserStack: /Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/apk/halyk_bank_app.apk',
      level: 'INFO',
      test_run_uuid: '3d84dd9d-549c-4fab-8e19-f8868317b020'
    }
  ]
} to 10526:0
2025-07-29T06:45:19.881Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '43c9b1aa-df0e-49c8-bd54-76f21b2d9898',
      name: 'setup',
      result: 'failed',
      test_run_id: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:43:08.130Z',
      finished_at: '2025-07-29T06:45:19.612Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'd98282b1-0564-46e9-bb53-fedb3b36aa27',
      name: 'teardown',
      result: 'pending',
      test_run_id: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:45:19.708Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'd98282b1-0564-46e9-bb53-fedb3b36aa27',
      name: 'teardown',
      result: 'passed',
      test_run_id: '0993bbe8-1cba-4cba-8daa-3a6e6a4faf6a',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:45:19.708Z',
      finished_at: '2025-07-29T06:45:19.751Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '70749592-e3c5-4336-bbce-615be45669ac',
      name: 'setup',
      result: 'pending',
      test_run_id: '3d84dd9d-549c-4fab-8e19-f8868317b020',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:45:19.808Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 10526:0
2025-07-29T06:45:19.881Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T06:45:20.526Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞ BrowserStack: Message: App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial.\n',
      level: 'INFO',
      test_run_uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f'
    }
  ]
} to 10526:0
2025-07-29T06:45:20.542Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:45:20Z [utils.driver_factory][ERROR] - ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å BrowserStack –¥—Ä–∞–π–≤–µ—Ä',
      level: 'INFO',
      test_run_uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f'
    }
  ]
} to 10526:0
2025-07-29T06:45:20.558Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:45:20Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      level: 'INFO',
      test_run_uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f'
    }
  ]
} to 10526:0
2025-07-29T06:45:20.583Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'b1436b39-6ef2-4722-8b0c-af8fb3bb5760',
    name: 'setup',
    result: 'failed',
    test_run_id: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:44:28.117Z',
    finished_at: '2025-07-29T06:45:20.578Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:45:20.608Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
      kind: 'TEST_LOG',
      message: '\x1B[31mE\x1B[0m',
      level: 'INFO',
      test_run_uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f'
    }
  ]
} to 10526:0
2025-07-29T06:45:20.661Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:45:20Z [bstack1lll111l11l_opy_][WARNING] - dropping due to lack of results False',
      level: 'INFO',
      test_run_uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f'
    }
  ]
} to 10526:0
2025-07-29T06:45:20.680Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'fd1f078a-723a-47fa-86fe-4f8bf64f1030',
    name: 'teardown',
    result: 'pending',
    test_run_id: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:45:20.674Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:45:20.692Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:45:20Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[samsung_s22] (–∑–∞ 0.12—Å)',
      level: 'INFO',
      test_run_uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f'
    }
  ]
} to 10526:0
2025-07-29T06:45:20.706Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:45:20.660Z',
      uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
      kind: 'TEST_LOG',
      message: 'dropping due to lack of results False',
      level: 'WARNING',
      test_run_uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f'
    }
  ]
} to 10526:0
2025-07-29T06:45:20.707Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:45:20.691Z',
      uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[samsung_s22] (–∑–∞ 0.12—Å)',
      level: 'INFO',
      test_run_uuid: '201f2f41-560c-4aee-8d41-f8d73ff35c1f'
    }
  ]
} to 10526:0
2025-07-29T06:45:20.730Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'fd1f078a-723a-47fa-86fe-4f8bf64f1030',
    name: 'teardown',
    result: 'passed',
    test_run_id: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:45:20.674Z',
    finished_at: '2025-07-29T06:45:20.718Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:45:20.783Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '134c81aa-d721-415d-82ab-245dfbfe488e',
    name: 'setup',
    result: 'pending',
    test_run_id: 'd8799ab0-4f22-4491-ad71-e2d8e5ce2a34',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T06:45:20.780Z'
  },
  logs: []
} to 10526:0
2025-07-29T06:45:20.801Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'd8799ab0-4f22-4491-ad71-e2d8e5ce2a34',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:45:20Z [conftest][INFO] - üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä –≤ —Ä–µ–∂–∏–º–µ: browserstack',
      level: 'INFO',
      test_run_uuid: 'd8799ab0-4f22-4491-ad71-e2d8e5ce2a34'
    }
  ]
} to 10526:0
2025-07-29T06:45:20.814Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'd8799ab0-4f22-4491-ad71-e2d8e5ce2a34',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:45:20Z [utils.driver_factory][INFO] - üåê –°–æ–∑–¥–∞–µ–º BrowserStack –¥—Ä–∞–π–≤–µ—Ä...',
      level: 'INFO',
      test_run_uuid: 'd8799ab0-4f22-4491-ad71-e2d8e5ce2a34'
    }
  ]
} to 10526:0
2025-07-29T06:45:20.826Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.023Z',
      uuid: 'd8799ab0-4f22-4491-ad71-e2d8e5ce2a34',
      kind: 'TEST_LOG',
      message: 'üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º APK –≤ BrowserStack: /Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/apk/halyk_bank_app.apk',
      level: 'INFO',
      test_run_uuid: 'd8799ab0-4f22-4491-ad71-e2d8e5ce2a34'
    }
  ]
} to 10526:0
2025-07-29T06:45:21.881Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'b1436b39-6ef2-4722-8b0c-af8fb3bb5760',
      name: 'setup',
      result: 'failed',
      test_run_id: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:44:28.117Z',
      finished_at: '2025-07-29T06:45:20.578Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'fd1f078a-723a-47fa-86fe-4f8bf64f1030',
      name: 'teardown',
      result: 'pending',
      test_run_id: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:45:20.674Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'fd1f078a-723a-47fa-86fe-4f8bf64f1030',
      name: 'teardown',
      result: 'passed',
      test_run_id: '201f2f41-560c-4aee-8d41-f8d73ff35c1f',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:45:20.674Z',
      finished_at: '2025-07-29T06:45:20.718Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '134c81aa-d721-415d-82ab-245dfbfe488e',
      name: 'setup',
      result: 'pending',
      test_run_id: 'd8799ab0-4f22-4491-ad71-e2d8e5ce2a34',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T06:45:20.780Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 10526:0
2025-07-29T06:45:21.882Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T06:46:02.932Z CLI info [main]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Received graceful signal termination, performing cleanup
2025-07-29T06:46:02.933Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making PUT request to https://collector-observability.browserstack.com
2025-07-29T06:46:02.939Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making PUT request to https://collector-observability.browserstack.com
2025-07-29T06:46:03.671Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba',
      kind: 'TEST_LOG',
      message: '‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ APK: 403',
      level: 'INFO',
      test_run_uuid: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba'
    }
  ]
} to 10526:0
2025-07-29T06:46:03.686Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba',
      kind: 'TEST_LOG',
      message: '–û—Ç–≤–µ—Ç: {"error":"[BROWSERSTACK_TESTING_TIME_LIMIT_EXHAUSTED]App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial."}',
      level: 'INFO',
      test_run_uuid: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba'
    }
  ]
} to 10526:0
2025-07-29T06:46:03.722Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:46:03Z [utils.driver_factory][WARNING] - ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å APK, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
      level: 'INFO',
      test_run_uuid: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba'
    }
  ]
} to 10526:0
2025-07-29T06:46:03.736Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba',
      kind: 'TEST_LOG',
      message: 'üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä BrowserStack –¥–ª—è android',
      level: 'INFO',
      test_run_uuid: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba'
    }
  ]
} to 10526:0
2025-07-29T06:46:03.750Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba',
      kind: 'TEST_LOG',
      message: 'Capabilities: {\n' +
        '  "device": "Samsung Galaxy S22",\n' +
        '  "os_version": "12.0",\n' +
        '  "project": "Halyk Bank Tests",\n' +
        '  "build": "Android Build v1.0",\n' +
        '  "name": "Halyk Bank Android Test",\n' +
        '  "app": null,\n' +
        '  "browserstack.debug": true,\n' +
        '  "browserstack.video": true,\n' +
        '  "browserstack.networkLogs": true,\n' +
        '  "browserstack.appiumLogs": true,\n' +
        '  "browserstack.local": true,\n' +
        '  "browserstack.console": "verbose",\n' +
        '  "browserstack.deviceLogs": true,\n' +
        '  "browserstack.appium_version": "2.0.1",\n' +
        '  "browserstack.idleTimeout": 300,\n' +
        '  "browserstack.acceptInsecureCerts": true,\n' +
        '  "appPackage": "kz.halyk.onlinebank.stage",\n' +
        '  "appActivity": "kz.halyk.onlinebank.ui_release4.screens.splash.SplashActivity"\n' +
        '}',
      level: 'INFO',
      test_run_uuid: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba'
    }
  ]
} to 10526:0
2025-07-29T06:46:03.764Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:46:03Z [bstack1lll1l1lll1_opy_][INFO] - Remote Server Address being passed as : https://[REDACTED]:[REDACTED]@hub-cloud.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba'
    }
  ]
} to 10526:0
2025-07-29T06:46:03.794Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:46:03Z [bstack1lll1l1lll1_opy_][INFO] - Completed setup!',
      level: 'INFO',
      test_run_uuid: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba'
    }
  ]
} to 10526:0
2025-07-29T06:46:03.820Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba',
      kind: 'TEST_LOG',
      message: "2025-07-29T06:46:03Z [bstack1lll1l1lll1_opy_][INFO] - driver.__init__ platform_index=2: args=() kwargs={'command_executor': 'https://hub-euw.browserstack.com/wd/hub', 'options': <selenium.webdriver.chrome.options.Options object at 0x10f5d87d0>, 'locator_converter': <appium.webdriver.locator_converter.AppiumLocatorConverter object at 0x10f5d8190>, 'web_element_cls': <class 'appium.webdriver.webelement.WebElement'>, 'client_config': <appium.webdriver.client_config.AppiumClientConfig object at 0x10f5d8550>, 'keep_alive': True, 'file_detector': None}",
      level: 'INFO',
      test_run_uuid: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba'
    }
  ]
} to 10526:0
2025-07-29T06:46:03.833Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T06:23:51.024Z',
      uuid: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba',
      kind: 'TEST_LOG',
      message: '2025-07-29T06:46:03Z [bstack1lll1l1lll1_opy_][WARNING] - hub_url=https://hub-euw.browserstack.com/wd/hub',
      level: 'INFO',
      test_run_uuid: '5d91d267-f4cd-4df2-9e28-c4f5acb395ba'
    }
  ]
} to 10526:0
2025-07-29T06:46:03.896Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 10526:0
2025-07-29T06:46:03.897Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T06:46:03.904Z CLI info [local:module]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  initSession: localIdentifier=Jul_29_1123_MacBook-Pro-00059362.local_r47k pid=10541
2025-07-29T06:46:04.694Z CLI info [testhub:module]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  stopBuild: vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh request={"finished_at":"2025-07-29T06:46:02.939Z","finished_metadata":[],"custom_metadata":null} response={"data":""}
2025-07-29T06:46:04.696Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making POST request to https://api.browserstack.com
2025-07-29T06:46:04.701Z CLI info [observability:module]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  Visit https://observability.browserstack.com/builds/vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh to view build report, insights, and many more debugging information all at one place!
2025-07-29T06:46:04.705Z CLI info [testhub:module]  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  stopBuild: vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh request={"finished_at":"2025-07-29T06:46:02.933Z","finished_metadata":[],"custom_metadata":null} response={"data":""}
2025-07-29T06:46:05.299Z CLI info  [kanat_VX6i9G]  [vxmpsvjhinvtuxfnslcj7ebpy1ris92wqn8qdulh]  [e077a873-e317-47d4-93f4-4b82fad3ad81]  [PRODUCTION] Making GET request to https://api.browserstack.com
2025-07-29T07:20:28.217Z CLI info     Config : {"userName":"kanat_VX6i9G","accessKey":"Asfusxe4qfUBqPdDszBs","framework":"pytest","app":"./apk/halyk_bank_app.apk","platforms":[{"platformName":"android","deviceName":"Samsung Galaxy S22 Ultra","platformVersion":"12.0"},{"platformName":"android","deviceName":"Google Pixel 7 Pro","platformVersion":"13.0"},{"platformName":"android","deviceName":"OnePlus 9","platformVersion":"11.0"}],"parallelsPerPlatform":1,"browserstackLocal":true,"buildName":"browserstack-build-1","projectName":"B2B Mobile Demo","debug":true,"networkLogs":true}
2025-07-29T07:20:28.261Z CLI info [testhub:module]  [kanat_VX6i9G]   [9db2269d-bb97-431a-92df-8889c73e4174]  Starting testhub from 11408:0
2025-07-29T07:20:28.262Z CLI info [testhub:module]  [kanat_VX6i9G]   [9db2269d-bb97-431a-92df-8889c73e4174]  startBuild: payload=

{"started_at":"2025-07-29T07:20:28.262Z","host_info":{"hostname":"MacBook-Pro-00059362.local","platform":"darwin","type":"Darwin","version":"Darwin Kernel Version 24.5.0: Tue Apr 22 19:53:26 PDT 2025; root:xnu-11417.121.6~2/RELEASE_X86_64","arch":"x64"},"ci_info":{"build_number":null},"version_control":{"name":"git","sha":"727003fc212f2f290a50bbf7310668e8901e6d4b","short_sha":"727003fc21","branch":"main","tag":null,"committer":"00059362 <a00059362@MacBook-Pro-00059362.local>","committer_date":"2025-07-28T09:08:59.000Z","author":"00059362 <a00059362@MacBook-Pro-00059362.local>","author_date":"2025-07-28T09:08:59.000Z","commit_message":"Refactor project","root":"/Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo","common_git_dir":"/Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/.git","worktree_git_dir":"/Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/.git","last_tag":null,"commits_since_last_tag":null,"remotes":[{"name":"origin","url":"https://github.com/Kanat-Nurumbetov/mobile-demo.git"}]},"project_name":"B2B Mobile Demo","name":"browserstack-build-1","build_identifier":"#1","build_run_identifier":null,"description":"","tags":[],"failed_tests_rerun":false,"accessibility":{"settings":{}},"framework_details":{"frameworkName":"pytest","frameworkVersion":"8.4.1","sdkVersion":"1.30.5","cliVersion":"1.6.1","language":"python","testFramework":{"name":"selenium","version":"4.34.0"}},"product_map":{"observability":true,"accessibility":null,"percy":false,"automate":false,"app_automate":true},"browserstackAutomation":true}
2025-07-29T07:20:28.262Z CLI info  [kanat_VX6i9G]   [9db2269d-bb97-431a-92df-8889c73e4174]  [PRODUCTION] Making POST request to https://sdk.browserstack.com
2025-07-29T07:20:29.638Z CLI info [testhub:module]  [kanat_VX6i9G]   [9db2269d-bb97-431a-92df-8889c73e4174]  startBuild: response=hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu
2025-07-29T07:20:29.640Z CLI info  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  [PRODUCTION] Making POST request to https://api.browserstack.com
2025-07-29T07:20:29.643Z CLI info  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  [PRODUCTION] Making GET request to https://api.browserstack.com
2025-07-29T07:20:30.260Z CLI error  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  error invoking callback for eventName: {}
2025-07-29T07:20:30.260Z CLI error  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Error: invalid percyToken=null
    at /snapshot/browserstack-binary/cli/dist/index.js
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-07-29T07:20:35.151Z CLI info [appautomate:service]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Using app: ./apk/halyk_bank_app.apk
2025-07-29T07:20:35.151Z CLI info [appautomate:service]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Uploading app /Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/apk/halyk_bank_app.apk  to browserstack
2025-07-29T07:20:35.153Z CLI info  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  [PRODUCTION] Making POST request to https://api.browserstack.com
2025-07-29T07:21:15.155Z CLI error  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  error invoking callback for eventName: {}
2025-07-29T07:21:15.155Z CLI error  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Error: Error in uploading app: {
  error: '[BROWSERSTACK_TESTING_TIME_LIMIT_EXHAUSTED]App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial.'
}
    at /snapshot/browserstack-binary/cli/dist/index.js
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-07-29T07:21:17.782Z CLI info  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  [PRODUCTION] Making GET request to https://hub.browserstack.com
2025-07-29T07:21:18.575Z CLI info  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  [PRODUCTION] Making GET request to https://hub-euw.browserstack.com
2025-07-29T07:21:18.576Z CLI info  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  [PRODUCTION] Making GET request to https://hub-use.browserstack.com
2025-07-29T07:21:18.576Z CLI info  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  [PRODUCTION] Making GET request to https://hub-aps.browserstack.com
2025-07-29T07:21:19.245Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '374b04b1-c77f-4020-a797-1c1759af91bc',
    name: 'setup',
    result: 'pending',
    test_run_id: 'e8336771-5513-4b09-9cd3-17c01478a82d',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:19.239Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:19.260Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:19Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      level: 'INFO',
      test_run_uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d'
    }
  ]
} to 11408:0
2025-07-29T07:21:19.328Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '374b04b1-c77f-4020-a797-1c1759af91bc',
    name: 'setup',
    result: 'passed',
    test_run_id: 'e8336771-5513-4b09-9cd3-17c01478a82d',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:19.239Z',
    finished_at: '2025-07-29T07:21:19.322Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:19.368Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'c98df56d-2d99-4a36-b822-10c13d4c4af8',
    name: 'setup',
    result: 'pending',
    test_run_id: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:19.362Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:19.382Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:19Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      level: 'INFO',
      test_run_uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a'
    }
  ]
} to 11408:0
2025-07-29T07:21:19.426Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'c98df56d-2d99-4a36-b822-10c13d4c4af8',
    name: 'setup',
    result: 'passed',
    test_run_id: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:19.362Z',
    finished_at: '2025-07-29T07:21:19.420Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:19.440Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
    name: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:19.429Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Samsung]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:19.442Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:19Z [tests.test_b2b][INFO] - üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a'
    }
  ]
} to 11408:0
2025-07-29T07:21:19.444Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:19Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a'
    }
  ]
} to 11408:0
2025-07-29T07:21:19.447Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:19Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a'
    }
  ]
} to 11408:0
2025-07-29T07:21:19.450Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:19Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a'
    }
  ]
} to 11408:0
2025-07-29T07:21:19.452Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:19Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a'
    }
  ]
} to 11408:0
2025-07-29T07:21:19.652Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Processing batch event [
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '374b04b1-c77f-4020-a797-1c1759af91bc',
      name: 'setup',
      result: 'pending',
      test_run_id: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:19.239Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '374b04b1-c77f-4020-a797-1c1759af91bc',
      name: 'setup',
      result: 'passed',
      test_run_id: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:19.239Z',
      finished_at: '2025-07-29T07:21:19.322Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'c98df56d-2d99-4a36-b822-10c13d4c4af8',
      name: 'setup',
      result: 'pending',
      test_run_id: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:19.362Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'c98df56d-2d99-4a36-b822-10c13d4c4af8',
      name: 'setup',
      result: 'passed',
      test_run_id: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:19.362Z',
      finished_at: '2025-07-29T07:21:19.420Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      name: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:19.429Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 11408:0
2025-07-29T07:21:19.653Z CLI info  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T07:21:19.813Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'af290e6e-2e90-4f2f-a464-642ec7c9db09',
    name: 'setup',
    result: 'pending',
    test_run_id: 'db98771b-ed37-4c25-8420-36d87da18bdf',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:19.809Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:19.827Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:19Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      level: 'INFO',
      test_run_uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf'
    }
  ]
} to 11408:0
2025-07-29T07:21:19.848Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
    name: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:19.836Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Samsung]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:19.851Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:19Z [tests.test_b2b][INFO] - üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d'
    }
  ]
} to 11408:0
2025-07-29T07:21:19.854Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:19Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d'
    }
  ]
} to 11408:0
2025-07-29T07:21:19.858Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:19Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d'
    }
  ]
} to 11408:0
2025-07-29T07:21:19.861Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:19Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d'
    }
  ]
} to 11408:0
2025-07-29T07:21:19.865Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:19Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d'
    }
  ]
} to 11408:0
2025-07-29T07:21:19.872Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'af290e6e-2e90-4f2f-a464-642ec7c9db09',
    name: 'setup',
    result: 'passed',
    test_run_id: 'db98771b-ed37-4c25-8420-36d87da18bdf',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:19.809Z',
    finished_at: '2025-07-29T07:21:19.867Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:19.890Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf',
    name: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:19.878Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Samsung]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:19.893Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:19Z [tests.test_b2b][INFO] - üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf'
    }
  ]
} to 11408:0
2025-07-29T07:21:19.897Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:19Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf'
    }
  ]
} to 11408:0
2025-07-29T07:21:19.901Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:19Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf'
    }
  ]
} to 11408:0
2025-07-29T07:21:19.904Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:19Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf'
    }
  ]
} to 11408:0
2025-07-29T07:21:19.908Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:19Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf'
    }
  ]
} to 11408:0
2025-07-29T07:21:21.561Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a'
    }
  ]
} to 11408:0
2025-07-29T07:21:21.564Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      level: 'INFO',
      test_run_uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a'
    }
  ]
} to 11408:0
2025-07-29T07:21:21.567Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a'
    }
  ]
} to 11408:0
2025-07-29T07:21:21.570Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Samsung] hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a'
    }
  ]
} to 11408:0
2025-07-29T07:21:21.585Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a'
    }
  ]
} to 11408:0
2025-07-29T07:21:21.605Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
    name: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 2158,
    started_at: '2025-07-29T07:21:19.429Z',
    finished_at: '2025-07-29T07:21:21.587Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Samsung]'
    },
    hooks: [ 'c98df56d-2d99-4a36-b822-10c13d4c4af8' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:21.613Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'aae49000-61cc-4a32-add9-80dac5d16bcf',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:21.607Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:21.616Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:21Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Samsung] (–∑–∞ 2.23—Å)',
      level: 'INFO',
      test_run_uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a'
    }
  ]
} to 11408:0
2025-07-29T07:21:21.622Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:21.615Z',
      uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Samsung] (–∑–∞ 2.23—Å)',
      level: 'INFO',
      test_run_uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a'
    }
  ]
} to 11408:0
2025-07-29T07:21:21.622Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:19.440Z',
      uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      kind: 'TEST_LOG',
      message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a'
    }
  ]
} to 11408:0
2025-07-29T07:21:21.622Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:19.443Z',
      uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a'
    }
  ]
} to 11408:0
2025-07-29T07:21:21.622Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:19.446Z',
      uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a'
    }
  ]
} to 11408:0
2025-07-29T07:21:21.623Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:19.449Z',
      uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a'
    }
  ]
} to 11408:0
2025-07-29T07:21:21.623Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:19.451Z',
      uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a'
    }
  ]
} to 11408:0
2025-07-29T07:21:21.623Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:21.374Z',
      uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      kind: 'TEST_LOG',
      message: 'post_data: Sending data to testhub for events HookRunStarted',
      level: 'DEBUG',
      test_run_uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a'
    }
  ]
} to 11408:0
2025-07-29T07:21:21.623Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:21.381Z',
      uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      kind: 'TEST_LOG',
      message: 'Starting new HTTPS connection (1): collector-observability.browserstack.com:443',
      level: 'DEBUG',
      test_run_uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a'
    }
  ]
} to 11408:0
2025-07-29T07:21:21.633Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'aae49000-61cc-4a32-add9-80dac5d16bcf',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:21.607Z',
    finished_at: '2025-07-29T07:21:21.625Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:21.650Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Processing batch event [
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'af290e6e-2e90-4f2f-a464-642ec7c9db09',
      name: 'setup',
      result: 'pending',
      test_run_id: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:19.809Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      name: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:19.836Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'af290e6e-2e90-4f2f-a464-642ec7c9db09',
      name: 'setup',
      result: 'passed',
      test_run_id: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:19.809Z',
      finished_at: '2025-07-29T07:21:19.867Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      name: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:19.878Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      name: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 2158,
      started_at: '2025-07-29T07:21:19.429Z',
      finished_at: '2025-07-29T07:21:21.587Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'aae49000-61cc-4a32-add9-80dac5d16bcf',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:21.607Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'aae49000-61cc-4a32-add9-80dac5d16bcf',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'd74e9284-a45c-4e82-ac94-9c83fef8ab3a',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:21.607Z',
      finished_at: '2025-07-29T07:21:21.625Z'
    },
    logs: []
  }
] to 11408:0
2025-07-29T07:21:21.651Z CLI info  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T07:21:21.656Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '364c57e3-6a3c-4f87-9bce-255d2e4c71a8',
    name: 'setup',
    result: 'pending',
    test_run_id: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:21.652Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:21.670Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:21Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      level: 'INFO',
      test_run_uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc'
    }
  ]
} to 11408:0
2025-07-29T07:21:21.698Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '364c57e3-6a3c-4f87-9bce-255d2e4c71a8',
    name: 'setup',
    result: 'passed',
    test_run_id: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:21.652Z',
    finished_at: '2025-07-29T07:21:21.692Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:21.717Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
    name: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:21.704Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Samsung]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:21.721Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:21Z [tests.test_b2b][INFO] - üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc'
    }
  ]
} to 11408:0
2025-07-29T07:21:21.725Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:21Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc'
    }
  ]
} to 11408:0
2025-07-29T07:21:21.729Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:21Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc'
    }
  ]
} to 11408:0
2025-07-29T07:21:21.732Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:21Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc'
    }
  ]
} to 11408:0
2025-07-29T07:21:21.738Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:21Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc'
    }
  ]
} to 11408:0
2025-07-29T07:21:21.984Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d'
    }
  ]
} to 11408:0
2025-07-29T07:21:21.988Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      level: 'INFO',
      test_run_uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d'
    }
  ]
} to 11408:0
2025-07-29T07:21:21.992Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d'
    }
  ]
} to 11408:0
2025-07-29T07:21:21.996Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Samsung] hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.012Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.023Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.035Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
    name: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 2180,
    started_at: '2025-07-29T07:21:19.836Z',
    finished_at: '2025-07-29T07:21:22.016Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Samsung]'
    },
    hooks: [ '374b04b1-c77f-4020-a797-1c1759af91bc' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:22.044Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '1a5a5297-6ff3-43d8-ba66-bcda0bc45a84',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'e8336771-5513-4b09-9cd3-17c01478a82d',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:22.038Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:22.048Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:22Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Samsung] (–∑–∞ 2.79—Å)',
      level: 'INFO',
      test_run_uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.054Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:22.047Z',
      uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Samsung] (–∑–∞ 2.79—Å)',
      level: 'INFO',
      test_run_uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.054Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:19.849Z',
      uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      kind: 'TEST_LOG',
      message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.054Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:19.853Z',
      uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.054Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:19.857Z',
      uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.055Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:19.860Z',
      uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.055Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:19.864Z',
      uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.055Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:21.248Z',
      uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      kind: 'TEST_LOG',
      message: 'post_data: Sending data to testhub for events HookRunStarted',
      level: 'DEBUG',
      test_run_uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.055Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:21.254Z',
      uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      kind: 'TEST_LOG',
      message: 'Starting new HTTPS connection (1): collector-observability.browserstack.com:443',
      level: 'DEBUG',
      test_run_uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.055Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:21.861Z',
      uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      kind: 'TEST_LOG',
      message: 'https://collector-observability.browserstack.com:443 "POST /api/v1/batch HTTP/1.1" 401 None',
      level: 'DEBUG',
      test_run_uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.066Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '1a5a5297-6ff3-43d8-ba66-bcda0bc45a84',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'e8336771-5513-4b09-9cd3-17c01478a82d',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:22.038Z',
    finished_at: '2025-07-29T07:21:22.059Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:22.092Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '6fb6df34-3db6-436e-b4b1-de2b00d5ab01',
    name: 'setup',
    result: 'pending',
    test_run_id: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:22.088Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:22.104Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:22Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      level: 'INFO',
      test_run_uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.132Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '6fb6df34-3db6-436e-b4b1-de2b00d5ab01',
    name: 'setup',
    result: 'passed',
    test_run_id: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:22.088Z',
    finished_at: '2025-07-29T07:21:22.126Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:22.153Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
    name: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:22.140Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Samsung]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:22.157Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:22Z [tests.test_b2b][INFO] - üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.161Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:22Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.168Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:22Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.172Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:22Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.178Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:22Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.531Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      level: 'INFO',
      test_run_uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.537Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.542Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Samsung] hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.559Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.585Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf',
    name: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 2686,
    started_at: '2025-07-29T07:21:19.878Z',
    finished_at: '2025-07-29T07:21:22.564Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Samsung]'
    },
    hooks: [ 'af290e6e-2e90-4f2f-a464-642ec7c9db09' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:22.594Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '2edf9bbc-b41e-4106-913d-558ae9af6670',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'db98771b-ed37-4c25-8420-36d87da18bdf',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:22.589Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:22.600Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:22Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Samsung] (–∑–∞ 2.77—Å)',
      level: 'INFO',
      test_run_uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.607Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:22.599Z',
      uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Samsung] (–∑–∞ 2.77—Å)',
      level: 'INFO',
      test_run_uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.607Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:19.892Z',
      uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      kind: 'TEST_LOG',
      message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.607Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:19.896Z',
      uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.607Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:19.899Z',
      uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.607Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:19.903Z',
      uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.607Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:19.907Z',
      uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.607Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:21.821Z',
      uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      kind: 'TEST_LOG',
      message: 'post_data: Sending data to testhub for events HookRunStarted',
      level: 'DEBUG',
      test_run_uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.607Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:21.830Z',
      uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      kind: 'TEST_LOG',
      message: 'Starting new HTTPS connection (1): collector-observability.browserstack.com:443',
      level: 'DEBUG',
      test_run_uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.619Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '2edf9bbc-b41e-4106-913d-558ae9af6670',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'db98771b-ed37-4c25-8420-36d87da18bdf',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:22.589Z',
    finished_at: '2025-07-29T07:21:22.612Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:22.647Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '50f7aea4-cc75-4b57-ad8a-b3fc7c88fae6',
    name: 'setup',
    result: 'pending',
    test_run_id: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:22.643Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:22.659Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:22Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      level: 'INFO',
      test_run_uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.687Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '50f7aea4-cc75-4b57-ad8a-b3fc7c88fae6',
    name: 'setup',
    result: 'passed',
    test_run_id: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:22.643Z',
    finished_at: '2025-07-29T07:21:22.681Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:22.710Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
    name: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:22.696Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Samsung]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:22.714Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:22Z [tests.test_b2b][INFO] - üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - samsung_s22',
      level: 'INFO',
      test_run_uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.719Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:22Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.726Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:22Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.732Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:22Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e'
    }
  ]
} to 11408:0
2025-07-29T07:21:22.738Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:22Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e'
    }
  ]
} to 11408:0
2025-07-29T07:21:23.654Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Processing batch event [
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '364c57e3-6a3c-4f87-9bce-255d2e4c71a8',
      name: 'setup',
      result: 'pending',
      test_run_id: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:21.652Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '364c57e3-6a3c-4f87-9bce-255d2e4c71a8',
      name: 'setup',
      result: 'passed',
      test_run_id: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:21.652Z',
      finished_at: '2025-07-29T07:21:21.692Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      name: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:21.704Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      name: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 2180,
      started_at: '2025-07-29T07:21:19.836Z',
      finished_at: '2025-07-29T07:21:22.016Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '1a5a5297-6ff3-43d8-ba66-bcda0bc45a84',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:22.038Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '1a5a5297-6ff3-43d8-ba66-bcda0bc45a84',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'e8336771-5513-4b09-9cd3-17c01478a82d',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:22.038Z',
      finished_at: '2025-07-29T07:21:22.059Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '6fb6df34-3db6-436e-b4b1-de2b00d5ab01',
      name: 'setup',
      result: 'pending',
      test_run_id: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:22.088Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '6fb6df34-3db6-436e-b4b1-de2b00d5ab01',
      name: 'setup',
      result: 'passed',
      test_run_id: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:22.088Z',
      finished_at: '2025-07-29T07:21:22.126Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      name: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:22.140Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      name: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 2686,
      started_at: '2025-07-29T07:21:19.878Z',
      finished_at: '2025-07-29T07:21:22.564Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '2edf9bbc-b41e-4106-913d-558ae9af6670',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:22.589Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '2edf9bbc-b41e-4106-913d-558ae9af6670',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'db98771b-ed37-4c25-8420-36d87da18bdf',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:22.589Z',
      finished_at: '2025-07-29T07:21:22.612Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '50f7aea4-cc75-4b57-ad8a-b3fc7c88fae6',
      name: 'setup',
      result: 'pending',
      test_run_id: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:22.643Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '50f7aea4-cc75-4b57-ad8a-b3fc7c88fae6',
      name: 'setup',
      result: 'passed',
      test_run_id: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:22.643Z',
      finished_at: '2025-07-29T07:21:22.681Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      name: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:22.696Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 11408:0
2025-07-29T07:21:23.656Z CLI info  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T07:21:23.785Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc'
    }
  ]
} to 11408:0
2025-07-29T07:21:23.791Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      level: 'INFO',
      test_run_uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc'
    }
  ]
} to 11408:0
2025-07-29T07:21:23.797Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc'
    }
  ]
} to 11408:0
2025-07-29T07:21:23.802Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Samsung] hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc'
    }
  ]
} to 11408:0
2025-07-29T07:21:23.820Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc'
    }
  ]
} to 11408:0
2025-07-29T07:21:23.849Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
    name: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 2121,
    started_at: '2025-07-29T07:21:21.704Z',
    finished_at: '2025-07-29T07:21:23.825Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Samsung]'
    },
    hooks: [ '364c57e3-6a3c-4f87-9bce-255d2e4c71a8' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:23.859Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '5691acb4-47d3-4c5d-981a-9c779437dde2',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:23.853Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:23.865Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:23Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Samsung] (–∑–∞ 2.19—Å)',
      level: 'INFO',
      test_run_uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc'
    }
  ]
} to 11408:0
2025-07-29T07:21:23.873Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:23.864Z',
      uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Samsung] (–∑–∞ 2.19—Å)',
      level: 'INFO',
      test_run_uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc'
    }
  ]
} to 11408:0
2025-07-29T07:21:23.873Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:21.720Z',
      uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      kind: 'TEST_LOG',
      message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc'
    }
  ]
} to 11408:0
2025-07-29T07:21:23.873Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:21.724Z',
      uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc'
    }
  ]
} to 11408:0
2025-07-29T07:21:23.873Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:21.728Z',
      uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc'
    }
  ]
} to 11408:0
2025-07-29T07:21:23.873Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:21.731Z',
      uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc'
    }
  ]
} to 11408:0
2025-07-29T07:21:23.873Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:21.736Z',
      uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc'
    }
  ]
} to 11408:0
2025-07-29T07:21:23.873Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:22.003Z',
      uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      kind: 'TEST_LOG',
      message: 'https://collector-observability.browserstack.com:443 "POST /api/v1/batch HTTP/1.1" 401 None',
      level: 'DEBUG',
      test_run_uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc'
    }
  ]
} to 11408:0
2025-07-29T07:21:23.886Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '5691acb4-47d3-4c5d-981a-9c779437dde2',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:23.853Z',
    finished_at: '2025-07-29T07:21:23.878Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:23.918Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'c9328c29-8177-4352-b966-64c57e970a65',
    name: 'setup',
    result: 'pending',
    test_run_id: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:23.914Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:23.931Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:23Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      level: 'INFO',
      test_run_uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008'
    }
  ]
} to 11408:0
2025-07-29T07:21:23.965Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'c9328c29-8177-4352-b966-64c57e970a65',
    name: 'setup',
    result: 'passed',
    test_run_id: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:23.914Z',
    finished_at: '2025-07-29T07:21:23.959Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:23.990Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
    name: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:23.974Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Pixel]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:23.995Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:23Z [tests.test_b2b][INFO] - üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - pixel_6',
      level: 'INFO',
      test_run_uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.000Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:23Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.010Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:24Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.017Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:24Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.023Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:24Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.221Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.227Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      level: 'INFO',
      test_run_uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.233Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.240Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Samsung] hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.259Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.344Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
    name: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 2125,
    started_at: '2025-07-29T07:21:22.140Z',
    finished_at: '2025-07-29T07:21:24.265Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Samsung]'
    },
    hooks: [ '6fb6df34-3db6-436e-b4b1-de2b00d5ab01' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:24.356Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'eaeada8b-f6c7-4f61-a4a5-981b5ad208c2',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:24.350Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:24.362Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:24Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Samsung] (–∑–∞ 2.25—Å)',
      level: 'INFO',
      test_run_uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.370Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:24.361Z',
      uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Samsung] (–∑–∞ 2.25—Å)',
      level: 'INFO',
      test_run_uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.371Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:22.156Z',
      uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      kind: 'TEST_LOG',
      message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.371Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:22.160Z',
      uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.371Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:22.166Z',
      uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.371Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:22.171Z',
      uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.371Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:22.176Z',
      uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.371Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:23.869Z',
      uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      kind: 'TEST_LOG',
      message: 'post_data: Sending data to testhub for events HookRunStarted',
      level: 'DEBUG',
      test_run_uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.371Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:23.871Z',
      uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      kind: 'TEST_LOG',
      message: 'Starting new HTTPS connection (1): collector-observability.browserstack.com:443',
      level: 'DEBUG',
      test_run_uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.385Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'eaeada8b-f6c7-4f61-a4a5-981b5ad208c2',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:24.350Z',
    finished_at: '2025-07-29T07:21:24.377Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:24.418Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'ab031ba1-591d-464e-9e3f-b32d66b66ae4',
    name: 'setup',
    result: 'pending',
    test_run_id: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:24.414Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:24.432Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:24Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      level: 'INFO',
      test_run_uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.472Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'ab031ba1-591d-464e-9e3f-b32d66b66ae4',
    name: 'setup',
    result: 'passed',
    test_run_id: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:24.414Z',
    finished_at: '2025-07-29T07:21:24.465Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:24.501Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
    name: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:24.483Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Pixel]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:24.507Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:24Z [tests.test_b2b][INFO] - üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - pixel_6',
      level: 'INFO',
      test_run_uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.514Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:24Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.522Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:24Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.531Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:24Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.538Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:24Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.789Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.796Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      level: 'INFO',
      test_run_uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.803Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.810Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Samsung] hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.831Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.865Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
    name: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 2142,
    started_at: '2025-07-29T07:21:22.696Z',
    finished_at: '2025-07-29T07:21:24.838Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Samsung]'
    },
    hooks: [ '50f7aea4-cc75-4b57-ad8a-b3fc7c88fae6' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:24.878Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'f90784ee-92f2-4c80-83ec-4c8c46f6a935',
    name: 'teardown',
    result: 'pending',
    test_run_id: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:24.872Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:24.885Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:24Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Samsung] (–∑–∞ 2.22—Å)',
      level: 'INFO',
      test_run_uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.894Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:24.884Z',
      uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Samsung] (–∑–∞ 2.22—Å)',
      level: 'INFO',
      test_run_uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.894Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:22.713Z',
      uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      kind: 'TEST_LOG',
      message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - samsung_s22',
      level: 'INFO',
      test_run_uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.894Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:22.718Z',
      uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.894Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:22.725Z',
      uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.894Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:22.731Z',
      uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.894Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:22.737Z',
      uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.894Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:24.431Z',
      uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      kind: 'TEST_LOG',
      message: 'post_data: Sending data to testhub for events HookRunStarted',
      level: 'DEBUG',
      test_run_uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.895Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:24.432Z',
      uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      kind: 'TEST_LOG',
      message: 'Starting new HTTPS connection (1): collector-observability.browserstack.com:443',
      level: 'DEBUG',
      test_run_uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.909Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'f90784ee-92f2-4c80-83ec-4c8c46f6a935',
    name: 'teardown',
    result: 'passed',
    test_run_id: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:24.872Z',
    finished_at: '2025-07-29T07:21:24.901Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:24.943Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'ff638158-b453-4067-8210-3c667e33eb5a',
    name: 'setup',
    result: 'pending',
    test_run_id: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:24.940Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:24.959Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:24Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      level: 'INFO',
      test_run_uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46'
    }
  ]
} to 11408:0
2025-07-29T07:21:24.993Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'ff638158-b453-4067-8210-3c667e33eb5a',
    name: 'setup',
    result: 'passed',
    test_run_id: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:24.940Z',
    finished_at: '2025-07-29T07:21:24.988Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:25.022Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
    name: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:25.005Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Pixel]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:25.030Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:25Z [tests.test_b2b][INFO] - üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - pixel_6',
      level: 'INFO',
      test_run_uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46'
    }
  ]
} to 11408:0
2025-07-29T07:21:25.037Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:25Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46'
    }
  ]
} to 11408:0
2025-07-29T07:21:25.046Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:25Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46'
    }
  ]
} to 11408:0
2025-07-29T07:21:25.055Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:25Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46'
    }
  ]
} to 11408:0
2025-07-29T07:21:25.063Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:25Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46'
    }
  ]
} to 11408:0
2025-07-29T07:21:25.653Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      name: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 2121,
      started_at: '2025-07-29T07:21:21.704Z',
      finished_at: '2025-07-29T07:21:23.825Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '5691acb4-47d3-4c5d-981a-9c779437dde2',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:23.853Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '5691acb4-47d3-4c5d-981a-9c779437dde2',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'cb4b05a1-2426-4147-a90f-aa2d47b8b1cc',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:23.853Z',
      finished_at: '2025-07-29T07:21:23.878Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'c9328c29-8177-4352-b966-64c57e970a65',
      name: 'setup',
      result: 'pending',
      test_run_id: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:23.914Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'c9328c29-8177-4352-b966-64c57e970a65',
      name: 'setup',
      result: 'passed',
      test_run_id: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:23.914Z',
      finished_at: '2025-07-29T07:21:23.959Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      name: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:23.974Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      name: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 2125,
      started_at: '2025-07-29T07:21:22.140Z',
      finished_at: '2025-07-29T07:21:24.265Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'eaeada8b-f6c7-4f61-a4a5-981b5ad208c2',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:24.350Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'eaeada8b-f6c7-4f61-a4a5-981b5ad208c2',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'a5c418b5-d298-4c38-a6c4-d7d20233152b',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:24.350Z',
      finished_at: '2025-07-29T07:21:24.377Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'ab031ba1-591d-464e-9e3f-b32d66b66ae4',
      name: 'setup',
      result: 'pending',
      test_run_id: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:24.414Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'ab031ba1-591d-464e-9e3f-b32d66b66ae4',
      name: 'setup',
      result: 'passed',
      test_run_id: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:24.414Z',
      finished_at: '2025-07-29T07:21:24.465Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      name: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:24.483Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      name: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 2142,
      started_at: '2025-07-29T07:21:22.696Z',
      finished_at: '2025-07-29T07:21:24.838Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'f90784ee-92f2-4c80-83ec-4c8c46f6a935',
      name: 'teardown',
      result: 'pending',
      test_run_id: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:24.872Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'f90784ee-92f2-4c80-83ec-4c8c46f6a935',
      name: 'teardown',
      result: 'passed',
      test_run_id: '4566162b-0646-4fe6-b41e-3ccd4de16a1e',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:24.872Z',
      finished_at: '2025-07-29T07:21:24.901Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'ff638158-b453-4067-8210-3c667e33eb5a',
      name: 'setup',
      result: 'pending',
      test_run_id: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:24.940Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'ff638158-b453-4067-8210-3c667e33eb5a',
      name: 'setup',
      result: 'passed',
      test_run_id: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:24.940Z',
      finished_at: '2025-07-29T07:21:24.988Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      name: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:25.005Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 11408:0
2025-07-29T07:21:25.656Z CLI info  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T07:21:26.070Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.078Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      level: 'INFO',
      test_run_uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.089Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.094Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Pixel] hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.117Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.154Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
    name: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 2150,
    started_at: '2025-07-29T07:21:23.974Z',
    finished_at: '2025-07-29T07:21:26.124Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Pixel]'
    },
    hooks: [ 'c9328c29-8177-4352-b966-64c57e970a65' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:26.166Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '03360754-72b3-40cd-8d35-7ee353e83c5f',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:26.161Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:26.175Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:26Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Pixel] (–∑–∞ 2.24—Å)',
      level: 'INFO',
      test_run_uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.184Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:26.173Z',
      uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Pixel] (–∑–∞ 2.24—Å)',
      level: 'INFO',
      test_run_uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.184Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:23.994Z',
      uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      kind: 'TEST_LOG',
      message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - pixel_6',
      level: 'INFO',
      test_run_uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.184Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:24.007Z',
      uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      kind: 'TEST_LOG',
      message: 'post_data: Sending data to testhub for events HookRunStarted, HookRunStarted',
      level: 'DEBUG',
      test_run_uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.185Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:24.008Z',
      uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      kind: 'TEST_LOG',
      message: 'Starting new HTTPS connection (1): collector-observability.browserstack.com:443',
      level: 'DEBUG',
      test_run_uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.185Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:23.999Z',
      uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.185Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:24.009Z',
      uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.185Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:24.015Z',
      uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.185Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:24.022Z',
      uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.185Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:24.612Z',
      uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      kind: 'TEST_LOG',
      message: 'https://collector-observability.browserstack.com:443 "POST /api/v1/batch HTTP/1.1" 401 None',
      level: 'DEBUG',
      test_run_uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.200Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '03360754-72b3-40cd-8d35-7ee353e83c5f',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:26.161Z',
    finished_at: '2025-07-29T07:21:26.192Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:26.240Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '31c8bb12-c9c6-41e2-a533-ff4489cc8b81',
    name: 'setup',
    result: 'pending',
    test_run_id: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:26.236Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:26.255Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:26Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      level: 'INFO',
      test_run_uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.287Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '31c8bb12-c9c6-41e2-a533-ff4489cc8b81',
    name: 'setup',
    result: 'passed',
    test_run_id: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:26.236Z',
    finished_at: '2025-07-29T07:21:26.282Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:26.321Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
    name: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:26.302Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Pixel]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:26.328Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:26Z [tests.test_b2b][INFO] - üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - pixel_6',
      level: 'INFO',
      test_run_uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.336Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:26Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.345Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:26Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.355Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:26Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.364Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:26Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.589Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.597Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      level: 'INFO',
      test_run_uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.605Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.614Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Pixel] hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.638Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.677Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
    name: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 2163,
    started_at: '2025-07-29T07:21:24.483Z',
    finished_at: '2025-07-29T07:21:26.646Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Pixel]'
    },
    hooks: [ 'ab031ba1-591d-464e-9e3f-b32d66b66ae4' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:26.690Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'bf1d4a71-f4b5-48f4-9369-b7eb475a201a',
    name: 'teardown',
    result: 'pending',
    test_run_id: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:26.685Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:26.698Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:26Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Pixel] (–∑–∞ 2.26—Å)',
      level: 'INFO',
      test_run_uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.709Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:26.697Z',
      uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Pixel] (–∑–∞ 2.26—Å)',
      level: 'INFO',
      test_run_uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.709Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:24.506Z',
      uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      kind: 'TEST_LOG',
      message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - pixel_6',
      level: 'INFO',
      test_run_uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.709Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:24.513Z',
      uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.709Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:24.521Z',
      uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.709Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:24.529Z',
      uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.709Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:24.537Z',
      uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.709Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:26.472Z',
      uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      kind: 'TEST_LOG',
      message: 'post_data: Sending data to testhub for events HookRunStarted',
      level: 'DEBUG',
      test_run_uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.709Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:26.474Z',
      uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      kind: 'TEST_LOG',
      message: 'Starting new HTTPS connection (1): collector-observability.browserstack.com:443',
      level: 'DEBUG',
      test_run_uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.726Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'bf1d4a71-f4b5-48f4-9369-b7eb475a201a',
    name: 'teardown',
    result: 'passed',
    test_run_id: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:26.685Z',
    finished_at: '2025-07-29T07:21:26.718Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:26.764Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'b337a90b-f101-420e-96d6-e1a440ec94d0',
    name: 'setup',
    result: 'pending',
    test_run_id: 'e4471acb-8219-448b-9ea6-0440730c37bd',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:26.761Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:26.779Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:26Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      level: 'INFO',
      test_run_uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.810Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'b337a90b-f101-420e-96d6-e1a440ec94d0',
    name: 'setup',
    result: 'passed',
    test_run_id: 'e4471acb-8219-448b-9ea6-0440730c37bd',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:26.761Z',
    finished_at: '2025-07-29T07:21:26.805Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:26.845Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd',
    name: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:26.825Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Pixel]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:26.852Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:26Z [tests.test_b2b][INFO] - üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - pixel_6',
      level: 'INFO',
      test_run_uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.862Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:26Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.872Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:26Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.882Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:26Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd'
    }
  ]
} to 11408:0
2025-07-29T07:21:26.892Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:26Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd'
    }
  ]
} to 11408:0
2025-07-29T07:21:27.115Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46'
    }
  ]
} to 11408:0
2025-07-29T07:21:27.124Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      level: 'INFO',
      test_run_uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46'
    }
  ]
} to 11408:0
2025-07-29T07:21:27.134Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46'
    }
  ]
} to 11408:0
2025-07-29T07:21:27.143Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Pixel] hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46'
    }
  ]
} to 11408:0
2025-07-29T07:21:27.168Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46'
    }
  ]
} to 11408:0
2025-07-29T07:21:27.211Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
    name: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 2172,
    started_at: '2025-07-29T07:21:25.005Z',
    finished_at: '2025-07-29T07:21:27.177Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Pixel]'
    },
    hooks: [ 'ff638158-b453-4067-8210-3c667e33eb5a' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:27.223Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '53dbaf96-b398-4455-9c74-2a67d2e80c02',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:27.218Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:27.232Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:27Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Pixel] (–∑–∞ 2.27—Å)',
      level: 'INFO',
      test_run_uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46'
    }
  ]
} to 11408:0
2025-07-29T07:21:27.244Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:27.230Z',
      uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Pixel] (–∑–∞ 2.27—Å)',
      level: 'INFO',
      test_run_uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46'
    }
  ]
} to 11408:0
2025-07-29T07:21:27.245Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:25.027Z',
      uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      kind: 'TEST_LOG',
      message: 'https://collector-observability.browserstack.com:443 "POST /api/v1/batch HTTP/1.1" 401 None',
      level: 'DEBUG',
      test_run_uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46'
    }
  ]
} to 11408:0
2025-07-29T07:21:27.245Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:25.028Z',
      uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      kind: 'TEST_LOG',
      message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - pixel_6',
      level: 'INFO',
      test_run_uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46'
    }
  ]
} to 11408:0
2025-07-29T07:21:27.245Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:25.036Z',
      uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46'
    }
  ]
} to 11408:0
2025-07-29T07:21:27.245Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:25.045Z',
      uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46'
    }
  ]
} to 11408:0
2025-07-29T07:21:27.245Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:25.053Z',
      uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46'
    }
  ]
} to 11408:0
2025-07-29T07:21:27.245Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:25.062Z',
      uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46'
    }
  ]
} to 11408:0
2025-07-29T07:21:27.245Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:27.030Z',
      uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      kind: 'TEST_LOG',
      message: 'post_data: Sending data to testhub for events HookRunStarted',
      level: 'DEBUG',
      test_run_uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46'
    }
  ]
} to 11408:0
2025-07-29T07:21:27.245Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:27.033Z',
      uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      kind: 'TEST_LOG',
      message: 'Starting new HTTPS connection (1): collector-observability.browserstack.com:443',
      level: 'DEBUG',
      test_run_uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46'
    }
  ]
} to 11408:0
2025-07-29T07:21:27.261Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '53dbaf96-b398-4455-9c74-2a67d2e80c02',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:27.218Z',
    finished_at: '2025-07-29T07:21:27.253Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:27.302Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '9b3cea77-bcea-4f18-8e67-7455987eca23',
    name: 'setup',
    result: 'pending',
    test_run_id: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:27.298Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:27.318Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:27Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      level: 'INFO',
      test_run_uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d'
    }
  ]
} to 11408:0
2025-07-29T07:21:27.350Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '9b3cea77-bcea-4f18-8e67-7455987eca23',
    name: 'setup',
    result: 'passed',
    test_run_id: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:27.298Z',
    finished_at: '2025-07-29T07:21:27.346Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:27.389Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
    name: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:27.367Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Pixel]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:27.398Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:27Z [tests.test_b2b][INFO] - üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - pixel_6',
      level: 'INFO',
      test_run_uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d'
    }
  ]
} to 11408:0
2025-07-29T07:21:27.408Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:27Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d'
    }
  ]
} to 11408:0
2025-07-29T07:21:27.419Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:27Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d'
    }
  ]
} to 11408:0
2025-07-29T07:21:27.429Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:27Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d'
    }
  ]
} to 11408:0
2025-07-29T07:21:27.440Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:27Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d'
    }
  ]
} to 11408:0
2025-07-29T07:21:27.654Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      name: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 2150,
      started_at: '2025-07-29T07:21:23.974Z',
      finished_at: '2025-07-29T07:21:26.124Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '03360754-72b3-40cd-8d35-7ee353e83c5f',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:26.161Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '03360754-72b3-40cd-8d35-7ee353e83c5f',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'bc8a4b94-7f71-4f29-b107-7666939ed008',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:26.161Z',
      finished_at: '2025-07-29T07:21:26.192Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '31c8bb12-c9c6-41e2-a533-ff4489cc8b81',
      name: 'setup',
      result: 'pending',
      test_run_id: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:26.236Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '31c8bb12-c9c6-41e2-a533-ff4489cc8b81',
      name: 'setup',
      result: 'passed',
      test_run_id: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:26.236Z',
      finished_at: '2025-07-29T07:21:26.282Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      name: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:26.302Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      name: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 2163,
      started_at: '2025-07-29T07:21:24.483Z',
      finished_at: '2025-07-29T07:21:26.646Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'bf1d4a71-f4b5-48f4-9369-b7eb475a201a',
      name: 'teardown',
      result: 'pending',
      test_run_id: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:26.685Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'bf1d4a71-f4b5-48f4-9369-b7eb475a201a',
      name: 'teardown',
      result: 'passed',
      test_run_id: '994309ef-6dda-4288-9ea2-bc8487f0dcaf',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:26.685Z',
      finished_at: '2025-07-29T07:21:26.718Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'b337a90b-f101-420e-96d6-e1a440ec94d0',
      name: 'setup',
      result: 'pending',
      test_run_id: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:26.761Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'b337a90b-f101-420e-96d6-e1a440ec94d0',
      name: 'setup',
      result: 'passed',
      test_run_id: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:26.761Z',
      finished_at: '2025-07-29T07:21:26.805Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      name: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:26.825Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      name: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 2172,
      started_at: '2025-07-29T07:21:25.005Z',
      finished_at: '2025-07-29T07:21:27.177Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '53dbaf96-b398-4455-9c74-2a67d2e80c02',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:27.218Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '53dbaf96-b398-4455-9c74-2a67d2e80c02',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'cb24e2f3-45ed-49c7-bdc5-f87f2ed93c46',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:27.218Z',
      finished_at: '2025-07-29T07:21:27.253Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '9b3cea77-bcea-4f18-8e67-7455987eca23',
      name: 'setup',
      result: 'pending',
      test_run_id: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:27.298Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '9b3cea77-bcea-4f18-8e67-7455987eca23',
      name: 'setup',
      result: 'passed',
      test_run_id: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:27.298Z',
      finished_at: '2025-07-29T07:21:27.346Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      name: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:27.367Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 11408:0
2025-07-29T07:21:27.657Z CLI info  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T07:21:28.418Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa'
    }
  ]
} to 11408:0
2025-07-29T07:21:28.427Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      level: 'INFO',
      test_run_uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa'
    }
  ]
} to 11408:0
2025-07-29T07:21:28.437Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa'
    }
  ]
} to 11408:0
2025-07-29T07:21:28.447Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Pixel] hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa'
    }
  ]
} to 11408:0
2025-07-29T07:21:28.476Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa'
    }
  ]
} to 11408:0
2025-07-29T07:21:28.522Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
    name: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 2184,
    started_at: '2025-07-29T07:21:26.302Z',
    finished_at: '2025-07-29T07:21:28.486Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Pixel]'
    },
    hooks: [ '31c8bb12-c9c6-41e2-a533-ff4489cc8b81' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:28.537Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '89a477ea-bdb6-422f-985f-9511020bee14',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:28.532Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:28.546Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:28Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Pixel] (–∑–∞ 2.28—Å)',
      level: 'INFO',
      test_run_uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa'
    }
  ]
} to 11408:0
2025-07-29T07:21:28.557Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:28.545Z',
      uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Pixel] (–∑–∞ 2.28—Å)',
      level: 'INFO',
      test_run_uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa'
    }
  ]
} to 11408:0
2025-07-29T07:21:28.557Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:26.327Z',
      uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      kind: 'TEST_LOG',
      message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - pixel_6',
      level: 'INFO',
      test_run_uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa'
    }
  ]
} to 11408:0
2025-07-29T07:21:28.557Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:26.335Z',
      uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa'
    }
  ]
} to 11408:0
2025-07-29T07:21:28.557Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:26.344Z',
      uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa'
    }
  ]
} to 11408:0
2025-07-29T07:21:28.557Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:26.354Z',
      uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa'
    }
  ]
} to 11408:0
2025-07-29T07:21:28.558Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:26.363Z',
      uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa'
    }
  ]
} to 11408:0
2025-07-29T07:21:28.558Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:26.618Z',
      uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      kind: 'TEST_LOG',
      message: 'post_data: Sending data to testhub for events HookRunStarted',
      level: 'DEBUG',
      test_run_uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa'
    }
  ]
} to 11408:0
2025-07-29T07:21:28.558Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:26.619Z',
      uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      kind: 'TEST_LOG',
      message: 'Starting new HTTPS connection (1): collector-observability.browserstack.com:443',
      level: 'DEBUG',
      test_run_uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa'
    }
  ]
} to 11408:0
2025-07-29T07:21:28.558Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:27.223Z',
      uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      kind: 'TEST_LOG',
      message: 'https://collector-observability.browserstack.com:443 "POST /api/v1/batch HTTP/1.1" 401 None',
      level: 'DEBUG',
      test_run_uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa'
    }
  ]
} to 11408:0
2025-07-29T07:21:28.574Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '89a477ea-bdb6-422f-985f-9511020bee14',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:28.532Z',
    finished_at: '2025-07-29T07:21:28.567Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:28.617Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'c52b78ca-50b8-41f2-92dc-d4339ba97eb7',
    name: 'setup',
    result: 'pending',
    test_run_id: '12216f04-0ae8-4358-bbbc-fcb8af1ea479',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:28.613Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:28.633Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '12216f04-0ae8-4358-bbbc-fcb8af1ea479',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:28Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_universal[Universal-QR]',
      level: 'INFO',
      test_run_uuid: '12216f04-0ae8-4358-bbbc-fcb8af1ea479'
    }
  ]
} to 11408:0
2025-07-29T07:21:28.671Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'c52b78ca-50b8-41f2-92dc-d4339ba97eb7',
    name: 'setup',
    result: 'passed',
    test_run_id: '12216f04-0ae8-4358-bbbc-fcb8af1ea479',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:28.613Z',
    finished_at: '2025-07-29T07:21:28.666Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:28.712Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '12216f04-0ae8-4358-bbbc-fcb8af1ea479',
    name: 'test_full_qr_payment_flow_universal[Universal-QR]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image",\n' +
        '        ["distrA", "distrB"],\n' +
        '        indirect=True,\n' +
        '        ids=["Universal-QR", "Megapolis-QR"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_universal(self, driver, qr_image):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ BrowserStack)"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {driver.test_mode}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_universal[Universal-QR]',
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:28.688Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Universal-QR]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:28.737Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '12216f04-0ae8-4358-bbbc-fcb8af1ea479',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '12216f04-0ae8-4358-bbbc-fcb8af1ea479'
    }
  ]
} to 11408:0
2025-07-29T07:21:28.746Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '12216f04-0ae8-4358-bbbc-fcb8af1ea479',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Universal-QR]',
      level: 'INFO',
      test_run_uuid: '12216f04-0ae8-4358-bbbc-fcb8af1ea479'
    }
  ]
} to 11408:0
2025-07-29T07:21:28.756Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '12216f04-0ae8-4358-bbbc-fcb8af1ea479',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '12216f04-0ae8-4358-bbbc-fcb8af1ea479'
    }
  ]
} to 11408:0
2025-07-29T07:21:28.766Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '12216f04-0ae8-4358-bbbc-fcb8af1ea479',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Universal-QR] hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '12216f04-0ae8-4358-bbbc-fcb8af1ea479'
    }
  ]
} to 11408:0
2025-07-29T07:21:28.794Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '12216f04-0ae8-4358-bbbc-fcb8af1ea479',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '12216f04-0ae8-4358-bbbc-fcb8af1ea479'
    }
  ]
} to 11408:0
2025-07-29T07:21:28.840Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '12216f04-0ae8-4358-bbbc-fcb8af1ea479',
    name: 'test_full_qr_payment_flow_universal[Universal-QR]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image",\n' +
        '        ["distrA", "distrB"],\n' +
        '        indirect=True,\n' +
        '        ids=["Universal-QR", "Megapolis-QR"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_universal(self, driver, qr_image):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ BrowserStack)"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {driver.test_mode}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_universal[Universal-QR]',
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 116,
    started_at: '2025-07-29T07:21:28.688Z',
    finished_at: '2025-07-29T07:21:28.804Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Universal-QR]'
    },
    hooks: [ 'c52b78ca-50b8-41f2-92dc-d4339ba97eb7' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:28.855Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'cf629535-04b4-425e-ad2a-e11b3b36eaee',
    name: 'teardown',
    result: 'pending',
    test_run_id: '12216f04-0ae8-4358-bbbc-fcb8af1ea479',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:28.850Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:28.864Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '12216f04-0ae8-4358-bbbc-fcb8af1ea479',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:28Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Universal-QR] (–∑–∞ 0.22—Å)',
      level: 'INFO',
      test_run_uuid: '12216f04-0ae8-4358-bbbc-fcb8af1ea479'
    }
  ]
} to 11408:0
2025-07-29T07:21:28.875Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:28.863Z',
      uuid: '12216f04-0ae8-4358-bbbc-fcb8af1ea479',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Universal-QR] (–∑–∞ 0.22—Å)',
      level: 'INFO',
      test_run_uuid: '12216f04-0ae8-4358-bbbc-fcb8af1ea479'
    }
  ]
} to 11408:0
2025-07-29T07:21:28.891Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'cf629535-04b4-425e-ad2a-e11b3b36eaee',
    name: 'teardown',
    result: 'passed',
    test_run_id: '12216f04-0ae8-4358-bbbc-fcb8af1ea479',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:28.850Z',
    finished_at: '2025-07-29T07:21:28.884Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:28.938Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '14723c99-cbef-4a4e-951f-f42b278cae39',
    name: 'setup',
    result: 'pending',
    test_run_id: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:28.934Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:28.955Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:28Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_universal[Megapolis-QR]',
      level: 'INFO',
      test_run_uuid: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7'
    }
  ]
} to 11408:0
2025-07-29T07:21:28.985Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '14723c99-cbef-4a4e-951f-f42b278cae39',
    name: 'setup',
    result: 'passed',
    test_run_id: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:28.934Z',
    finished_at: '2025-07-29T07:21:28.980Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:29.028Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7',
    name: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image",\n' +
        '        ["distrA", "distrB"],\n' +
        '        indirect=True,\n' +
        '        ids=["Universal-QR", "Megapolis-QR"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_universal(self, driver, qr_image):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ BrowserStack)"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {driver.test_mode}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:29.004Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Megapolis-QR]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:29.055Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.066Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Megapolis-QR]',
      level: 'INFO',
      test_run_uuid: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.075Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.085Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Megapolis-QR] hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.114Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.162Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7',
    name: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image",\n' +
        '        ["distrA", "distrB"],\n' +
        '        indirect=True,\n' +
        '        ids=["Universal-QR", "Megapolis-QR"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_universal(self, driver, qr_image):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ BrowserStack)"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {driver.test_mode}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 121,
    started_at: '2025-07-29T07:21:29.004Z',
    finished_at: '2025-07-29T07:21:29.125Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Megapolis-QR]'
    },
    hooks: [ '14723c99-cbef-4a4e-951f-f42b278cae39' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:29.176Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '396182a6-a4c6-4e5a-b7c2-44fa29e2f9e3',
    name: 'teardown',
    result: 'pending',
    test_run_id: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:29.172Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:29.187Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:29Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Megapolis-QR] (–∑–∞ 0.22—Å)',
      level: 'INFO',
      test_run_uuid: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.199Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:29.186Z',
      uuid: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Megapolis-QR] (–∑–∞ 0.22—Å)',
      level: 'INFO',
      test_run_uuid: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.218Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '396182a6-a4c6-4e5a-b7c2-44fa29e2f9e3',
    name: 'teardown',
    result: 'passed',
    test_run_id: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:29.172Z',
    finished_at: '2025-07-29T07:21:29.210Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:29.267Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '418238f4-d0ff-4599-b0eb-6c22ce58f8c6',
    name: 'setup',
    result: 'pending',
    test_run_id: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:29.263Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:29.284Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:29Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      level: 'INFO',
      test_run_uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.303Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '418238f4-d0ff-4599-b0eb-6c22ce58f8c6',
    name: 'setup',
    result: 'passed',
    test_run_id: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:29.263Z',
    finished_at: '2025-07-29T07:21:29.297Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:29.348Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
    name: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    @pytest.mark.parametrize("device_name", ["samsung_s22", "pixel_6"])\n' +
        '    def test_qr_scanner_ui_elements_multidevice(self, driver, device_name):\n' +
        '        """Smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {device_name}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui_{device_name}")\n' +
        '\n' +
        '            logger.info(f"‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ {device_name}")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:29.323Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[samsung_s22]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:29.358Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:29Z [tests.test_b2b][INFO] - üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: QR Scanner UI - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.372Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:29Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.385Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:29Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.398Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:29Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.411Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:29Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.457Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.485Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.496Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      level: 'INFO',
      test_run_uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.506Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.518Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Pixel] hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.549Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.600Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
    name: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 2192,
    started_at: '2025-07-29T07:21:27.367Z',
    finished_at: '2025-07-29T07:21:29.559Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Pixel]'
    },
    hooks: [ '9b3cea77-bcea-4f18-8e67-7455987eca23' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:29.614Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'aaa10c26-4b95-4ffa-8a80-05a2ae222458',
    name: 'teardown',
    result: 'pending',
    test_run_id: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:29.610Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:29.627Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:29Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Pixel] (–∑–∞ 2.30—Å)',
      level: 'INFO',
      test_run_uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.642Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:29.626Z',
      uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Pixel] (–∑–∞ 2.30—Å)',
      level: 'INFO',
      test_run_uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.642Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:27.397Z',
      uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      kind: 'TEST_LOG',
      message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - pixel_6',
      level: 'INFO',
      test_run_uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.642Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:27.406Z',
      uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.642Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:27.417Z',
      uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.642Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:27.428Z',
      uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.643Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:27.439Z',
      uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.643Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:27.652Z',
      uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      kind: 'TEST_LOG',
      message: 'https://collector-observability.browserstack.com:443 "POST /api/v1/batch HTTP/1.1" 401 None',
      level: 'DEBUG',
      test_run_uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.653Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      name: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 2184,
      started_at: '2025-07-29T07:21:26.302Z',
      finished_at: '2025-07-29T07:21:28.486Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '89a477ea-bdb6-422f-985f-9511020bee14',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:28.532Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '89a477ea-bdb6-422f-985f-9511020bee14',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'd297fba6-78d2-45fc-a9e8-b948aa8d27aa',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:28.532Z',
      finished_at: '2025-07-29T07:21:28.567Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'c52b78ca-50b8-41f2-92dc-d4339ba97eb7',
      name: 'setup',
      result: 'pending',
      test_run_id: '12216f04-0ae8-4358-bbbc-fcb8af1ea479',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:28.613Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'c52b78ca-50b8-41f2-92dc-d4339ba97eb7',
      name: 'setup',
      result: 'passed',
      test_run_id: '12216f04-0ae8-4358-bbbc-fcb8af1ea479',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:28.613Z',
      finished_at: '2025-07-29T07:21:28.666Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '12216f04-0ae8-4358-bbbc-fcb8af1ea479',
      name: 'test_full_qr_payment_flow_universal[Universal-QR]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_universal[Universal-QR]',
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:28.688Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '12216f04-0ae8-4358-bbbc-fcb8af1ea479',
      name: 'test_full_qr_payment_flow_universal[Universal-QR]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_universal[Universal-QR]',
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 116,
      started_at: '2025-07-29T07:21:28.688Z',
      finished_at: '2025-07-29T07:21:28.804Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'cf629535-04b4-425e-ad2a-e11b3b36eaee',
      name: 'teardown',
      result: 'pending',
      test_run_id: '12216f04-0ae8-4358-bbbc-fcb8af1ea479',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:28.850Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'cf629535-04b4-425e-ad2a-e11b3b36eaee',
      name: 'teardown',
      result: 'passed',
      test_run_id: '12216f04-0ae8-4358-bbbc-fcb8af1ea479',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:28.850Z',
      finished_at: '2025-07-29T07:21:28.884Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '14723c99-cbef-4a4e-951f-f42b278cae39',
      name: 'setup',
      result: 'pending',
      test_run_id: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:28.934Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '14723c99-cbef-4a4e-951f-f42b278cae39',
      name: 'setup',
      result: 'passed',
      test_run_id: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:28.934Z',
      finished_at: '2025-07-29T07:21:28.980Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7',
      name: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:29.004Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7',
      name: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 121,
      started_at: '2025-07-29T07:21:29.004Z',
      finished_at: '2025-07-29T07:21:29.125Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '396182a6-a4c6-4e5a-b7c2-44fa29e2f9e3',
      name: 'teardown',
      result: 'pending',
      test_run_id: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:29.172Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '396182a6-a4c6-4e5a-b7c2-44fa29e2f9e3',
      name: 'teardown',
      result: 'passed',
      test_run_id: '0d055173-2b49-4bb1-8d4f-b04365e2d7a7',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:29.172Z',
      finished_at: '2025-07-29T07:21:29.210Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '418238f4-d0ff-4599-b0eb-6c22ce58f8c6',
      name: 'setup',
      result: 'pending',
      test_run_id: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:29.263Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '418238f4-d0ff-4599-b0eb-6c22ce58f8c6',
      name: 'setup',
      result: 'passed',
      test_run_id: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:29.263Z',
      finished_at: '2025-07-29T07:21:29.297Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
      name: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:29.323Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      name: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 2192,
      started_at: '2025-07-29T07:21:27.367Z',
      finished_at: '2025-07-29T07:21:29.559Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'aaa10c26-4b95-4ffa-8a80-05a2ae222458',
      name: 'teardown',
      result: 'pending',
      test_run_id: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:29.610Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 11408:0
2025-07-29T07:21:29.655Z CLI info  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T07:21:29.662Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'aaa10c26-4b95-4ffa-8a80-05a2ae222458',
    name: 'teardown',
    result: 'passed',
    test_run_id: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:29.610Z',
    finished_at: '2025-07-29T07:21:29.654Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:29.718Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '628709b6-cfbb-4661-bc5a-e65e1c0fa8f9',
    name: 'setup',
    result: 'pending',
    test_run_id: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:29.713Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:29.739Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:29Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_universal[Universal-QR]',
      level: 'INFO',
      test_run_uuid: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.778Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '628709b6-cfbb-4661-bc5a-e65e1c0fa8f9',
    name: 'setup',
    result: 'passed',
    test_run_id: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:29.713Z',
    finished_at: '2025-07-29T07:21:29.773Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:29.829Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d',
    name: 'test_full_qr_payment_flow_universal[Universal-QR]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image",\n' +
        '        ["distrA", "distrB"],\n' +
        '        indirect=True,\n' +
        '        ids=["Universal-QR", "Megapolis-QR"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_universal(self, driver, qr_image):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ BrowserStack)"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {driver.test_mode}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_universal[Universal-QR]',
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:29.799Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Universal-QR]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:29.863Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.876Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Universal-QR]',
      level: 'INFO',
      test_run_uuid: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.890Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.901Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Universal-QR] hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.934Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d'
    }
  ]
} to 11408:0
2025-07-29T07:21:29.998Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d',
    name: 'test_full_qr_payment_flow_universal[Universal-QR]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image",\n' +
        '        ["distrA", "distrB"],\n' +
        '        indirect=True,\n' +
        '        ids=["Universal-QR", "Megapolis-QR"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_universal(self, driver, qr_image):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ BrowserStack)"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {driver.test_mode}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_universal[Universal-QR]',
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 151,
    started_at: '2025-07-29T07:21:29.799Z',
    finished_at: '2025-07-29T07:21:29.950Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Universal-QR]'
    },
    hooks: [ '628709b6-cfbb-4661-bc5a-e65e1c0fa8f9' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:30.013Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '572984f7-c033-42cb-b972-bbe5c08534d8',
    name: 'teardown',
    result: 'pending',
    test_run_id: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:30.009Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:30.024Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:30Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Universal-QR] (–∑–∞ 0.27—Å)',
      level: 'INFO',
      test_run_uuid: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.038Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:30.024Z',
      uuid: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Universal-QR] (–∑–∞ 0.27—Å)',
      level: 'INFO',
      test_run_uuid: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.056Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '572984f7-c033-42cb-b972-bbe5c08534d8',
    name: 'teardown',
    result: 'passed',
    test_run_id: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:30.009Z',
    finished_at: '2025-07-29T07:21:30.049Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:30.109Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '6b0a2896-4372-4232-8a18-dc39195cf012',
    name: 'setup',
    result: 'pending',
    test_run_id: '2a7c4934-5332-4dc1-aada-00158079c6f4',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:30.105Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:30.127Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '2a7c4934-5332-4dc1-aada-00158079c6f4',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:30Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_universal[Megapolis-QR]',
      level: 'INFO',
      test_run_uuid: '2a7c4934-5332-4dc1-aada-00158079c6f4'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.161Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '6b0a2896-4372-4232-8a18-dc39195cf012',
    name: 'setup',
    result: 'passed',
    test_run_id: '2a7c4934-5332-4dc1-aada-00158079c6f4',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:30.105Z',
    finished_at: '2025-07-29T07:21:30.155Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:30.216Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '2a7c4934-5332-4dc1-aada-00158079c6f4',
    name: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image",\n' +
        '        ["distrA", "distrB"],\n' +
        '        indirect=True,\n' +
        '        ids=["Universal-QR", "Megapolis-QR"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_universal(self, driver, qr_image):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ BrowserStack)"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {driver.test_mode}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:30.187Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Megapolis-QR]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:30.248Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '2a7c4934-5332-4dc1-aada-00158079c6f4',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '2a7c4934-5332-4dc1-aada-00158079c6f4'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.259Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '2a7c4934-5332-4dc1-aada-00158079c6f4',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Megapolis-QR]',
      level: 'INFO',
      test_run_uuid: '2a7c4934-5332-4dc1-aada-00158079c6f4'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.271Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '2a7c4934-5332-4dc1-aada-00158079c6f4',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '2a7c4934-5332-4dc1-aada-00158079c6f4'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.283Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '2a7c4934-5332-4dc1-aada-00158079c6f4',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Megapolis-QR] hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '2a7c4934-5332-4dc1-aada-00158079c6f4'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.318Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '2a7c4934-5332-4dc1-aada-00158079c6f4',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '2a7c4934-5332-4dc1-aada-00158079c6f4'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.378Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '2a7c4934-5332-4dc1-aada-00158079c6f4',
    name: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image",\n' +
        '        ["distrA", "distrB"],\n' +
        '        indirect=True,\n' +
        '        ids=["Universal-QR", "Megapolis-QR"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_universal(self, driver, qr_image):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ BrowserStack)"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {driver.test_mode}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 144,
    started_at: '2025-07-29T07:21:30.187Z',
    finished_at: '2025-07-29T07:21:30.331Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Megapolis-QR]'
    },
    hooks: [ '6b0a2896-4372-4232-8a18-dc39195cf012' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:30.394Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'e794ec0b-f2f6-47a1-aea6-9f8fe08afedb',
    name: 'teardown',
    result: 'pending',
    test_run_id: '2a7c4934-5332-4dc1-aada-00158079c6f4',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:30.390Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:30.406Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '2a7c4934-5332-4dc1-aada-00158079c6f4',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:30Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Megapolis-QR] (–∑–∞ 0.27—Å)',
      level: 'INFO',
      test_run_uuid: '2a7c4934-5332-4dc1-aada-00158079c6f4'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.420Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:30.405Z',
      uuid: '2a7c4934-5332-4dc1-aada-00158079c6f4',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Megapolis-QR] (–∑–∞ 0.27—Å)',
      level: 'INFO',
      test_run_uuid: '2a7c4934-5332-4dc1-aada-00158079c6f4'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.451Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.463Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      level: 'INFO',
      test_run_uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.475Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.487Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Pixel] hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.520Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.574Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd',
    name: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 3707,
    started_at: '2025-07-29T07:21:26.825Z',
    finished_at: '2025-07-29T07:21:30.532Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Pixel]'
    },
    hooks: [ 'b337a90b-f101-420e-96d6-e1a440ec94d0' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:30.589Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'a0581ace-92b3-4064-a383-c3708a3622f4',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'e4471acb-8219-448b-9ea6-0440730c37bd',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:30.585Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:30.601Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:30Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Pixel] (–∑–∞ 3.81—Å)',
      level: 'INFO',
      test_run_uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.617Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:30.600Z',
      uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Pixel] (–∑–∞ 3.81—Å)',
      level: 'INFO',
      test_run_uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.618Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:26.851Z',
      uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      kind: 'TEST_LOG',
      message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - pixel_6',
      level: 'INFO',
      test_run_uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.618Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:26.860Z',
      uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.618Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:26.869Z',
      uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.618Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:26.881Z',
      uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.618Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:26.891Z',
      uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.618Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:27.092Z',
      uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      kind: 'TEST_LOG',
      message: 'https://collector-observability.browserstack.com:443 "POST /api/v1/batch HTTP/1.1" 401 None',
      level: 'DEBUG',
      test_run_uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.638Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'a0581ace-92b3-4064-a383-c3708a3622f4',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'e4471acb-8219-448b-9ea6-0440730c37bd',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:30.585Z',
    finished_at: '2025-07-29T07:21:30.631Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:30.696Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '6ffeb419-e8bb-4577-82ef-6c6411c2e8cc',
    name: 'setup',
    result: 'pending',
    test_run_id: '24328f14-f549-4037-8c00-da1e1bbb6885',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:30.693Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:30.715Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '24328f14-f549-4037-8c00-da1e1bbb6885',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:30Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_universal[Universal-QR]',
      level: 'INFO',
      test_run_uuid: '24328f14-f549-4037-8c00-da1e1bbb6885'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.754Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '6ffeb419-e8bb-4577-82ef-6c6411c2e8cc',
    name: 'setup',
    result: 'passed',
    test_run_id: '24328f14-f549-4037-8c00-da1e1bbb6885',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:30.693Z',
    finished_at: '2025-07-29T07:21:30.749Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:30.807Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '24328f14-f549-4037-8c00-da1e1bbb6885',
    name: 'test_full_qr_payment_flow_universal[Universal-QR]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image",\n' +
        '        ["distrA", "distrB"],\n' +
        '        indirect=True,\n' +
        '        ids=["Universal-QR", "Megapolis-QR"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_universal(self, driver, qr_image):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ BrowserStack)"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {driver.test_mode}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_universal[Universal-QR]',
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:30.778Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Universal-QR]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:30.838Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '24328f14-f549-4037-8c00-da1e1bbb6885',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '24328f14-f549-4037-8c00-da1e1bbb6885'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.850Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '24328f14-f549-4037-8c00-da1e1bbb6885',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Universal-QR]',
      level: 'INFO',
      test_run_uuid: '24328f14-f549-4037-8c00-da1e1bbb6885'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.863Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '24328f14-f549-4037-8c00-da1e1bbb6885',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '24328f14-f549-4037-8c00-da1e1bbb6885'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.875Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '24328f14-f549-4037-8c00-da1e1bbb6885',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Universal-QR] hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '24328f14-f549-4037-8c00-da1e1bbb6885'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.911Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '24328f14-f549-4037-8c00-da1e1bbb6885',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '24328f14-f549-4037-8c00-da1e1bbb6885'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.969Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '24328f14-f549-4037-8c00-da1e1bbb6885',
    name: 'test_full_qr_payment_flow_universal[Universal-QR]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image",\n' +
        '        ["distrA", "distrB"],\n' +
        '        indirect=True,\n' +
        '        ids=["Universal-QR", "Megapolis-QR"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_universal(self, driver, qr_image):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ BrowserStack)"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {driver.test_mode}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_universal[Universal-QR]',
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 147,
    started_at: '2025-07-29T07:21:30.778Z',
    finished_at: '2025-07-29T07:21:30.925Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Universal-QR]'
    },
    hooks: [ '6ffeb419-e8bb-4577-82ef-6c6411c2e8cc' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:30.979Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      level: 'INFO',
      test_run_uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537'
    }
  ]
} to 11408:0
2025-07-29T07:21:30.991Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.005Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[samsung_s22] hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.040Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.098Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
    name: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    @pytest.mark.parametrize("device_name", ["samsung_s22", "pixel_6"])\n' +
        '    def test_qr_scanner_ui_elements_multidevice(self, driver, device_name):\n' +
        '        """Smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {device_name}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui_{device_name}")\n' +
        '\n' +
        '            logger.info(f"‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ {device_name}")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 1730,
    started_at: '2025-07-29T07:21:29.323Z',
    finished_at: '2025-07-29T07:21:31.053Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[samsung_s22]'
    },
    hooks: [ '418238f4-d0ff-4599-b0eb-6c22ce58f8c6' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:31.114Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '4f25d5ce-0397-4e18-8e6b-7e5afe6f16e0',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:31.110Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:31.127Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:31Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[samsung_s22] (–∑–∞ 1.83—Å)',
      level: 'INFO',
      test_run_uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.144Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:31.126Z',
      uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[samsung_s22] (–∑–∞ 1.83—Å)',
      level: 'INFO',
      test_run_uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.144Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:29.357Z',
      uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
      kind: 'TEST_LOG',
      message: 'üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: QR Scanner UI - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.144Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:29.371Z',
      uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.144Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:29.383Z',
      uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.144Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:29.396Z',
      uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.144Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:29.409Z',
      uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.164Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '4f25d5ce-0397-4e18-8e6b-7e5afe6f16e0',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:31.110Z',
    finished_at: '2025-07-29T07:21:31.158Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:31.222Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '1bf488e2-2c57-4d35-8fa2-77f5734549d9',
    name: 'setup',
    result: 'pending',
    test_run_id: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:31.219Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:31.243Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:31Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_qr_scanner_ui_elements_multidevice[pixel_6]',
      level: 'INFO',
      test_run_uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.268Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '1bf488e2-2c57-4d35-8fa2-77f5734549d9',
    name: 'setup',
    result: 'passed',
    test_run_id: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:31.219Z',
    finished_at: '2025-07-29T07:21:31.262Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:31.324Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
    name: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    @pytest.mark.parametrize("device_name", ["samsung_s22", "pixel_6"])\n' +
        '    def test_qr_scanner_ui_elements_multidevice(self, driver, device_name):\n' +
        '        """Smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {device_name}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui_{device_name}")\n' +
        '\n' +
        '            logger.info(f"‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ {device_name}")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:31.295Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[pixel_6]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:31.337Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:31Z [tests.test_b2b][INFO] - üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: QR Scanner UI - pixel_6',
      level: 'INFO',
      test_run_uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.351Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:31Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.365Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:31Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.382Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:31Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.398Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:31Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.449Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.462Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[pixel_6]',
      level: 'INFO',
      test_run_uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.475Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.489Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[pixel_6] hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.523Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.588Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
    name: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    @pytest.mark.parametrize("device_name", ["samsung_s22", "pixel_6"])\n' +
        '    def test_qr_scanner_ui_elements_multidevice(self, driver, device_name):\n' +
        '        """Smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {device_name}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui_{device_name}")\n' +
        '\n' +
        '            logger.info(f"‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ {device_name}")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 242,
    started_at: '2025-07-29T07:21:31.295Z',
    finished_at: '2025-07-29T07:21:31.537Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[pixel_6]'
    },
    hooks: [ '1bf488e2-2c57-4d35-8fa2-77f5734549d9' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:31.605Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '6993735a-c438-438b-a7f2-3cb760be051f',
    name: 'teardown',
    result: 'pending',
    test_run_id: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:31.601Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:31.619Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:31Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[pixel_6] (–∑–∞ 0.36—Å)',
      level: 'INFO',
      test_run_uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.636Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:31.618Z',
      uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[pixel_6] (–∑–∞ 0.36—Å)',
      level: 'INFO',
      test_run_uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.637Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:31.336Z',
      uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
      kind: 'TEST_LOG',
      message: 'üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: QR Scanner UI - pixel_6',
      level: 'INFO',
      test_run_uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.637Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:31.350Z',
      uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.637Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:31.364Z',
      uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.637Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:31.380Z',
      uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.637Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:31.397Z',
      uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.654Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Processing batch event [
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'aaa10c26-4b95-4ffa-8a80-05a2ae222458',
      name: 'teardown',
      result: 'passed',
      test_run_id: '7bc4e630-d68e-4775-afc0-0adb44a8b28d',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:29.610Z',
      finished_at: '2025-07-29T07:21:29.654Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '628709b6-cfbb-4661-bc5a-e65e1c0fa8f9',
      name: 'setup',
      result: 'pending',
      test_run_id: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:29.713Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '628709b6-cfbb-4661-bc5a-e65e1c0fa8f9',
      name: 'setup',
      result: 'passed',
      test_run_id: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:29.713Z',
      finished_at: '2025-07-29T07:21:29.773Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d',
      name: 'test_full_qr_payment_flow_universal[Universal-QR]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_universal[Universal-QR]',
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:29.799Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d',
      name: 'test_full_qr_payment_flow_universal[Universal-QR]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_universal[Universal-QR]',
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 151,
      started_at: '2025-07-29T07:21:29.799Z',
      finished_at: '2025-07-29T07:21:29.950Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '572984f7-c033-42cb-b972-bbe5c08534d8',
      name: 'teardown',
      result: 'pending',
      test_run_id: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:30.009Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '572984f7-c033-42cb-b972-bbe5c08534d8',
      name: 'teardown',
      result: 'passed',
      test_run_id: '37c2d4d4-cfbd-4a6f-bfb2-f4ce774b386d',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:30.009Z',
      finished_at: '2025-07-29T07:21:30.049Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '6b0a2896-4372-4232-8a18-dc39195cf012',
      name: 'setup',
      result: 'pending',
      test_run_id: '2a7c4934-5332-4dc1-aada-00158079c6f4',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:30.105Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '6b0a2896-4372-4232-8a18-dc39195cf012',
      name: 'setup',
      result: 'passed',
      test_run_id: '2a7c4934-5332-4dc1-aada-00158079c6f4',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:30.105Z',
      finished_at: '2025-07-29T07:21:30.155Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '2a7c4934-5332-4dc1-aada-00158079c6f4',
      name: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:30.187Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '2a7c4934-5332-4dc1-aada-00158079c6f4',
      name: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 144,
      started_at: '2025-07-29T07:21:30.187Z',
      finished_at: '2025-07-29T07:21:30.331Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'e794ec0b-f2f6-47a1-aea6-9f8fe08afedb',
      name: 'teardown',
      result: 'pending',
      test_run_id: '2a7c4934-5332-4dc1-aada-00158079c6f4',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:30.390Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      name: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 3707,
      started_at: '2025-07-29T07:21:26.825Z',
      finished_at: '2025-07-29T07:21:30.532Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'a0581ace-92b3-4064-a383-c3708a3622f4',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:30.585Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'a0581ace-92b3-4064-a383-c3708a3622f4',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'e4471acb-8219-448b-9ea6-0440730c37bd',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:30.585Z',
      finished_at: '2025-07-29T07:21:30.631Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '6ffeb419-e8bb-4577-82ef-6c6411c2e8cc',
      name: 'setup',
      result: 'pending',
      test_run_id: '24328f14-f549-4037-8c00-da1e1bbb6885',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:30.693Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '6ffeb419-e8bb-4577-82ef-6c6411c2e8cc',
      name: 'setup',
      result: 'passed',
      test_run_id: '24328f14-f549-4037-8c00-da1e1bbb6885',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:30.693Z',
      finished_at: '2025-07-29T07:21:30.749Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '24328f14-f549-4037-8c00-da1e1bbb6885',
      name: 'test_full_qr_payment_flow_universal[Universal-QR]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_universal[Universal-QR]',
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:30.778Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '24328f14-f549-4037-8c00-da1e1bbb6885',
      name: 'test_full_qr_payment_flow_universal[Universal-QR]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_universal[Universal-QR]',
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 147,
      started_at: '2025-07-29T07:21:30.778Z',
      finished_at: '2025-07-29T07:21:30.925Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
      name: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 1730,
      started_at: '2025-07-29T07:21:29.323Z',
      finished_at: '2025-07-29T07:21:31.053Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '4f25d5ce-0397-4e18-8e6b-7e5afe6f16e0',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:31.110Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '4f25d5ce-0397-4e18-8e6b-7e5afe6f16e0',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'ce8faeb4-69c4-41dc-9fe3-c5453ca78537',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:31.110Z',
      finished_at: '2025-07-29T07:21:31.158Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '1bf488e2-2c57-4d35-8fa2-77f5734549d9',
      name: 'setup',
      result: 'pending',
      test_run_id: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:31.219Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '1bf488e2-2c57-4d35-8fa2-77f5734549d9',
      name: 'setup',
      result: 'passed',
      test_run_id: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:31.219Z',
      finished_at: '2025-07-29T07:21:31.262Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
      name: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:31.295Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
      name: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 242,
      started_at: '2025-07-29T07:21:31.295Z',
      finished_at: '2025-07-29T07:21:31.537Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '6993735a-c438-438b-a7f2-3cb760be051f',
      name: 'teardown',
      result: 'pending',
      test_run_id: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:31.601Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 11408:0
2025-07-29T07:21:31.656Z CLI info  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T07:21:31.659Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '6993735a-c438-438b-a7f2-3cb760be051f',
    name: 'teardown',
    result: 'passed',
    test_run_id: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:31.601Z',
    finished_at: '2025-07-29T07:21:31.651Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:31.719Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '978a1964-6c46-4c80-b134-8db6b47cfb1a',
    name: 'setup',
    result: 'pending',
    test_run_id: '800b0c42-3fd5-40b0-bfda-93917e714721',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_universal',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:31.715Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:31.740Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '800b0c42-3fd5-40b0-bfda-93917e714721',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:31Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_qr_scanner_ui_elements_universal',
      level: 'INFO',
      test_run_uuid: '800b0c42-3fd5-40b0-bfda-93917e714721'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.762Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '978a1964-6c46-4c80-b134-8db6b47cfb1a',
    name: 'setup',
    result: 'passed',
    test_run_id: '800b0c42-3fd5-40b0-bfda-93917e714721',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_universal',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:31.715Z',
    finished_at: '2025-07-29T07:21:31.757Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:31.821Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '800b0c42-3fd5-40b0-bfda-93917e714721',
    name: 'test_qr_scanner_ui_elements_universal',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    def test_qr_scanner_ui_elements_universal(self, driver):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {driver.test_mode}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui")\n' +
        '\n' +
        '            logger.info("‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_universal',
    scope: 'test_qr_scanner_ui_elements_universal',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:31.791Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_universal'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:31.858Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '800b0c42-3fd5-40b0-bfda-93917e714721',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '800b0c42-3fd5-40b0-bfda-93917e714721'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.871Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '800b0c42-3fd5-40b0-bfda-93917e714721',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_universal',
      level: 'INFO',
      test_run_uuid: '800b0c42-3fd5-40b0-bfda-93917e714721'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.884Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '800b0c42-3fd5-40b0-bfda-93917e714721',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '800b0c42-3fd5-40b0-bfda-93917e714721'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.898Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '800b0c42-3fd5-40b0-bfda-93917e714721',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_universal hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '800b0c42-3fd5-40b0-bfda-93917e714721'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.933Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '800b0c42-3fd5-40b0-bfda-93917e714721',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '800b0c42-3fd5-40b0-bfda-93917e714721'
    }
  ]
} to 11408:0
2025-07-29T07:21:31.996Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '800b0c42-3fd5-40b0-bfda-93917e714721',
    name: 'test_qr_scanner_ui_elements_universal',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    def test_qr_scanner_ui_elements_universal(self, driver):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {driver.test_mode}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui")\n' +
        '\n' +
        '            logger.info("‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_universal',
    scope: 'test_qr_scanner_ui_elements_universal',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 156,
    started_at: '2025-07-29T07:21:31.791Z',
    finished_at: '2025-07-29T07:21:31.947Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_universal'
    },
    hooks: [ '978a1964-6c46-4c80-b134-8db6b47cfb1a' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:32.014Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '8004d8c8-c728-4b4d-8606-ca11a0b6fb02',
    name: 'teardown',
    result: 'pending',
    test_run_id: '800b0c42-3fd5-40b0-bfda-93917e714721',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_universal',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:32.010Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:32.027Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '800b0c42-3fd5-40b0-bfda-93917e714721',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:32Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_universal (–∑–∞ 0.27—Å)',
      level: 'INFO',
      test_run_uuid: '800b0c42-3fd5-40b0-bfda-93917e714721'
    }
  ]
} to 11408:0
2025-07-29T07:21:32.044Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:32.026Z',
      uuid: '800b0c42-3fd5-40b0-bfda-93917e714721',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_universal (–∑–∞ 0.27—Å)',
      level: 'INFO',
      test_run_uuid: '800b0c42-3fd5-40b0-bfda-93917e714721'
    }
  ]
} to 11408:0
2025-07-29T07:21:32.044Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:31.834Z',
      uuid: '800b0c42-3fd5-40b0-bfda-93917e714721',
      kind: 'TEST_LOG',
      message: 'post_data: Sending data to testhub for events HookRunStarted, HookRunStarted, HookRunStarted',
      level: 'DEBUG',
      test_run_uuid: '800b0c42-3fd5-40b0-bfda-93917e714721'
    }
  ]
} to 11408:0
2025-07-29T07:21:32.065Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '8004d8c8-c728-4b4d-8606-ca11a0b6fb02',
    name: 'teardown',
    result: 'passed',
    test_run_id: '800b0c42-3fd5-40b0-bfda-93917e714721',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_universal',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:32.010Z',
    finished_at: '2025-07-29T07:21:32.059Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:32.458Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'e794ec0b-f2f6-47a1-aea6-9f8fe08afedb',
    name: 'teardown',
    result: 'passed',
    test_run_id: '2a7c4934-5332-4dc1-aada-00158079c6f4',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:30.390Z',
    finished_at: '2025-07-29T07:21:32.448Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:32.541Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'f81d5cef-5735-422e-84da-09be7f017d25',
    name: 'setup',
    result: 'pending',
    test_run_id: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:32.537Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:32.565Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:32Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      level: 'INFO',
      test_run_uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3'
    }
  ]
} to 11408:0
2025-07-29T07:21:32.590Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'f81d5cef-5735-422e-84da-09be7f017d25',
    name: 'setup',
    result: 'passed',
    test_run_id: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:32.537Z',
    finished_at: '2025-07-29T07:21:32.585Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:32.652Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
    name: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    @pytest.mark.parametrize("device_name", ["samsung_s22", "pixel_6"])\n' +
        '    def test_qr_scanner_ui_elements_multidevice(self, driver, device_name):\n' +
        '        """Smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {device_name}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui_{device_name}")\n' +
        '\n' +
        '            logger.info(f"‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ {device_name}")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:32.620Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[samsung_s22]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:32.666Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:32Z [tests.test_b2b][INFO] - üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: QR Scanner UI - samsung_s22',
      level: 'INFO',
      test_run_uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3'
    }
  ]
} to 11408:0
2025-07-29T07:21:32.682Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:32Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3'
    }
  ]
} to 11408:0
2025-07-29T07:21:32.699Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:32Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3'
    }
  ]
} to 11408:0
2025-07-29T07:21:32.717Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:32Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3'
    }
  ]
} to 11408:0
2025-07-29T07:21:32.735Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:32Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3'
    }
  ]
} to 11408:0
2025-07-29T07:21:32.791Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3'
    }
  ]
} to 11408:0
2025-07-29T07:21:32.806Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      level: 'INFO',
      test_run_uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3'
    }
  ]
} to 11408:0
2025-07-29T07:21:32.821Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3'
    }
  ]
} to 11408:0
2025-07-29T07:21:32.835Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[samsung_s22] hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3'
    }
  ]
} to 11408:0
2025-07-29T07:21:32.874Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3'
    }
  ]
} to 11408:0
2025-07-29T07:21:32.940Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
    name: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    @pytest.mark.parametrize("device_name", ["samsung_s22", "pixel_6"])\n' +
        '    def test_qr_scanner_ui_elements_multidevice(self, driver, device_name):\n' +
        '        """Smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {device_name}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui_{device_name}")\n' +
        '\n' +
        '            logger.info(f"‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ {device_name}")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 269,
    started_at: '2025-07-29T07:21:32.620Z',
    finished_at: '2025-07-29T07:21:32.889Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[samsung_s22]'
    },
    hooks: [ 'f81d5cef-5735-422e-84da-09be7f017d25' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:32.959Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'fa9e3dce-a89d-45d2-a34b-8b9f2ae47b4d',
    name: 'teardown',
    result: 'pending',
    test_run_id: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:32.955Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:32.975Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:32Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[samsung_s22] (–∑–∞ 0.39—Å)',
      level: 'INFO',
      test_run_uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3'
    }
  ]
} to 11408:0
2025-07-29T07:21:32.993Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:32.944Z',
      uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      kind: 'TEST_LOG',
      message: 'https://collector-observability.browserstack.com:443 "POST /api/v1/batch HTTP/1.1" 401 None',
      level: 'DEBUG',
      test_run_uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3'
    }
  ]
} to 11408:0
2025-07-29T07:21:32.993Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:32.974Z',
      uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[samsung_s22] (–∑–∞ 0.39—Å)',
      level: 'INFO',
      test_run_uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3'
    }
  ]
} to 11408:0
2025-07-29T07:21:32.993Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:32.665Z',
      uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      kind: 'TEST_LOG',
      message: 'üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: QR Scanner UI - samsung_s22',
      level: 'INFO',
      test_run_uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3'
    }
  ]
} to 11408:0
2025-07-29T07:21:32.993Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:32.681Z',
      uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3'
    }
  ]
} to 11408:0
2025-07-29T07:21:32.993Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:32.698Z',
      uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3'
    }
  ]
} to 11408:0
2025-07-29T07:21:32.993Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:32.716Z',
      uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3'
    }
  ]
} to 11408:0
2025-07-29T07:21:32.993Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:32.734Z',
      uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3'
    }
  ]
} to 11408:0
2025-07-29T07:21:33.018Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'fa9e3dce-a89d-45d2-a34b-8b9f2ae47b4d',
    name: 'teardown',
    result: 'passed',
    test_run_id: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:32.955Z',
    finished_at: '2025-07-29T07:21:33.010Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:33.083Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'cbdf9e73-b4f6-42f4-8f00-a98d8325cd71',
    name: 'setup',
    result: 'pending',
    test_run_id: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:33.080Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:33.104Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:33Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_qr_scanner_ui_elements_multidevice[pixel_6]',
      level: 'INFO',
      test_run_uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19'
    }
  ]
} to 11408:0
2025-07-29T07:21:33.128Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'cbdf9e73-b4f6-42f4-8f00-a98d8325cd71',
    name: 'setup',
    result: 'passed',
    test_run_id: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:33.080Z',
    finished_at: '2025-07-29T07:21:33.123Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:33.190Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
    name: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    @pytest.mark.parametrize("device_name", ["samsung_s22", "pixel_6"])\n' +
        '    def test_qr_scanner_ui_elements_multidevice(self, driver, device_name):\n' +
        '        """Smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {device_name}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui_{device_name}")\n' +
        '\n' +
        '            logger.info(f"‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ {device_name}")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:33.157Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[pixel_6]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:33.204Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:33Z [tests.test_b2b][INFO] - üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: QR Scanner UI - pixel_6',
      level: 'INFO',
      test_run_uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19'
    }
  ]
} to 11408:0
2025-07-29T07:21:33.222Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:33Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19'
    }
  ]
} to 11408:0
2025-07-29T07:21:33.240Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:33Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19'
    }
  ]
} to 11408:0
2025-07-29T07:21:33.258Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:33Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19'
    }
  ]
} to 11408:0
2025-07-29T07:21:33.277Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:33Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19'
    }
  ]
} to 11408:0
2025-07-29T07:21:33.333Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19'
    }
  ]
} to 11408:0
2025-07-29T07:21:33.348Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[pixel_6]',
      level: 'INFO',
      test_run_uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19'
    }
  ]
} to 11408:0
2025-07-29T07:21:33.363Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19'
    }
  ]
} to 11408:0
2025-07-29T07:21:33.377Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[pixel_6] hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19'
    }
  ]
} to 11408:0
2025-07-29T07:21:33.415Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19'
    }
  ]
} to 11408:0
2025-07-29T07:21:33.483Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
    name: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    @pytest.mark.parametrize("device_name", ["samsung_s22", "pixel_6"])\n' +
        '    def test_qr_scanner_ui_elements_multidevice(self, driver, device_name):\n' +
        '        """Smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {device_name}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui_{device_name}")\n' +
        '\n' +
        '            logger.info(f"‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ {device_name}")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 273,
    started_at: '2025-07-29T07:21:33.157Z',
    finished_at: '2025-07-29T07:21:33.430Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[pixel_6]'
    },
    hooks: [ 'cbdf9e73-b4f6-42f4-8f00-a98d8325cd71' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:33.500Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '2c4f4587-aa00-421e-9675-5e33fe15fe96',
    name: 'teardown',
    result: 'pending',
    test_run_id: '24328f14-f549-4037-8c00-da1e1bbb6885',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:33.496Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:33.516Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '24328f14-f549-4037-8c00-da1e1bbb6885',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:33Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Universal-QR] (–∑–∞ 2.79—Å)',
      level: 'INFO',
      test_run_uuid: '24328f14-f549-4037-8c00-da1e1bbb6885'
    }
  ]
} to 11408:0
2025-07-29T07:21:33.533Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:31.698Z',
      uuid: '24328f14-f549-4037-8c00-da1e1bbb6885',
      kind: 'TEST_LOG',
      message: 'post_data: Sending data to testhub for events HookRunStarted',
      level: 'DEBUG',
      test_run_uuid: '24328f14-f549-4037-8c00-da1e1bbb6885'
    }
  ]
} to 11408:0
2025-07-29T07:21:33.533Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:31.699Z',
      uuid: '24328f14-f549-4037-8c00-da1e1bbb6885',
      kind: 'TEST_LOG',
      message: 'Starting new HTTPS connection (1): collector-observability.browserstack.com:443',
      level: 'DEBUG',
      test_run_uuid: '24328f14-f549-4037-8c00-da1e1bbb6885'
    }
  ]
} to 11408:0
2025-07-29T07:21:33.533Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:32.285Z',
      uuid: '24328f14-f549-4037-8c00-da1e1bbb6885',
      kind: 'TEST_LOG',
      message: 'https://collector-observability.browserstack.com:443 "POST /api/v1/batch HTTP/1.1" 401 None',
      level: 'DEBUG',
      test_run_uuid: '24328f14-f549-4037-8c00-da1e1bbb6885'
    }
  ]
} to 11408:0
2025-07-29T07:21:33.533Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:33.515Z',
      uuid: '24328f14-f549-4037-8c00-da1e1bbb6885',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Universal-QR] (–∑–∞ 2.79—Å)',
      level: 'INFO',
      test_run_uuid: '24328f14-f549-4037-8c00-da1e1bbb6885'
    }
  ]
} to 11408:0
2025-07-29T07:21:33.557Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '2c4f4587-aa00-421e-9675-5e33fe15fe96',
    name: 'teardown',
    result: 'passed',
    test_run_id: '24328f14-f549-4037-8c00-da1e1bbb6885',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:33.496Z',
    finished_at: '2025-07-29T07:21:33.549Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:33.624Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '27a45ff7-9ca3-45eb-8715-a1534c2fbe82',
    name: 'setup',
    result: 'pending',
    test_run_id: '4f6f8681-7422-46a9-9cd2-7731ec12a153',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:33.620Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:33.646Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '4f6f8681-7422-46a9-9cd2-7731ec12a153',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:33Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_universal[Megapolis-QR]',
      level: 'INFO',
      test_run_uuid: '4f6f8681-7422-46a9-9cd2-7731ec12a153'
    }
  ]
} to 11408:0
2025-07-29T07:21:33.655Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Processing batch event [
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '6993735a-c438-438b-a7f2-3cb760be051f',
      name: 'teardown',
      result: 'passed',
      test_run_id: '6916369a-f9b5-4a5c-a00a-bc22a4d375a5',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:31.601Z',
      finished_at: '2025-07-29T07:21:31.651Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '978a1964-6c46-4c80-b134-8db6b47cfb1a',
      name: 'setup',
      result: 'pending',
      test_run_id: '800b0c42-3fd5-40b0-bfda-93917e714721',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_universal',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:31.715Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '978a1964-6c46-4c80-b134-8db6b47cfb1a',
      name: 'setup',
      result: 'passed',
      test_run_id: '800b0c42-3fd5-40b0-bfda-93917e714721',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_universal',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:31.715Z',
      finished_at: '2025-07-29T07:21:31.757Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '800b0c42-3fd5-40b0-bfda-93917e714721',
      name: 'test_qr_scanner_ui_elements_universal',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_universal',
      scope: 'test_qr_scanner_ui_elements_universal',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:31.791Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '800b0c42-3fd5-40b0-bfda-93917e714721',
      name: 'test_qr_scanner_ui_elements_universal',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_universal',
      scope: 'test_qr_scanner_ui_elements_universal',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 156,
      started_at: '2025-07-29T07:21:31.791Z',
      finished_at: '2025-07-29T07:21:31.947Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '8004d8c8-c728-4b4d-8606-ca11a0b6fb02',
      name: 'teardown',
      result: 'pending',
      test_run_id: '800b0c42-3fd5-40b0-bfda-93917e714721',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_universal',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:32.010Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '8004d8c8-c728-4b4d-8606-ca11a0b6fb02',
      name: 'teardown',
      result: 'passed',
      test_run_id: '800b0c42-3fd5-40b0-bfda-93917e714721',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_universal',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:32.010Z',
      finished_at: '2025-07-29T07:21:32.059Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'e794ec0b-f2f6-47a1-aea6-9f8fe08afedb',
      name: 'teardown',
      result: 'passed',
      test_run_id: '2a7c4934-5332-4dc1-aada-00158079c6f4',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:30.390Z',
      finished_at: '2025-07-29T07:21:32.448Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'f81d5cef-5735-422e-84da-09be7f017d25',
      name: 'setup',
      result: 'pending',
      test_run_id: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:32.537Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'f81d5cef-5735-422e-84da-09be7f017d25',
      name: 'setup',
      result: 'passed',
      test_run_id: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:32.537Z',
      finished_at: '2025-07-29T07:21:32.585Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      name: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:32.620Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      name: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 269,
      started_at: '2025-07-29T07:21:32.620Z',
      finished_at: '2025-07-29T07:21:32.889Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'fa9e3dce-a89d-45d2-a34b-8b9f2ae47b4d',
      name: 'teardown',
      result: 'pending',
      test_run_id: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:32.955Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'fa9e3dce-a89d-45d2-a34b-8b9f2ae47b4d',
      name: 'teardown',
      result: 'passed',
      test_run_id: '0c52a1a0-6488-46da-acaa-bb1cd09fd2a3',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:32.955Z',
      finished_at: '2025-07-29T07:21:33.010Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'cbdf9e73-b4f6-42f4-8f00-a98d8325cd71',
      name: 'setup',
      result: 'pending',
      test_run_id: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:33.080Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'cbdf9e73-b4f6-42f4-8f00-a98d8325cd71',
      name: 'setup',
      result: 'passed',
      test_run_id: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:33.080Z',
      finished_at: '2025-07-29T07:21:33.123Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      name: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:33.157Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      name: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 273,
      started_at: '2025-07-29T07:21:33.157Z',
      finished_at: '2025-07-29T07:21:33.430Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '2c4f4587-aa00-421e-9675-5e33fe15fe96',
      name: 'teardown',
      result: 'pending',
      test_run_id: '24328f14-f549-4037-8c00-da1e1bbb6885',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:33.496Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '2c4f4587-aa00-421e-9675-5e33fe15fe96',
      name: 'teardown',
      result: 'passed',
      test_run_id: '24328f14-f549-4037-8c00-da1e1bbb6885',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:33.496Z',
      finished_at: '2025-07-29T07:21:33.549Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '27a45ff7-9ca3-45eb-8715-a1534c2fbe82',
      name: 'setup',
      result: 'pending',
      test_run_id: '4f6f8681-7422-46a9-9cd2-7731ec12a153',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:33.620Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 11408:0
2025-07-29T07:21:33.656Z CLI info  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T07:21:33.686Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '27a45ff7-9ca3-45eb-8715-a1534c2fbe82',
    name: 'setup',
    result: 'passed',
    test_run_id: '4f6f8681-7422-46a9-9cd2-7731ec12a153',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:33.620Z',
    finished_at: '2025-07-29T07:21:33.681Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:33.750Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '4f6f8681-7422-46a9-9cd2-7731ec12a153',
    name: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image",\n' +
        '        ["distrA", "distrB"],\n' +
        '        indirect=True,\n' +
        '        ids=["Universal-QR", "Megapolis-QR"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_universal(self, driver, qr_image):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ BrowserStack)"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {driver.test_mode}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:33.716Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Megapolis-QR]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:33.788Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '4f6f8681-7422-46a9-9cd2-7731ec12a153',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '4f6f8681-7422-46a9-9cd2-7731ec12a153'
    }
  ]
} to 11408:0
2025-07-29T07:21:33.803Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '4f6f8681-7422-46a9-9cd2-7731ec12a153',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Megapolis-QR]',
      level: 'INFO',
      test_run_uuid: '4f6f8681-7422-46a9-9cd2-7731ec12a153'
    }
  ]
} to 11408:0
2025-07-29T07:21:33.818Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '4f6f8681-7422-46a9-9cd2-7731ec12a153',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '4f6f8681-7422-46a9-9cd2-7731ec12a153'
    }
  ]
} to 11408:0
2025-07-29T07:21:33.834Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '4f6f8681-7422-46a9-9cd2-7731ec12a153',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Megapolis-QR] hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '4f6f8681-7422-46a9-9cd2-7731ec12a153'
    }
  ]
} to 11408:0
2025-07-29T07:21:33.875Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '4f6f8681-7422-46a9-9cd2-7731ec12a153',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '4f6f8681-7422-46a9-9cd2-7731ec12a153'
    }
  ]
} to 11408:0
2025-07-29T07:21:33.947Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '4f6f8681-7422-46a9-9cd2-7731ec12a153',
    name: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image",\n' +
        '        ["distrA", "distrB"],\n' +
        '        indirect=True,\n' +
        '        ids=["Universal-QR", "Megapolis-QR"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_universal(self, driver, qr_image):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ BrowserStack)"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {driver.test_mode}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 175,
    started_at: '2025-07-29T07:21:33.716Z',
    finished_at: '2025-07-29T07:21:33.891Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Megapolis-QR]'
    },
    hooks: [ '27a45ff7-9ca3-45eb-8715-a1534c2fbe82' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:33.966Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '69219339-3d3a-4ddd-8c3e-4aaebaf9a0ff',
    name: 'teardown',
    result: 'pending',
    test_run_id: '4f6f8681-7422-46a9-9cd2-7731ec12a153',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:33.961Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:33.981Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '4f6f8681-7422-46a9-9cd2-7731ec12a153',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:33Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Megapolis-QR] (–∑–∞ 0.31—Å)',
      level: 'INFO',
      test_run_uuid: '4f6f8681-7422-46a9-9cd2-7731ec12a153'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.000Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:33.980Z',
      uuid: '4f6f8681-7422-46a9-9cd2-7731ec12a153',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Megapolis-QR] (–∑–∞ 0.31—Å)',
      level: 'INFO',
      test_run_uuid: '4f6f8681-7422-46a9-9cd2-7731ec12a153'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.022Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '69219339-3d3a-4ddd-8c3e-4aaebaf9a0ff',
    name: 'teardown',
    result: 'passed',
    test_run_id: '4f6f8681-7422-46a9-9cd2-7731ec12a153',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:33.961Z',
    finished_at: '2025-07-29T07:21:34.016Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:34.090Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '3d44470a-d4ac-4bcb-862d-e83133c530fd',
    name: 'setup',
    result: 'pending',
    test_run_id: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:34.086Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:34.113Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:34Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      level: 'INFO',
      test_run_uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.138Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '3d44470a-d4ac-4bcb-862d-e83133c530fd',
    name: 'setup',
    result: 'passed',
    test_run_id: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:34.086Z',
    finished_at: '2025-07-29T07:21:34.133Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:34.203Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
    name: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    @pytest.mark.parametrize("device_name", ["samsung_s22", "pixel_6"])\n' +
        '    def test_qr_scanner_ui_elements_multidevice(self, driver, device_name):\n' +
        '        """Smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {device_name}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui_{device_name}")\n' +
        '\n' +
        '            logger.info(f"‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ {device_name}")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:34.169Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[samsung_s22]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:34.219Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:34Z [tests.test_b2b][INFO] - üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: QR Scanner UI - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.238Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:34Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.257Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:34Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.277Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:34Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.298Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:34Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.356Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.372Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      level: 'INFO',
      test_run_uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.388Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.404Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[samsung_s22] hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.443Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.516Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
    name: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    @pytest.mark.parametrize("device_name", ["samsung_s22", "pixel_6"])\n' +
        '    def test_qr_scanner_ui_elements_multidevice(self, driver, device_name):\n' +
        '        """Smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {device_name}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui_{device_name}")\n' +
        '\n' +
        '            logger.info(f"‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ {device_name}")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 290,
    started_at: '2025-07-29T07:21:34.169Z',
    finished_at: '2025-07-29T07:21:34.459Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[samsung_s22]'
    },
    hooks: [ '3d44470a-d4ac-4bcb-862d-e83133c530fd' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:34.537Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '139445b5-47f7-43ab-8c7e-8df49576bff8',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:34.531Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:34.555Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:34Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[samsung_s22] (–∑–∞ 0.42—Å)',
      level: 'INFO',
      test_run_uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.575Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:34.553Z',
      uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[samsung_s22] (–∑–∞ 0.42—Å)',
      level: 'INFO',
      test_run_uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.575Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:34.218Z',
      uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      kind: 'TEST_LOG',
      message: 'üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: QR Scanner UI - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.575Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:34.236Z',
      uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.575Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:34.256Z',
      uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.575Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:34.289Z',
      uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      kind: 'TEST_LOG',
      message: 'post_data: Sending data to testhub for events HookRunStarted, HookRunStarted',
      level: 'DEBUG',
      test_run_uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.576Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:34.293Z',
      uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      kind: 'TEST_LOG',
      message: 'Starting new HTTPS connection (1): collector-observability.browserstack.com:443',
      level: 'DEBUG',
      test_run_uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.576Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:34.276Z',
      uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.576Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:34.297Z',
      uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.600Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '139445b5-47f7-43ab-8c7e-8df49576bff8',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:34.531Z',
    finished_at: '2025-07-29T07:21:34.593Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:34.670Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'aef5fa40-3184-4bd5-9674-1d440838b289',
    name: 'setup',
    result: 'pending',
    test_run_id: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:34.667Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:34.693Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:34Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_qr_scanner_ui_elements_multidevice[pixel_6]',
      level: 'INFO',
      test_run_uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.718Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'aef5fa40-3184-4bd5-9674-1d440838b289',
    name: 'setup',
    result: 'passed',
    test_run_id: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:34.667Z',
    finished_at: '2025-07-29T07:21:34.713Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:34.787Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
    name: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    @pytest.mark.parametrize("device_name", ["samsung_s22", "pixel_6"])\n' +
        '    def test_qr_scanner_ui_elements_multidevice(self, driver, device_name):\n' +
        '        """Smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {device_name}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui_{device_name}")\n' +
        '\n' +
        '            logger.info(f"‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ {device_name}")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:34.751Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[pixel_6]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:34.804Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:34Z [tests.test_b2b][INFO] - üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: QR Scanner UI - pixel_6',
      level: 'INFO',
      test_run_uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.825Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:34Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.845Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:34Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.865Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:34Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.885Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:21:34Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.945Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.962Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[pixel_6]',
      level: 'INFO',
      test_run_uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.979Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf'
    }
  ]
} to 11408:0
2025-07-29T07:21:34.995Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[pixel_6] hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf'
    }
  ]
} to 11408:0
2025-07-29T07:21:35.037Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf'
    }
  ]
} to 11408:0
2025-07-29T07:21:35.110Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
    name: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    @pytest.mark.parametrize("device_name", ["samsung_s22", "pixel_6"])\n' +
        '    def test_qr_scanner_ui_elements_multidevice(self, driver, device_name):\n' +
        '        """Smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {device_name}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui_{device_name}")\n' +
        '\n' +
        '            logger.info(f"‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ {device_name}")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 302,
    started_at: '2025-07-29T07:21:34.751Z',
    finished_at: '2025-07-29T07:21:35.053Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[pixel_6]'
    },
    hooks: [ 'aef5fa40-3184-4bd5-9674-1d440838b289' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:35.132Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '3f6b42ff-69eb-48ed-9248-3013a77dd492',
    name: 'teardown',
    result: 'pending',
    test_run_id: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:35.127Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:35.152Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:35Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[pixel_6] (–∑–∞ 0.44—Å)',
      level: 'INFO',
      test_run_uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf'
    }
  ]
} to 11408:0
2025-07-29T07:21:35.174Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:35.151Z',
      uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[pixel_6] (–∑–∞ 0.44—Å)',
      level: 'INFO',
      test_run_uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf'
    }
  ]
} to 11408:0
2025-07-29T07:21:35.174Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:34.803Z',
      uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      kind: 'TEST_LOG',
      message: 'üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: QR Scanner UI - pixel_6',
      level: 'INFO',
      test_run_uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf'
    }
  ]
} to 11408:0
2025-07-29T07:21:35.174Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:34.823Z',
      uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf'
    }
  ]
} to 11408:0
2025-07-29T07:21:35.174Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:34.844Z',
      uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf'
    }
  ]
} to 11408:0
2025-07-29T07:21:35.174Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:34.864Z',
      uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf'
    }
  ]
} to 11408:0
2025-07-29T07:21:35.174Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:34.885Z',
      uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      kind: 'TEST_LOG',
      message: 'https://collector-observability.browserstack.com:443 "POST /api/v1/batch HTTP/1.1" 401 None',
      level: 'DEBUG',
      test_run_uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf'
    }
  ]
} to 11408:0
2025-07-29T07:21:35.174Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:34.884Z',
      uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf'
    }
  ]
} to 11408:0
2025-07-29T07:21:35.197Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '3f6b42ff-69eb-48ed-9248-3013a77dd492',
    name: 'teardown',
    result: 'passed',
    test_run_id: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:35.127Z',
    finished_at: '2025-07-29T07:21:35.191Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:35.268Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '617b3ac6-6291-42b1-a5bf-a1127c680eb4',
    name: 'setup',
    result: 'pending',
    test_run_id: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_universal',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:35.265Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:35.292Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:35Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_qr_scanner_ui_elements_universal',
      level: 'INFO',
      test_run_uuid: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1'
    }
  ]
} to 11408:0
2025-07-29T07:21:35.318Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '617b3ac6-6291-42b1-a5bf-a1127c680eb4',
    name: 'setup',
    result: 'passed',
    test_run_id: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_universal',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:35.265Z',
    finished_at: '2025-07-29T07:21:35.312Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:35.390Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1',
    name: 'test_qr_scanner_ui_elements_universal',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    def test_qr_scanner_ui_elements_universal(self, driver):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {driver.test_mode}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui")\n' +
        '\n' +
        '            logger.info("‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_universal',
    scope: 'test_qr_scanner_ui_elements_universal',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:35.352Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_universal'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:35.431Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1'
    }
  ]
} to 11408:0
2025-07-29T07:21:35.448Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_universal',
      level: 'INFO',
      test_run_uuid: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1'
    }
  ]
} to 11408:0
2025-07-29T07:21:35.466Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1'
    }
  ]
} to 11408:0
2025-07-29T07:21:35.482Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_universal hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1'
    }
  ]
} to 11408:0
2025-07-29T07:21:35.526Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1'
    }
  ]
} to 11408:0
2025-07-29T07:21:35.604Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1',
    name: 'test_qr_scanner_ui_elements_universal',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    def test_qr_scanner_ui_elements_universal(self, driver):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {driver.test_mode}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui")\n' +
        '\n' +
        '            logger.info("‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_universal',
    scope: 'test_qr_scanner_ui_elements_universal',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 192,
    started_at: '2025-07-29T07:21:35.352Z',
    finished_at: '2025-07-29T07:21:35.544Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_universal'
    },
    hooks: [ '617b3ac6-6291-42b1-a5bf-a1127c680eb4' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:35.625Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'f83c814a-5280-439c-b2e5-4c3155a3d2c6',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_universal',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:35.621Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:35.643Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:35Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_universal (–∑–∞ 0.33—Å)',
      level: 'INFO',
      test_run_uuid: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1'
    }
  ]
} to 11408:0
2025-07-29T07:21:35.699Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Processing batch event [
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '27a45ff7-9ca3-45eb-8715-a1534c2fbe82',
      name: 'setup',
      result: 'passed',
      test_run_id: '4f6f8681-7422-46a9-9cd2-7731ec12a153',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:33.620Z',
      finished_at: '2025-07-29T07:21:33.681Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '4f6f8681-7422-46a9-9cd2-7731ec12a153',
      name: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:33.716Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '4f6f8681-7422-46a9-9cd2-7731ec12a153',
      name: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 175,
      started_at: '2025-07-29T07:21:33.716Z',
      finished_at: '2025-07-29T07:21:33.891Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '69219339-3d3a-4ddd-8c3e-4aaebaf9a0ff',
      name: 'teardown',
      result: 'pending',
      test_run_id: '4f6f8681-7422-46a9-9cd2-7731ec12a153',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:33.961Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '69219339-3d3a-4ddd-8c3e-4aaebaf9a0ff',
      name: 'teardown',
      result: 'passed',
      test_run_id: '4f6f8681-7422-46a9-9cd2-7731ec12a153',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:33.961Z',
      finished_at: '2025-07-29T07:21:34.016Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '3d44470a-d4ac-4bcb-862d-e83133c530fd',
      name: 'setup',
      result: 'pending',
      test_run_id: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:34.086Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '3d44470a-d4ac-4bcb-862d-e83133c530fd',
      name: 'setup',
      result: 'passed',
      test_run_id: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:34.086Z',
      finished_at: '2025-07-29T07:21:34.133Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      name: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:34.169Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      name: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 290,
      started_at: '2025-07-29T07:21:34.169Z',
      finished_at: '2025-07-29T07:21:34.459Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '139445b5-47f7-43ab-8c7e-8df49576bff8',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:34.531Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '139445b5-47f7-43ab-8c7e-8df49576bff8',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'f9c23777-c513-4b41-9c1a-09c723ceea3c',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:34.531Z',
      finished_at: '2025-07-29T07:21:34.593Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'aef5fa40-3184-4bd5-9674-1d440838b289',
      name: 'setup',
      result: 'pending',
      test_run_id: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:34.667Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'aef5fa40-3184-4bd5-9674-1d440838b289',
      name: 'setup',
      result: 'passed',
      test_run_id: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:34.667Z',
      finished_at: '2025-07-29T07:21:34.713Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      name: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:34.751Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      name: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 302,
      started_at: '2025-07-29T07:21:34.751Z',
      finished_at: '2025-07-29T07:21:35.053Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '3f6b42ff-69eb-48ed-9248-3013a77dd492',
      name: 'teardown',
      result: 'pending',
      test_run_id: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:35.127Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '3f6b42ff-69eb-48ed-9248-3013a77dd492',
      name: 'teardown',
      result: 'passed',
      test_run_id: '8d2bdc5f-983f-4662-899f-4b0ef322b0bf',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:35.127Z',
      finished_at: '2025-07-29T07:21:35.191Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '617b3ac6-6291-42b1-a5bf-a1127c680eb4',
      name: 'setup',
      result: 'pending',
      test_run_id: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_universal',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:35.265Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '617b3ac6-6291-42b1-a5bf-a1127c680eb4',
      name: 'setup',
      result: 'passed',
      test_run_id: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_universal',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:35.265Z',
      finished_at: '2025-07-29T07:21:35.312Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1',
      name: 'test_qr_scanner_ui_elements_universal',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_universal',
      scope: 'test_qr_scanner_ui_elements_universal',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:35.352Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1',
      name: 'test_qr_scanner_ui_elements_universal',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_universal',
      scope: 'test_qr_scanner_ui_elements_universal',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 192,
      started_at: '2025-07-29T07:21:35.352Z',
      finished_at: '2025-07-29T07:21:35.544Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'f83c814a-5280-439c-b2e5-4c3155a3d2c6',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_universal',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:35.621Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 11408:0
2025-07-29T07:21:35.701Z CLI info  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T07:21:35.714Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:35.642Z',
      uuid: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_universal (–∑–∞ 0.33—Å)',
      level: 'INFO',
      test_run_uuid: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1'
    }
  ]
} to 11408:0
2025-07-29T07:21:35.743Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'f83c814a-5280-439c-b2e5-4c3155a3d2c6',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_universal',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:35.621Z',
    finished_at: '2025-07-29T07:21:35.736Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:36.028Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'c6d674af-9420-4223-8a10-788e432afdba',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:36.022Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:36.051Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:36Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[pixel_6] (–∑–∞ 2.93—Å)',
      level: 'INFO',
      test_run_uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19'
    }
  ]
} to 11408:0
2025-07-29T07:21:36.074Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:34.946Z',
      uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      kind: 'TEST_LOG',
      message: 'post_data: Sending data to testhub for events HookRunStarted, HookRunStarted',
      level: 'DEBUG',
      test_run_uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19'
    }
  ]
} to 11408:0
2025-07-29T07:21:36.074Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:34.947Z',
      uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      kind: 'TEST_LOG',
      message: 'Starting new HTTPS connection (1): collector-observability.browserstack.com:443',
      level: 'DEBUG',
      test_run_uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19'
    }
  ]
} to 11408:0
2025-07-29T07:21:36.074Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:35.546Z',
      uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      kind: 'TEST_LOG',
      message: 'https://collector-observability.browserstack.com:443 "POST /api/v1/batch HTTP/1.1" 401 None',
      level: 'DEBUG',
      test_run_uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19'
    }
  ]
} to 11408:0
2025-07-29T07:21:36.074Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:36.049Z',
      uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[pixel_6] (–∑–∞ 2.93—Å)',
      level: 'INFO',
      test_run_uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19'
    }
  ]
} to 11408:0
2025-07-29T07:21:36.074Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:33.203Z',
      uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      kind: 'TEST_LOG',
      message: 'üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: QR Scanner UI - pixel_6',
      level: 'INFO',
      test_run_uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19'
    }
  ]
} to 11408:0
2025-07-29T07:21:36.074Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:33.220Z',
      uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19'
    }
  ]
} to 11408:0
2025-07-29T07:21:36.074Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:33.239Z',
      uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19'
    }
  ]
} to 11408:0
2025-07-29T07:21:36.074Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:33.257Z',
      uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19'
    }
  ]
} to 11408:0
2025-07-29T07:21:36.074Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:33.276Z',
      uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'ea923aee-bbca-40c0-85db-e3db85f02a19'
    }
  ]
} to 11408:0
2025-07-29T07:21:36.100Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'c6d674af-9420-4223-8a10-788e432afdba',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:36.022Z',
    finished_at: '2025-07-29T07:21:36.093Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:36.176Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '0f967a54-8968-4dff-8ad9-66befd4969a4',
    name: 'setup',
    result: 'pending',
    test_run_id: '94540667-897d-4264-98b6-ee659a7d5926',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_universal',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:36.173Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:36.201Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '94540667-897d-4264-98b6-ee659a7d5926',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:36Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_qr_scanner_ui_elements_universal',
      level: 'INFO',
      test_run_uuid: '94540667-897d-4264-98b6-ee659a7d5926'
    }
  ]
} to 11408:0
2025-07-29T07:21:36.231Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '0f967a54-8968-4dff-8ad9-66befd4969a4',
    name: 'setup',
    result: 'passed',
    test_run_id: '94540667-897d-4264-98b6-ee659a7d5926',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_universal',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:36.173Z',
    finished_at: '2025-07-29T07:21:36.225Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:36.307Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '94540667-897d-4264-98b6-ee659a7d5926',
    name: 'test_qr_scanner_ui_elements_universal',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    def test_qr_scanner_ui_elements_universal(self, driver):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {driver.test_mode}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui")\n' +
        '\n' +
        '            logger.info("‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_universal',
    scope: 'test_qr_scanner_ui_elements_universal',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:21:36.266Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_universal'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:36.349Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '94540667-897d-4264-98b6-ee659a7d5926',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '94540667-897d-4264-98b6-ee659a7d5926'
    }
  ]
} to 11408:0
2025-07-29T07:21:36.367Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '94540667-897d-4264-98b6-ee659a7d5926',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_universal',
      level: 'INFO',
      test_run_uuid: '94540667-897d-4264-98b6-ee659a7d5926'
    }
  ]
} to 11408:0
2025-07-29T07:21:36.385Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '94540667-897d-4264-98b6-ee659a7d5926',
      kind: 'TEST_LOG',
      message: 'hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '94540667-897d-4264-98b6-ee659a7d5926'
    }
  ]
} to 11408:0
2025-07-29T07:21:36.403Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '94540667-897d-4264-98b6-ee659a7d5926',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_universal hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu',
      level: 'INFO',
      test_run_uuid: '94540667-897d-4264-98b6-ee659a7d5926'
    }
  ]
} to 11408:0
2025-07-29T07:21:36.447Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '94540667-897d-4264-98b6-ee659a7d5926',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '94540667-897d-4264-98b6-ee659a7d5926'
    }
  ]
} to 11408:0
2025-07-29T07:21:36.526Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '94540667-897d-4264-98b6-ee659a7d5926',
    name: 'test_qr_scanner_ui_elements_universal',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    def test_qr_scanner_ui_elements_universal(self, driver):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {driver.test_mode}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui")\n' +
        '\n' +
        '            logger.info("‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_universal',
    scope: 'test_qr_scanner_ui_elements_universal',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 199,
    started_at: '2025-07-29T07:21:36.266Z',
    finished_at: '2025-07-29T07:21:36.465Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_universal'
    },
    hooks: [ '0f967a54-8968-4dff-8ad9-66befd4969a4' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11408:0
2025-07-29T07:21:36.547Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '5c852b3f-594b-47b4-9e8f-d4f4705f39a3',
    name: 'teardown',
    result: 'pending',
    test_run_id: '94540667-897d-4264-98b6-ee659a7d5926',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_universal',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:36.543Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:36.564Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:17.665Z',
      uuid: '94540667-897d-4264-98b6-ee659a7d5926',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:21:36Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_universal (–∑–∞ 0.34—Å)',
      level: 'INFO',
      test_run_uuid: '94540667-897d-4264-98b6-ee659a7d5926'
    }
  ]
} to 11408:0
2025-07-29T07:21:36.586Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:21:36.564Z',
      uuid: '94540667-897d-4264-98b6-ee659a7d5926',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_universal (–∑–∞ 0.34—Å)',
      level: 'INFO',
      test_run_uuid: '94540667-897d-4264-98b6-ee659a7d5926'
    }
  ]
} to 11408:0
2025-07-29T07:21:36.612Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '5c852b3f-594b-47b4-9e8f-d4f4705f39a3',
    name: 'teardown',
    result: 'passed',
    test_run_id: '94540667-897d-4264-98b6-ee659a7d5926',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_universal',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:21:36.543Z',
    finished_at: '2025-07-29T07:21:36.605Z'
  },
  logs: []
} to 11408:0
2025-07-29T07:21:37.668Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'f83c814a-5280-439c-b2e5-4c3155a3d2c6',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'ec68e67c-86c3-4512-b661-4b0866f4d0b1',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_universal',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:35.621Z',
      finished_at: '2025-07-29T07:21:35.736Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'c6d674af-9420-4223-8a10-788e432afdba',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:36.022Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'c6d674af-9420-4223-8a10-788e432afdba',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'ea923aee-bbca-40c0-85db-e3db85f02a19',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:36.022Z',
      finished_at: '2025-07-29T07:21:36.093Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '0f967a54-8968-4dff-8ad9-66befd4969a4',
      name: 'setup',
      result: 'pending',
      test_run_id: '94540667-897d-4264-98b6-ee659a7d5926',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_universal',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:36.173Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '0f967a54-8968-4dff-8ad9-66befd4969a4',
      name: 'setup',
      result: 'passed',
      test_run_id: '94540667-897d-4264-98b6-ee659a7d5926',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_universal',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:36.173Z',
      finished_at: '2025-07-29T07:21:36.225Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '94540667-897d-4264-98b6-ee659a7d5926',
      name: 'test_qr_scanner_ui_elements_universal',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_universal',
      scope: 'test_qr_scanner_ui_elements_universal',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:21:36.266Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '94540667-897d-4264-98b6-ee659a7d5926',
      name: 'test_qr_scanner_ui_elements_universal',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_universal',
      scope: 'test_qr_scanner_ui_elements_universal',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 199,
      started_at: '2025-07-29T07:21:36.266Z',
      finished_at: '2025-07-29T07:21:36.465Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '5c852b3f-594b-47b4-9e8f-d4f4705f39a3',
      name: 'teardown',
      result: 'pending',
      test_run_id: '94540667-897d-4264-98b6-ee659a7d5926',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_universal',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:36.543Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '5c852b3f-594b-47b4-9e8f-d4f4705f39a3',
      name: 'teardown',
      result: 'passed',
      test_run_id: '94540667-897d-4264-98b6-ee659a7d5926',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_universal',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:21:36.543Z',
      finished_at: '2025-07-29T07:21:36.605Z'
    },
    logs: []
  }
] to 11408:0
2025-07-29T07:21:37.669Z CLI info  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T07:21:38.694Z CLI info  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  [PRODUCTION] Making PUT request to https://collector-observability.browserstack.com
2025-07-29T07:21:39.436Z CLI info [testhub:module]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  stopBuild: hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu request={"finished_at":"2025-07-29T07:21:37.785Z","finished_metadata":[],"custom_metadata":null} response={"data":""}
2025-07-29T07:21:39.438Z CLI info  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  [PRODUCTION] Making POST request to https://api.browserstack.com
2025-07-29T07:21:39.442Z CLI info [observability:module]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Visit https://observability.browserstack.com/builds/hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu to view build report, insights, and many more debugging information all at one place!
2025-07-29T07:21:42.024Z CLI info  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  [PRODUCTION] Making GET request to https://api.browserstack.com
2025-07-29T07:21:42.484Z CLI info  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  [PRODUCTION] Making POST request to https://eds.browserstack.com
2025-07-29T07:21:43.905Z CLI info [main]  [kanat_VX6i9G]  [hjuzd8utx5j4vxxkydrbgkxkdmg14czdjl6q0utu]  [9db2269d-bb97-431a-92df-8889c73e4174]  Received graceful signal termination, performing cleanup
2025-07-29T07:25:35.589Z CLI info     Config : {"userName":"kanat_VX6i9G","accessKey":"Asfusxe4qfUBqPdDszBs","framework":"pytest","app":"./apk/halyk_bank_app.apk","platforms":[{"platformName":"android","deviceName":"Samsung Galaxy S22 Ultra","platformVersion":"12.0"},{"platformName":"android","deviceName":"Google Pixel 7 Pro","platformVersion":"13.0"},{"platformName":"android","deviceName":"OnePlus 9","platformVersion":"11.0"}],"parallelsPerPlatform":1,"browserstackLocal":true,"buildName":"browserstack-build-1","projectName":"B2B Mobile Demo","debug":true,"networkLogs":true}
2025-07-29T07:25:35.605Z CLI info [testhub:module]  [kanat_VX6i9G]   [413401a1-518a-489e-a4c2-7d22c92a59e6]  Starting testhub from 11957:0
2025-07-29T07:25:35.606Z CLI info [testhub:module]  [kanat_VX6i9G]   [413401a1-518a-489e-a4c2-7d22c92a59e6]  startBuild: payload=

{"started_at":"2025-07-29T07:25:35.606Z","host_info":{"hostname":"MacBook-Pro-00059362.local","platform":"darwin","type":"Darwin","version":"Darwin Kernel Version 24.5.0: Tue Apr 22 19:53:26 PDT 2025; root:xnu-11417.121.6~2/RELEASE_X86_64","arch":"x64"},"ci_info":{"build_number":null},"version_control":{"name":"git","sha":"727003fc212f2f290a50bbf7310668e8901e6d4b","short_sha":"727003fc21","branch":"main","tag":null,"committer":"00059362 <a00059362@MacBook-Pro-00059362.local>","committer_date":"2025-07-28T09:08:59.000Z","author":"00059362 <a00059362@MacBook-Pro-00059362.local>","author_date":"2025-07-28T09:08:59.000Z","commit_message":"Refactor project","root":"/Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo","common_git_dir":"/Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/.git","worktree_git_dir":"/Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/.git","last_tag":null,"commits_since_last_tag":null,"remotes":[{"name":"origin","url":"https://github.com/Kanat-Nurumbetov/mobile-demo.git"}]},"project_name":"B2B Mobile Demo","name":"browserstack-build-1","build_identifier":"#2","build_run_identifier":null,"description":"","tags":[],"failed_tests_rerun":false,"accessibility":{"settings":{}},"framework_details":{"frameworkName":"pytest","frameworkVersion":"8.4.1","sdkVersion":"1.30.5","cliVersion":"1.6.1","language":"python","testFramework":{"name":"selenium","version":"4.34.0"}},"product_map":{"observability":true,"accessibility":null,"percy":false,"automate":false,"app_automate":true},"browserstackAutomation":true}
2025-07-29T07:25:35.606Z CLI info  [kanat_VX6i9G]   [413401a1-518a-489e-a4c2-7d22c92a59e6]  [PRODUCTION] Making POST request to https://sdk.browserstack.com
2025-07-29T07:25:36.809Z CLI info [testhub:module]  [kanat_VX6i9G]   [413401a1-518a-489e-a4c2-7d22c92a59e6]  startBuild: response=etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r
2025-07-29T07:25:36.811Z CLI info  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  [PRODUCTION] Making POST request to https://api.browserstack.com
2025-07-29T07:25:36.813Z CLI info  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  [PRODUCTION] Making GET request to https://api.browserstack.com
2025-07-29T07:25:37.411Z CLI error  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  error invoking callback for eventName: {}
2025-07-29T07:25:37.411Z CLI error  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Error: invalid percyToken=null
    at /snapshot/browserstack-binary/cli/dist/index.js
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-07-29T07:25:41.546Z CLI info [appautomate:service]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Using app: ./apk/halyk_bank_app.apk
2025-07-29T07:25:41.546Z CLI info [appautomate:service]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Uploading app /Users/a00059362/Desktop/–ù–æ–≤–∞—è –ø–∞–ø–∫–∞/mobile-demo/mobile-demo/apk/halyk_bank_app.apk  to browserstack
2025-07-29T07:25:41.548Z CLI info  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  [PRODUCTION] Making POST request to https://api.browserstack.com
2025-07-29T07:26:31.596Z CLI error  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  error invoking callback for eventName: {}
2025-07-29T07:26:31.596Z CLI error  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Error: Error in uploading app: {
  error: '[BROWSERSTACK_TESTING_TIME_LIMIT_EXHAUSTED]App Automate testing time has expired. Contact BrowserStack Support at https://www.browserstack.com/contact for extending your Free Trial.'
}
    at /snapshot/browserstack-binary/cli/dist/index.js
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-07-29T07:26:34.944Z CLI info  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  [PRODUCTION] Making GET request to https://hub.browserstack.com
2025-07-29T07:26:35.785Z CLI info  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  [PRODUCTION] Making GET request to https://hub-euw.browserstack.com
2025-07-29T07:26:35.785Z CLI info  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  [PRODUCTION] Making GET request to https://hub-use.browserstack.com
2025-07-29T07:26:35.785Z CLI info  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  [PRODUCTION] Making GET request to https://hub-aps.browserstack.com
2025-07-29T07:26:36.543Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'dda2d240-9e80-45df-a386-d70cf2a53bc0',
    name: 'setup',
    result: 'pending',
    test_run_id: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:36.536Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:36.562Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:36Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      level: 'INFO',
      test_run_uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82'
    }
  ]
} to 11957:0
2025-07-29T07:26:36.613Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'dda2d240-9e80-45df-a386-d70cf2a53bc0',
    name: 'setup',
    result: 'passed',
    test_run_id: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:36.536Z',
    finished_at: '2025-07-29T07:26:36.606Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:36.628Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
    name: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:36.616Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Samsung]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:36.631Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:36Z [tests.test_b2b][INFO] - üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82'
    }
  ]
} to 11957:0
2025-07-29T07:26:36.633Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:36Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82'
    }
  ]
} to 11957:0
2025-07-29T07:26:36.634Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:36Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82'
    }
  ]
} to 11957:0
2025-07-29T07:26:36.637Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:36Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82'
    }
  ]
} to 11957:0
2025-07-29T07:26:36.640Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:36Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82'
    }
  ]
} to 11957:0
2025-07-29T07:26:36.824Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Processing batch event [
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'dda2d240-9e80-45df-a386-d70cf2a53bc0',
      name: 'setup',
      result: 'pending',
      test_run_id: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:36.536Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'dda2d240-9e80-45df-a386-d70cf2a53bc0',
      name: 'setup',
      result: 'passed',
      test_run_id: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:36.536Z',
      finished_at: '2025-07-29T07:26:36.606Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      name: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:36.616Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 11957:0
2025-07-29T07:26:36.826Z CLI info  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T07:26:37.099Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'ad8bbd99-8779-4c20-9648-4194bd3c39c1',
    name: 'setup',
    result: 'pending',
    test_run_id: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:37.094Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:37.115Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:37Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      level: 'INFO',
      test_run_uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c'
    }
  ]
} to 11957:0
2025-07-29T07:26:37.163Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'ad8bbd99-8779-4c20-9648-4194bd3c39c1',
    name: 'setup',
    result: 'passed',
    test_run_id: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:37.094Z',
    finished_at: '2025-07-29T07:26:37.157Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:37.179Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
    name: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:37.167Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Samsung]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:37.181Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:37Z [tests.test_b2b][INFO] - üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - samsung_s22',
      level: 'INFO',
      test_run_uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c'
    }
  ]
} to 11957:0
2025-07-29T07:26:37.184Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:37Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c'
    }
  ]
} to 11957:0
2025-07-29T07:26:37.188Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:37Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c'
    }
  ]
} to 11957:0
2025-07-29T07:26:37.192Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:37Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c'
    }
  ]
} to 11957:0
2025-07-29T07:26:37.196Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:37Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c'
    }
  ]
} to 11957:0
2025-07-29T07:26:37.545Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'aaccceb4-4e12-4ba4-b638-7793ae31b93c',
    name: 'setup',
    result: 'pending',
    test_run_id: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:37.541Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:37.561Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:37Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      level: 'INFO',
      test_run_uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:37.610Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'aaccceb4-4e12-4ba4-b638-7793ae31b93c',
    name: 'setup',
    result: 'passed',
    test_run_id: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:37.541Z',
    finished_at: '2025-07-29T07:26:37.603Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:37.628Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
    name: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:37.615Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Samsung]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:37.631Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:37Z [tests.test_b2b][INFO] - üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:37.635Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:37Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:37.639Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:37Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:37.644Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:37Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:37.648Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:37Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:38.743Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82'
    }
  ]
} to 11957:0
2025-07-29T07:26:38.746Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      level: 'INFO',
      test_run_uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82'
    }
  ]
} to 11957:0
2025-07-29T07:26:38.749Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82'
    }
  ]
} to 11957:0
2025-07-29T07:26:38.753Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Samsung] etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82'
    }
  ]
} to 11957:0
2025-07-29T07:26:38.768Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82'
    }
  ]
} to 11957:0
2025-07-29T07:26:38.788Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
    name: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 2155,
    started_at: '2025-07-29T07:26:36.616Z',
    finished_at: '2025-07-29T07:26:38.771Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Samsung]'
    },
    hooks: [ 'dda2d240-9e80-45df-a386-d70cf2a53bc0' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:38.797Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'edc90c99-924c-4f43-ae4c-cf90abb58473',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:38.791Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:38.800Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:38Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Samsung] (–∑–∞ 2.24—Å)',
      level: 'INFO',
      test_run_uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82'
    }
  ]
} to 11957:0
2025-07-29T07:26:38.807Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:38.799Z',
      uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Samsung] (–∑–∞ 2.24—Å)',
      level: 'INFO',
      test_run_uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82'
    }
  ]
} to 11957:0
2025-07-29T07:26:38.807Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:36.627Z',
      uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      kind: 'TEST_LOG',
      message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82'
    }
  ]
} to 11957:0
2025-07-29T07:26:38.807Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:36.630Z',
      uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82'
    }
  ]
} to 11957:0
2025-07-29T07:26:38.807Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:36.633Z',
      uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82'
    }
  ]
} to 11957:0
2025-07-29T07:26:38.808Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:36.636Z',
      uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82'
    }
  ]
} to 11957:0
2025-07-29T07:26:38.808Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:36.639Z',
      uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82'
    }
  ]
} to 11957:0
2025-07-29T07:26:38.808Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:38.550Z',
      uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      kind: 'TEST_LOG',
      message: 'post_data: Sending data to testhub for events HookRunStarted',
      level: 'DEBUG',
      test_run_uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82'
    }
  ]
} to 11957:0
2025-07-29T07:26:38.808Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:38.561Z',
      uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      kind: 'TEST_LOG',
      message: 'Starting new HTTPS connection (1): collector-observability.browserstack.com:443',
      level: 'DEBUG',
      test_run_uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82'
    }
  ]
} to 11957:0
2025-07-29T07:26:38.818Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'edc90c99-924c-4f43-ae4c-cf90abb58473',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:38.791Z',
    finished_at: '2025-07-29T07:26:38.810Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:38.826Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Processing batch event [
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'ad8bbd99-8779-4c20-9648-4194bd3c39c1',
      name: 'setup',
      result: 'pending',
      test_run_id: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:37.094Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'ad8bbd99-8779-4c20-9648-4194bd3c39c1',
      name: 'setup',
      result: 'passed',
      test_run_id: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:37.094Z',
      finished_at: '2025-07-29T07:26:37.157Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      name: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:37.167Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'aaccceb4-4e12-4ba4-b638-7793ae31b93c',
      name: 'setup',
      result: 'pending',
      test_run_id: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:37.541Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'aaccceb4-4e12-4ba4-b638-7793ae31b93c',
      name: 'setup',
      result: 'passed',
      test_run_id: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:37.541Z',
      finished_at: '2025-07-29T07:26:37.603Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      name: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:37.615Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      name: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 2155,
      started_at: '2025-07-29T07:26:36.616Z',
      finished_at: '2025-07-29T07:26:38.771Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'edc90c99-924c-4f43-ae4c-cf90abb58473',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:38.791Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'edc90c99-924c-4f43-ae4c-cf90abb58473',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'c04054a6-dfc7-41f2-b85d-54f441588b82',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:38.791Z',
      finished_at: '2025-07-29T07:26:38.810Z'
    },
    logs: []
  }
] to 11957:0
2025-07-29T07:26:38.827Z CLI info  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T07:26:38.843Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'da2cce0e-d991-49b4-aa6c-9503f3040ada',
    name: 'setup',
    result: 'pending',
    test_run_id: 'f041c409-e640-4bca-a687-cff745327180',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:38.839Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:38.856Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'f041c409-e640-4bca-a687-cff745327180',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:38Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      level: 'INFO',
      test_run_uuid: 'f041c409-e640-4bca-a687-cff745327180'
    }
  ]
} to 11957:0
2025-07-29T07:26:38.886Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'da2cce0e-d991-49b4-aa6c-9503f3040ada',
    name: 'setup',
    result: 'passed',
    test_run_id: 'f041c409-e640-4bca-a687-cff745327180',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:38.839Z',
    finished_at: '2025-07-29T07:26:38.880Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:38.906Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'f041c409-e640-4bca-a687-cff745327180',
    name: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:38.893Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Samsung]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:38.909Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'f041c409-e640-4bca-a687-cff745327180',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:38Z [tests.test_b2b][INFO] - üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'f041c409-e640-4bca-a687-cff745327180'
    }
  ]
} to 11957:0
2025-07-29T07:26:38.914Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'f041c409-e640-4bca-a687-cff745327180',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:38Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'f041c409-e640-4bca-a687-cff745327180'
    }
  ]
} to 11957:0
2025-07-29T07:26:38.919Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'f041c409-e640-4bca-a687-cff745327180',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:38Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'f041c409-e640-4bca-a687-cff745327180'
    }
  ]
} to 11957:0
2025-07-29T07:26:38.923Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'f041c409-e640-4bca-a687-cff745327180',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:38Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'f041c409-e640-4bca-a687-cff745327180'
    }
  ]
} to 11957:0
2025-07-29T07:26:38.929Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'f041c409-e640-4bca-a687-cff745327180',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:38Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'f041c409-e640-4bca-a687-cff745327180'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.303Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.308Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      level: 'INFO',
      test_run_uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.312Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.317Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Samsung] etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.333Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.356Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
    name: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 2169,
    started_at: '2025-07-29T07:26:37.167Z',
    finished_at: '2025-07-29T07:26:39.336Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Samsung]'
    },
    hooks: [ 'ad8bbd99-8779-4c20-9648-4194bd3c39c1' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:39.366Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'bf9bf6de-3094-4e9b-8523-172add467060',
    name: 'teardown',
    result: 'pending',
    test_run_id: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:39.360Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:39.370Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:39Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Samsung] (–∑–∞ 2.25—Å)',
      level: 'INFO',
      test_run_uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.377Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:39.369Z',
      uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Samsung] (–∑–∞ 2.25—Å)',
      level: 'INFO',
      test_run_uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.377Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:37.180Z',
      uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      kind: 'TEST_LOG',
      message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - samsung_s22',
      level: 'INFO',
      test_run_uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.377Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:37.183Z',
      uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.377Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:37.187Z',
      uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.377Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:37.190Z',
      uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.377Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:37.195Z',
      uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.377Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:39.105Z',
      uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      kind: 'TEST_LOG',
      message: 'post_data: Sending data to testhub for events HookRunStarted',
      level: 'DEBUG',
      test_run_uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.378Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:39.114Z',
      uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      kind: 'TEST_LOG',
      message: 'Starting new HTTPS connection (1): collector-observability.browserstack.com:443',
      level: 'DEBUG',
      test_run_uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.389Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'bf9bf6de-3094-4e9b-8523-172add467060',
    name: 'teardown',
    result: 'passed',
    test_run_id: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:39.360Z',
    finished_at: '2025-07-29T07:26:39.381Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:39.416Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'be7122fd-f33f-45a8-88f5-c08785ef7223',
    name: 'setup',
    result: 'pending',
    test_run_id: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:39.412Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:39.430Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:39Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      level: 'INFO',
      test_run_uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.460Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'be7122fd-f33f-45a8-88f5-c08785ef7223',
    name: 'setup',
    result: 'passed',
    test_run_id: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:39.412Z',
    finished_at: '2025-07-29T07:26:39.453Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:39.482Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
    name: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:39.468Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Samsung]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:39.487Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:39Z [tests.test_b2b][INFO] - üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.493Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:39Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.498Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:39Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.504Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:39Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.509Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:39Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.753Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.758Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      level: 'INFO',
      test_run_uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.763Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.768Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Samsung] etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.785Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.812Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
    name: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 2175,
    started_at: '2025-07-29T07:26:37.615Z',
    finished_at: '2025-07-29T07:26:39.790Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Samsung]'
    },
    hooks: [ 'aaccceb4-4e12-4ba4-b638-7793ae31b93c' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:39.822Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'ec4e5a46-77bf-4307-a821-6bbfc5d341e9',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:39.816Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:39.827Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:39Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Samsung] (–∑–∞ 2.26—Å)',
      level: 'INFO',
      test_run_uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.834Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:39.826Z',
      uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Samsung] (–∑–∞ 2.26—Å)',
      level: 'INFO',
      test_run_uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.834Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:37.630Z',
      uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      kind: 'TEST_LOG',
      message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.834Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:37.634Z',
      uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.834Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:37.638Z',
      uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.834Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:37.642Z',
      uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.834Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:37.647Z',
      uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.835Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:39.554Z',
      uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      kind: 'TEST_LOG',
      message: 'post_data: Sending data to testhub for events HookRunStarted',
      level: 'DEBUG',
      test_run_uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.835Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:39.562Z',
      uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      kind: 'TEST_LOG',
      message: 'Starting new HTTPS connection (1): collector-observability.browserstack.com:443',
      level: 'DEBUG',
      test_run_uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.848Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'ec4e5a46-77bf-4307-a821-6bbfc5d341e9',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:39.816Z',
    finished_at: '2025-07-29T07:26:39.839Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:39.877Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'e0ab4c9e-e934-4d8d-8c0d-715b5321d9aa',
    name: 'setup',
    result: 'pending',
    test_run_id: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:39.872Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:39.891Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:39Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      level: 'INFO',
      test_run_uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.921Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'e0ab4c9e-e934-4d8d-8c0d-715b5321d9aa',
    name: 'setup',
    result: 'passed',
    test_run_id: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:39.872Z',
    finished_at: '2025-07-29T07:26:39.915Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:39.948Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
    name: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:39.931Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Samsung]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:39.953Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:39Z [tests.test_b2b][INFO] - üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.960Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:39Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.966Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:39Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.972Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:39Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba'
    }
  ]
} to 11957:0
2025-07-29T07:26:39.979Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:39Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba'
    }
  ]
} to 11957:0
2025-07-29T07:26:40.827Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Processing batch event [
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'da2cce0e-d991-49b4-aa6c-9503f3040ada',
      name: 'setup',
      result: 'pending',
      test_run_id: 'f041c409-e640-4bca-a687-cff745327180',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:38.839Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'da2cce0e-d991-49b4-aa6c-9503f3040ada',
      name: 'setup',
      result: 'passed',
      test_run_id: 'f041c409-e640-4bca-a687-cff745327180',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:38.839Z',
      finished_at: '2025-07-29T07:26:38.880Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'f041c409-e640-4bca-a687-cff745327180',
      name: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:38.893Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      name: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 2169,
      started_at: '2025-07-29T07:26:37.167Z',
      finished_at: '2025-07-29T07:26:39.336Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'bf9bf6de-3094-4e9b-8523-172add467060',
      name: 'teardown',
      result: 'pending',
      test_run_id: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:39.360Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'bf9bf6de-3094-4e9b-8523-172add467060',
      name: 'teardown',
      result: 'passed',
      test_run_id: '88afc4ee-064b-46e1-9f41-d2d4f6c5091c',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:39.360Z',
      finished_at: '2025-07-29T07:26:39.381Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'be7122fd-f33f-45a8-88f5-c08785ef7223',
      name: 'setup',
      result: 'pending',
      test_run_id: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:39.412Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'be7122fd-f33f-45a8-88f5-c08785ef7223',
      name: 'setup',
      result: 'passed',
      test_run_id: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:39.412Z',
      finished_at: '2025-07-29T07:26:39.453Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      name: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:39.468Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      name: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 2175,
      started_at: '2025-07-29T07:26:37.615Z',
      finished_at: '2025-07-29T07:26:39.790Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'ec4e5a46-77bf-4307-a821-6bbfc5d341e9',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:39.816Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'ec4e5a46-77bf-4307-a821-6bbfc5d341e9',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'eae4e18f-374c-4231-a404-ffba82d78c3f',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:39.816Z',
      finished_at: '2025-07-29T07:26:39.839Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'e0ab4c9e-e934-4d8d-8c0d-715b5321d9aa',
      name: 'setup',
      result: 'pending',
      test_run_id: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:39.872Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'e0ab4c9e-e934-4d8d-8c0d-715b5321d9aa',
      name: 'setup',
      result: 'passed',
      test_run_id: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:39.872Z',
      finished_at: '2025-07-29T07:26:39.915Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      name: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:39.931Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 11957:0
2025-07-29T07:26:40.829Z CLI info  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T07:26:40.970Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'f041c409-e640-4bca-a687-cff745327180',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'f041c409-e640-4bca-a687-cff745327180'
    }
  ]
} to 11957:0
2025-07-29T07:26:40.976Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'f041c409-e640-4bca-a687-cff745327180',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      level: 'INFO',
      test_run_uuid: 'f041c409-e640-4bca-a687-cff745327180'
    }
  ]
} to 11957:0
2025-07-29T07:26:40.981Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'f041c409-e640-4bca-a687-cff745327180',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'f041c409-e640-4bca-a687-cff745327180'
    }
  ]
} to 11957:0
2025-07-29T07:26:40.988Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'f041c409-e640-4bca-a687-cff745327180',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Samsung] etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'f041c409-e640-4bca-a687-cff745327180'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.006Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'f041c409-e640-4bca-a687-cff745327180',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'f041c409-e640-4bca-a687-cff745327180'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.036Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'f041c409-e640-4bca-a687-cff745327180',
    name: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 2119,
    started_at: '2025-07-29T07:26:38.893Z',
    finished_at: '2025-07-29T07:26:41.012Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Samsung]'
    },
    hooks: [ 'da2cce0e-d991-49b4-aa6c-9503f3040ada' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:41.046Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'a7657f40-4b5e-4597-bc4f-068fb3c41737',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'f041c409-e640-4bca-a687-cff745327180',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:41.041Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:41.053Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'f041c409-e640-4bca-a687-cff745327180',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:41Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Samsung] (–∑–∞ 2.19—Å)',
      level: 'INFO',
      test_run_uuid: 'f041c409-e640-4bca-a687-cff745327180'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.061Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:41.051Z',
      uuid: 'f041c409-e640-4bca-a687-cff745327180',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Samsung] (–∑–∞ 2.19—Å)',
      level: 'INFO',
      test_run_uuid: 'f041c409-e640-4bca-a687-cff745327180'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.061Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:38.908Z',
      uuid: 'f041c409-e640-4bca-a687-cff745327180',
      kind: 'TEST_LOG',
      message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'f041c409-e640-4bca-a687-cff745327180'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.061Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:38.913Z',
      uuid: 'f041c409-e640-4bca-a687-cff745327180',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'f041c409-e640-4bca-a687-cff745327180'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.061Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:38.917Z',
      uuid: 'f041c409-e640-4bca-a687-cff745327180',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'f041c409-e640-4bca-a687-cff745327180'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.061Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:38.922Z',
      uuid: 'f041c409-e640-4bca-a687-cff745327180',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'f041c409-e640-4bca-a687-cff745327180'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.062Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:38.927Z',
      uuid: 'f041c409-e640-4bca-a687-cff745327180',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'f041c409-e640-4bca-a687-cff745327180'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.062Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:39.217Z',
      uuid: 'f041c409-e640-4bca-a687-cff745327180',
      kind: 'TEST_LOG',
      message: 'https://collector-observability.browserstack.com:443 "POST /api/v1/batch HTTP/1.1" 401 None',
      level: 'DEBUG',
      test_run_uuid: 'f041c409-e640-4bca-a687-cff745327180'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.075Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'a7657f40-4b5e-4597-bc4f-068fb3c41737',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'f041c409-e640-4bca-a687-cff745327180',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:41.041Z',
    finished_at: '2025-07-29T07:26:41.067Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:41.106Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '1d468baf-9745-4445-98b9-f7a2adeb33b2',
    name: 'setup',
    result: 'pending',
    test_run_id: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:41.102Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:41.121Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:41Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      level: 'INFO',
      test_run_uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.158Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '1d468baf-9745-4445-98b9-f7a2adeb33b2',
    name: 'setup',
    result: 'passed',
    test_run_id: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:41.102Z',
    finished_at: '2025-07-29T07:26:41.153Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:41.187Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
    name: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:41.169Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Pixel]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:41.194Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:41Z [tests.test_b2b][INFO] - üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - pixel_6',
      level: 'INFO',
      test_run_uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.200Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:41Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.208Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:41Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.214Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:41Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.222Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:41Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.554Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.561Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      level: 'INFO',
      test_run_uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.568Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.574Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Samsung] etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.594Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.627Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
    name: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 2132,
    started_at: '2025-07-29T07:26:39.468Z',
    finished_at: '2025-07-29T07:26:41.600Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Samsung]'
    },
    hooks: [ 'be7122fd-f33f-45a8-88f5-c08785ef7223' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:41.637Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '18d5adb5-31e4-4af4-8a9a-766b000bda3c',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:41.632Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:41.644Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:41Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Samsung] (–∑–∞ 2.21—Å)',
      level: 'INFO',
      test_run_uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.652Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:41.643Z',
      uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Samsung] (–∑–∞ 2.21—Å)',
      level: 'INFO',
      test_run_uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.653Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:39.486Z',
      uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      kind: 'TEST_LOG',
      message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.653Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:39.491Z',
      uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.653Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:39.497Z',
      uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.653Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:39.502Z',
      uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.653Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:39.508Z',
      uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.653Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:39.718Z',
      uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      kind: 'TEST_LOG',
      message: 'https://collector-observability.browserstack.com:443 "POST /api/v1/batch HTTP/1.1" 401 None',
      level: 'DEBUG',
      test_run_uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.667Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '18d5adb5-31e4-4af4-8a9a-766b000bda3c',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:41.632Z',
    finished_at: '2025-07-29T07:26:41.659Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:41.702Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '8b125f08-9f3f-41d3-b82c-56c0626d1c9c',
    name: 'setup',
    result: 'pending',
    test_run_id: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:41.698Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:41.717Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:41Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      level: 'INFO',
      test_run_uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.758Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '8b125f08-9f3f-41d3-b82c-56c0626d1c9c',
    name: 'setup',
    result: 'passed',
    test_run_id: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:41.698Z',
    finished_at: '2025-07-29T07:26:41.753Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:41.790Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
    name: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:41.771Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Pixel]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:41.797Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:41Z [tests.test_b2b][INFO] - üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - pixel_6',
      level: 'INFO',
      test_run_uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.805Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:41Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.813Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:41Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.822Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:41Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb'
    }
  ]
} to 11957:0
2025-07-29T07:26:41.829Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:41Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb'
    }
  ]
} to 11957:0
2025-07-29T07:26:42.024Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba'
    }
  ]
} to 11957:0
2025-07-29T07:26:42.032Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      level: 'INFO',
      test_run_uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba'
    }
  ]
} to 11957:0
2025-07-29T07:26:42.039Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba'
    }
  ]
} to 11957:0
2025-07-29T07:26:42.047Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Samsung] etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba'
    }
  ]
} to 11957:0
2025-07-29T07:26:42.068Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba'
    }
  ]
} to 11957:0
2025-07-29T07:26:42.104Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
    name: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 2145,
    started_at: '2025-07-29T07:26:39.931Z',
    finished_at: '2025-07-29T07:26:42.076Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Samsung]'
    },
    hooks: [ 'e0ab4c9e-e934-4d8d-8c0d-715b5321d9aa' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:42.116Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'ff1e1ce8-12f7-4d80-850f-b2eee00b6d46',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:42.111Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:42.124Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:42Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Samsung] (–∑–∞ 2.23—Å)',
      level: 'INFO',
      test_run_uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba'
    }
  ]
} to 11957:0
2025-07-29T07:26:42.133Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:42.122Z',
      uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Samsung] (–∑–∞ 2.23—Å)',
      level: 'INFO',
      test_run_uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba'
    }
  ]
} to 11957:0
2025-07-29T07:26:42.133Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:39.952Z',
      uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      kind: 'TEST_LOG',
      message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba'
    }
  ]
} to 11957:0
2025-07-29T07:26:42.133Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:39.958Z',
      uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba'
    }
  ]
} to 11957:0
2025-07-29T07:26:42.133Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:39.965Z',
      uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba'
    }
  ]
} to 11957:0
2025-07-29T07:26:42.133Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:39.971Z',
      uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba'
    }
  ]
} to 11957:0
2025-07-29T07:26:42.133Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:39.978Z',
      uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba'
    }
  ]
} to 11957:0
2025-07-29T07:26:42.133Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:40.173Z',
      uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      kind: 'TEST_LOG',
      message: 'https://collector-observability.browserstack.com:443 "POST /api/v1/batch HTTP/1.1" 401 None',
      level: 'DEBUG',
      test_run_uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba'
    }
  ]
} to 11957:0
2025-07-29T07:26:42.148Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'ff1e1ce8-12f7-4d80-850f-b2eee00b6d46',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:42.111Z',
    finished_at: '2025-07-29T07:26:42.140Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:42.188Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'af379b9a-ff3e-44df-96fa-cb8c041c3481',
    name: 'setup',
    result: 'pending',
    test_run_id: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:42.184Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:42.204Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:42Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      level: 'INFO',
      test_run_uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e'
    }
  ]
} to 11957:0
2025-07-29T07:26:42.244Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'af379b9a-ff3e-44df-96fa-cb8c041c3481',
    name: 'setup',
    result: 'passed',
    test_run_id: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:42.184Z',
    finished_at: '2025-07-29T07:26:42.238Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:42.279Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
    name: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:42.258Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Pixel]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:42.286Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:42Z [tests.test_b2b][INFO] - üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - pixel_6',
      level: 'INFO',
      test_run_uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e'
    }
  ]
} to 11957:0
2025-07-29T07:26:42.295Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:42Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e'
    }
  ]
} to 11957:0
2025-07-29T07:26:42.304Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:42Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e'
    }
  ]
} to 11957:0
2025-07-29T07:26:42.313Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:42Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e'
    }
  ]
} to 11957:0
2025-07-29T07:26:42.321Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:42Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e'
    }
  ]
} to 11957:0
2025-07-29T07:26:42.826Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'f041c409-e640-4bca-a687-cff745327180',
      name: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 2119,
      started_at: '2025-07-29T07:26:38.893Z',
      finished_at: '2025-07-29T07:26:41.012Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'a7657f40-4b5e-4597-bc4f-068fb3c41737',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'f041c409-e640-4bca-a687-cff745327180',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:41.041Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'a7657f40-4b5e-4597-bc4f-068fb3c41737',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'f041c409-e640-4bca-a687-cff745327180',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:41.041Z',
      finished_at: '2025-07-29T07:26:41.067Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '1d468baf-9745-4445-98b9-f7a2adeb33b2',
      name: 'setup',
      result: 'pending',
      test_run_id: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:41.102Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '1d468baf-9745-4445-98b9-f7a2adeb33b2',
      name: 'setup',
      result: 'passed',
      test_run_id: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:41.102Z',
      finished_at: '2025-07-29T07:26:41.153Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      name: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:41.169Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      name: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 2132,
      started_at: '2025-07-29T07:26:39.468Z',
      finished_at: '2025-07-29T07:26:41.600Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '18d5adb5-31e4-4af4-8a9a-766b000bda3c',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:41.632Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '18d5adb5-31e4-4af4-8a9a-766b000bda3c',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'f2fce7b5-4a70-4a59-a1c3-d40467055fd6',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:41.632Z',
      finished_at: '2025-07-29T07:26:41.659Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '8b125f08-9f3f-41d3-b82c-56c0626d1c9c',
      name: 'setup',
      result: 'pending',
      test_run_id: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:41.698Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '8b125f08-9f3f-41d3-b82c-56c0626d1c9c',
      name: 'setup',
      result: 'passed',
      test_run_id: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:41.698Z',
      finished_at: '2025-07-29T07:26:41.753Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      name: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:41.771Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      name: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 2145,
      started_at: '2025-07-29T07:26:39.931Z',
      finished_at: '2025-07-29T07:26:42.076Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'ff1e1ce8-12f7-4d80-850f-b2eee00b6d46',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:42.111Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'ff1e1ce8-12f7-4d80-850f-b2eee00b6d46',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'e48d792a-66f7-4351-843b-5af75d9e70ba',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Samsung]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:42.111Z',
      finished_at: '2025-07-29T07:26:42.140Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'af379b9a-ff3e-44df-96fa-cb8c041c3481',
      name: 'setup',
      result: 'pending',
      test_run_id: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:42.184Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'af379b9a-ff3e-44df-96fa-cb8c041c3481',
      name: 'setup',
      result: 'passed',
      test_run_id: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:42.184Z',
      finished_at: '2025-07-29T07:26:42.238Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      name: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:42.258Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 11957:0
2025-07-29T07:26:42.829Z CLI info  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T07:26:43.268Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.276Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      level: 'INFO',
      test_run_uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.284Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.293Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Pixel] etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.316Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.354Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
    name: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 2154,
    started_at: '2025-07-29T07:26:41.169Z',
    finished_at: '2025-07-29T07:26:43.323Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Pixel]'
    },
    hooks: [ '1d468baf-9745-4445-98b9-f7a2adeb33b2' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:43.367Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '1cc215ae-8362-41bf-bf24-1717784ba6dc',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:43.362Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:43.375Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:43Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Pixel] (–∑–∞ 2.25—Å)',
      level: 'INFO',
      test_run_uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.385Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:43.374Z',
      uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Pixel] (–∑–∞ 2.25—Å)',
      level: 'INFO',
      test_run_uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.385Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:41.192Z',
      uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      kind: 'TEST_LOG',
      message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - pixel_6',
      level: 'INFO',
      test_run_uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.386Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:41.199Z',
      uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.386Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:41.206Z',
      uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.386Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:41.213Z',
      uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.386Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:41.222Z',
      uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      kind: 'TEST_LOG',
      message: 'post_data: Sending data to testhub for events HookRunStarted, HookRunStarted',
      level: 'DEBUG',
      test_run_uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.386Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:41.225Z',
      uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      kind: 'TEST_LOG',
      message: 'Starting new HTTPS connection (1): collector-observability.browserstack.com:443',
      level: 'DEBUG',
      test_run_uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.386Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:41.220Z',
      uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.386Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:41.850Z',
      uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      kind: 'TEST_LOG',
      message: 'https://collector-observability.browserstack.com:443 "POST /api/v1/batch HTTP/1.1" 401 None',
      level: 'DEBUG',
      test_run_uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.401Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '1cc215ae-8362-41bf-bf24-1717784ba6dc',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:43.362Z',
    finished_at: '2025-07-29T07:26:43.394Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:43.442Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '3dba262c-a6f6-4e8b-ae35-c0a2ff51e2a5',
    name: 'setup',
    result: 'pending',
    test_run_id: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:43.438Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:43.460Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:43Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      level: 'INFO',
      test_run_uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.494Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '3dba262c-a6f6-4e8b-ae35-c0a2ff51e2a5',
    name: 'setup',
    result: 'passed',
    test_run_id: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:43.438Z',
    finished_at: '2025-07-29T07:26:43.488Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:43.531Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
    name: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:43.509Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Pixel]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:43.539Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:43Z [tests.test_b2b][INFO] - üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - pixel_6',
      level: 'INFO',
      test_run_uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.549Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:43Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.559Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:43Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.568Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:43Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.577Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:43Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.876Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.885Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      level: 'INFO',
      test_run_uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.894Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.903Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Pixel] etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.928Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb'
    }
  ]
} to 11957:0
2025-07-29T07:26:43.969Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
    name: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 2165,
    started_at: '2025-07-29T07:26:41.771Z',
    finished_at: '2025-07-29T07:26:43.936Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Pixel]'
    },
    hooks: [ '8b125f08-9f3f-41d3-b82c-56c0626d1c9c' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:43.982Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '75dea518-36b5-4d51-8c63-113bb430c485',
    name: 'teardown',
    result: 'pending',
    test_run_id: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:43.977Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:43.992Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:43Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Pixel] (–∑–∞ 2.26—Å)',
      level: 'INFO',
      test_run_uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.003Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:43.990Z',
      uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Pixel] (–∑–∞ 2.26—Å)',
      level: 'INFO',
      test_run_uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.003Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:41.796Z',
      uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      kind: 'TEST_LOG',
      message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - pixel_6',
      level: 'INFO',
      test_run_uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.003Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:41.803Z',
      uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.003Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:41.812Z',
      uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.003Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:41.820Z',
      uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.003Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:41.828Z',
      uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.003Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:42.358Z',
      uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      kind: 'TEST_LOG',
      message: 'https://collector-observability.browserstack.com:443 "POST /api/v1/batch HTTP/1.1" 401 None',
      level: 'DEBUG',
      test_run_uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.020Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '75dea518-36b5-4d51-8c63-113bb430c485',
    name: 'teardown',
    result: 'passed',
    test_run_id: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:43.977Z',
    finished_at: '2025-07-29T07:26:44.012Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:44.064Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '19f9f58c-1924-4a9d-ac93-203d2b6c26b5',
    name: 'setup',
    result: 'pending',
    test_run_id: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:44.060Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:44.082Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:44Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      level: 'INFO',
      test_run_uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.117Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '19f9f58c-1924-4a9d-ac93-203d2b6c26b5',
    name: 'setup',
    result: 'passed',
    test_run_id: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:44.060Z',
    finished_at: '2025-07-29T07:26:44.111Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:44.159Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
    name: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:44.135Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Pixel]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:44.168Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:44Z [tests.test_b2b][INFO] - üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - pixel_6',
      level: 'INFO',
      test_run_uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.178Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:44Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.188Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:44Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.199Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:44Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.210Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:44Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.369Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.379Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      level: 'INFO',
      test_run_uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.388Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.398Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Pixel] etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.425Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.470Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
    name: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 2176,
    started_at: '2025-07-29T07:26:42.258Z',
    finished_at: '2025-07-29T07:26:44.434Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Universal-Pixel]'
    },
    hooks: [ 'af379b9a-ff3e-44df-96fa-cb8c041c3481' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:44.484Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '2a1172bc-282a-4d99-b87c-53dd41d968ce',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:44.479Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:44.494Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:44Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Pixel] (–∑–∞ 2.28—Å)',
      level: 'INFO',
      test_run_uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.506Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:44.493Z',
      uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Universal-Pixel] (–∑–∞ 2.28—Å)',
      level: 'INFO',
      test_run_uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.506Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:42.285Z',
      uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      kind: 'TEST_LOG',
      message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - pixel_6',
      level: 'INFO',
      test_run_uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.506Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:42.294Z',
      uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.506Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:42.303Z',
      uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.506Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:42.311Z',
      uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.506Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:42.320Z',
      uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.506Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:42.798Z',
      uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      kind: 'TEST_LOG',
      message: 'https://collector-observability.browserstack.com:443 "POST /api/v1/batch HTTP/1.1" 401 None',
      level: 'DEBUG',
      test_run_uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.523Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '2a1172bc-282a-4d99-b87c-53dd41d968ce',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:44.479Z',
    finished_at: '2025-07-29T07:26:44.515Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:44.570Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '39815cd9-54f4-4fce-ac3d-db0f5f66d4b4',
    name: 'setup',
    result: 'pending',
    test_run_id: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:44.566Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:44.588Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:44Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      level: 'INFO',
      test_run_uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.623Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '39815cd9-54f4-4fce-ac3d-db0f5f66d4b4',
    name: 'setup',
    result: 'passed',
    test_run_id: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:44.566Z',
    finished_at: '2025-07-29T07:26:44.618Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:44.666Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
    name: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:44.642Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Pixel]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:44.676Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:44Z [tests.test_b2b][INFO] - üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - pixel_6',
      level: 'INFO',
      test_run_uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.687Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:44Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.699Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:44Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.711Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:44Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.722Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:44Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936'
    }
  ]
} to 11957:0
2025-07-29T07:26:44.827Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      name: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 2154,
      started_at: '2025-07-29T07:26:41.169Z',
      finished_at: '2025-07-29T07:26:43.323Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '1cc215ae-8362-41bf-bf24-1717784ba6dc',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:43.362Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '1cc215ae-8362-41bf-bf24-1717784ba6dc',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'a8dafc05-229e-42e6-bc08-b433204d17e2',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:43.362Z',
      finished_at: '2025-07-29T07:26:43.394Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '3dba262c-a6f6-4e8b-ae35-c0a2ff51e2a5',
      name: 'setup',
      result: 'pending',
      test_run_id: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:43.438Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '3dba262c-a6f6-4e8b-ae35-c0a2ff51e2a5',
      name: 'setup',
      result: 'passed',
      test_run_id: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:43.438Z',
      finished_at: '2025-07-29T07:26:43.488Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      name: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:43.509Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      name: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 2165,
      started_at: '2025-07-29T07:26:41.771Z',
      finished_at: '2025-07-29T07:26:43.936Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '75dea518-36b5-4d51-8c63-113bb430c485',
      name: 'teardown',
      result: 'pending',
      test_run_id: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:43.977Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '75dea518-36b5-4d51-8c63-113bb430c485',
      name: 'teardown',
      result: 'passed',
      test_run_id: '691fdd0c-81ef-42bc-8df9-50c135916cbb',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:43.977Z',
      finished_at: '2025-07-29T07:26:44.012Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '19f9f58c-1924-4a9d-ac93-203d2b6c26b5',
      name: 'setup',
      result: 'pending',
      test_run_id: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:44.060Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '19f9f58c-1924-4a9d-ac93-203d2b6c26b5',
      name: 'setup',
      result: 'passed',
      test_run_id: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:44.060Z',
      finished_at: '2025-07-29T07:26:44.111Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      name: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:44.135Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      name: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 2176,
      started_at: '2025-07-29T07:26:42.258Z',
      finished_at: '2025-07-29T07:26:44.434Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '2a1172bc-282a-4d99-b87c-53dd41d968ce',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:44.479Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '2a1172bc-282a-4d99-b87c-53dd41d968ce',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'efd8090b-1341-4968-aa7d-ee9ad47e297e',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Universal-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:44.479Z',
      finished_at: '2025-07-29T07:26:44.515Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '39815cd9-54f4-4fce-ac3d-db0f5f66d4b4',
      name: 'setup',
      result: 'pending',
      test_run_id: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:44.566Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '39815cd9-54f4-4fce-ac3d-db0f5f66d4b4',
      name: 'setup',
      result: 'passed',
      test_run_id: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:44.566Z',
      finished_at: '2025-07-29T07:26:44.618Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      name: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:44.642Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 11957:0
2025-07-29T07:26:44.830Z CLI info  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T07:26:45.629Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9'
    }
  ]
} to 11957:0
2025-07-29T07:26:45.639Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      level: 'INFO',
      test_run_uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9'
    }
  ]
} to 11957:0
2025-07-29T07:26:45.649Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9'
    }
  ]
} to 11957:0
2025-07-29T07:26:45.660Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Pixel] etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9'
    }
  ]
} to 11957:0
2025-07-29T07:26:45.688Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9'
    }
  ]
} to 11957:0
2025-07-29T07:26:45.735Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
    name: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 2188,
    started_at: '2025-07-29T07:26:43.509Z',
    finished_at: '2025-07-29T07:26:45.697Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Pixel]'
    },
    hooks: [ '3dba262c-a6f6-4e8b-ae35-c0a2ff51e2a5' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:45.750Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '0007cb08-a954-4d16-a3f7-73d25ac4525a',
    name: 'teardown',
    result: 'pending',
    test_run_id: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:45.745Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:45.760Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:45Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Pixel] (–∑–∞ 2.29—Å)',
      level: 'INFO',
      test_run_uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9'
    }
  ]
} to 11957:0
2025-07-29T07:26:45.773Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:45.759Z',
      uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Pixel] (–∑–∞ 2.29—Å)',
      level: 'INFO',
      test_run_uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9'
    }
  ]
} to 11957:0
2025-07-29T07:26:45.773Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:43.538Z',
      uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      kind: 'TEST_LOG',
      message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - pixel_6',
      level: 'INFO',
      test_run_uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9'
    }
  ]
} to 11957:0
2025-07-29T07:26:45.774Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:43.547Z',
      uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9'
    }
  ]
} to 11957:0
2025-07-29T07:26:45.774Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:43.557Z',
      uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9'
    }
  ]
} to 11957:0
2025-07-29T07:26:45.774Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:43.567Z',
      uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9'
    }
  ]
} to 11957:0
2025-07-29T07:26:45.774Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:43.576Z',
      uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9'
    }
  ]
} to 11957:0
2025-07-29T07:26:45.774Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:43.855Z',
      uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      kind: 'TEST_LOG',
      message: 'post_data: Sending data to testhub for events HookRunStarted',
      level: 'DEBUG',
      test_run_uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9'
    }
  ]
} to 11957:0
2025-07-29T07:26:45.774Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:43.857Z',
      uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      kind: 'TEST_LOG',
      message: 'Starting new HTTPS connection (1): collector-observability.browserstack.com:443',
      level: 'DEBUG',
      test_run_uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9'
    }
  ]
} to 11957:0
2025-07-29T07:26:45.774Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:44.485Z',
      uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      kind: 'TEST_LOG',
      message: 'https://collector-observability.browserstack.com:443 "POST /api/v1/batch HTTP/1.1" 401 None',
      level: 'DEBUG',
      test_run_uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9'
    }
  ]
} to 11957:0
2025-07-29T07:26:45.791Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '0007cb08-a954-4d16-a3f7-73d25ac4525a',
    name: 'teardown',
    result: 'passed',
    test_run_id: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:45.745Z',
    finished_at: '2025-07-29T07:26:45.784Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:45.840Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '17f667cf-86dc-4f31-9ee1-56dd2dabb9bf',
    name: 'setup',
    result: 'pending',
    test_run_id: '9eb0ef2a-a988-4182-bf25-b7df1455283c',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:45.836Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:45.859Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '9eb0ef2a-a988-4182-bf25-b7df1455283c',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:45Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_universal[Universal-QR]',
      level: 'INFO',
      test_run_uuid: '9eb0ef2a-a988-4182-bf25-b7df1455283c'
    }
  ]
} to 11957:0
2025-07-29T07:26:45.900Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '17f667cf-86dc-4f31-9ee1-56dd2dabb9bf',
    name: 'setup',
    result: 'passed',
    test_run_id: '9eb0ef2a-a988-4182-bf25-b7df1455283c',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:45.836Z',
    finished_at: '2025-07-29T07:26:45.895Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:45.947Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '9eb0ef2a-a988-4182-bf25-b7df1455283c',
    name: 'test_full_qr_payment_flow_universal[Universal-QR]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image",\n' +
        '        ["distrA", "distrB"],\n' +
        '        indirect=True,\n' +
        '        ids=["Universal-QR", "Megapolis-QR"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_universal(self, driver, qr_image):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ BrowserStack)"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {driver.test_mode}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_universal[Universal-QR]',
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:45.920Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Universal-QR]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:45.977Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '9eb0ef2a-a988-4182-bf25-b7df1455283c',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '9eb0ef2a-a988-4182-bf25-b7df1455283c'
    }
  ]
} to 11957:0
2025-07-29T07:26:45.988Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '9eb0ef2a-a988-4182-bf25-b7df1455283c',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Universal-QR]',
      level: 'INFO',
      test_run_uuid: '9eb0ef2a-a988-4182-bf25-b7df1455283c'
    }
  ]
} to 11957:0
2025-07-29T07:26:45.999Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '9eb0ef2a-a988-4182-bf25-b7df1455283c',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '9eb0ef2a-a988-4182-bf25-b7df1455283c'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.010Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '9eb0ef2a-a988-4182-bf25-b7df1455283c',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Universal-QR] etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '9eb0ef2a-a988-4182-bf25-b7df1455283c'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.038Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '9eb0ef2a-a988-4182-bf25-b7df1455283c',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '9eb0ef2a-a988-4182-bf25-b7df1455283c'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.087Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '9eb0ef2a-a988-4182-bf25-b7df1455283c',
    name: 'test_full_qr_payment_flow_universal[Universal-QR]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image",\n' +
        '        ["distrA", "distrB"],\n' +
        '        indirect=True,\n' +
        '        ids=["Universal-QR", "Megapolis-QR"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_universal(self, driver, qr_image):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ BrowserStack)"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {driver.test_mode}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_universal[Universal-QR]',
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 129,
    started_at: '2025-07-29T07:26:45.920Z',
    finished_at: '2025-07-29T07:26:46.049Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Universal-QR]'
    },
    hooks: [ '17f667cf-86dc-4f31-9ee1-56dd2dabb9bf' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:46.103Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '7bf23045-168e-4317-b165-c131342b0674',
    name: 'teardown',
    result: 'pending',
    test_run_id: '9eb0ef2a-a988-4182-bf25-b7df1455283c',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:46.098Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:46.114Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '9eb0ef2a-a988-4182-bf25-b7df1455283c',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:46Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Universal-QR] (–∑–∞ 0.24—Å)',
      level: 'INFO',
      test_run_uuid: '9eb0ef2a-a988-4182-bf25-b7df1455283c'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.127Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:46.113Z',
      uuid: '9eb0ef2a-a988-4182-bf25-b7df1455283c',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Universal-QR] (–∑–∞ 0.24—Å)',
      level: 'INFO',
      test_run_uuid: '9eb0ef2a-a988-4182-bf25-b7df1455283c'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.146Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '7bf23045-168e-4317-b165-c131342b0674',
    name: 'teardown',
    result: 'passed',
    test_run_id: '9eb0ef2a-a988-4182-bf25-b7df1455283c',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:46.098Z',
    finished_at: '2025-07-29T07:26:46.138Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:46.198Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'bff3c7f6-f7d6-4290-bc40-78b20977d7d3',
    name: 'setup',
    result: 'pending',
    test_run_id: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:46.194Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:46.218Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:46Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_universal[Megapolis-QR]',
      level: 'INFO',
      test_run_uuid: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.252Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'bff3c7f6-f7d6-4290-bc40-78b20977d7d3',
    name: 'setup',
    result: 'passed',
    test_run_id: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:46.194Z',
    finished_at: '2025-07-29T07:26:46.247Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:46.302Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513',
    name: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image",\n' +
        '        ["distrA", "distrB"],\n' +
        '        indirect=True,\n' +
        '        ids=["Universal-QR", "Megapolis-QR"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_universal(self, driver, qr_image):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ BrowserStack)"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {driver.test_mode}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:46.274Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Megapolis-QR]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:46.333Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.345Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Megapolis-QR]',
      level: 'INFO',
      test_run_uuid: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.357Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.368Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Megapolis-QR] etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.398Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.449Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513',
    name: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image",\n' +
        '        ["distrA", "distrB"],\n' +
        '        indirect=True,\n' +
        '        ids=["Universal-QR", "Megapolis-QR"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_universal(self, driver, qr_image):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ BrowserStack)"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {driver.test_mode}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 135,
    started_at: '2025-07-29T07:26:46.274Z',
    finished_at: '2025-07-29T07:26:46.409Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Megapolis-QR]'
    },
    hooks: [ 'bff3c7f6-f7d6-4290-bc40-78b20977d7d3' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:46.465Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '32ef275f-6f28-41af-b187-ac29b256bac6',
    name: 'teardown',
    result: 'pending',
    test_run_id: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:46.460Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:46.477Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:46Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Megapolis-QR] (–∑–∞ 0.25—Å)',
      level: 'INFO',
      test_run_uuid: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.491Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:46.476Z',
      uuid: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Megapolis-QR] (–∑–∞ 0.25—Å)',
      level: 'INFO',
      test_run_uuid: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.511Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '32ef275f-6f28-41af-b187-ac29b256bac6',
    name: 'teardown',
    result: 'passed',
    test_run_id: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:46.460Z',
    finished_at: '2025-07-29T07:26:46.503Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:46.565Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '9666d045-83bc-4d78-ac39-cb33e7a1f220',
    name: 'setup',
    result: 'pending',
    test_run_id: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:46.561Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:46.585Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:46Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      level: 'INFO',
      test_run_uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.606Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '9666d045-83bc-4d78-ac39-cb33e7a1f220',
    name: 'setup',
    result: 'passed',
    test_run_id: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:46.561Z',
    finished_at: '2025-07-29T07:26:46.601Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:46.658Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
    name: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    @pytest.mark.parametrize("device_name", ["samsung_s22", "pixel_6"])\n' +
        '    def test_qr_scanner_ui_elements_multidevice(self, driver, device_name):\n' +
        '        """Smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {device_name}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui_{device_name}")\n' +
        '\n' +
        '            logger.info(f"‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ {device_name}")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:46.630Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[samsung_s22]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:46.669Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:46Z [tests.test_b2b][INFO] - üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: QR Scanner UI - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.684Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:46Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.697Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:46Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.710Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:46Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.723Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:46Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.770Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.783Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      level: 'INFO',
      test_run_uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.795Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.808Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[samsung_s22] etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.826Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      name: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 2188,
      started_at: '2025-07-29T07:26:43.509Z',
      finished_at: '2025-07-29T07:26:45.697Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '0007cb08-a954-4d16-a3f7-73d25ac4525a',
      name: 'teardown',
      result: 'pending',
      test_run_id: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:45.745Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '0007cb08-a954-4d16-a3f7-73d25ac4525a',
      name: 'teardown',
      result: 'passed',
      test_run_id: '824b50ce-ee4b-4e99-afb9-a2aa57e409a9',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:45.745Z',
      finished_at: '2025-07-29T07:26:45.784Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '17f667cf-86dc-4f31-9ee1-56dd2dabb9bf',
      name: 'setup',
      result: 'pending',
      test_run_id: '9eb0ef2a-a988-4182-bf25-b7df1455283c',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:45.836Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '17f667cf-86dc-4f31-9ee1-56dd2dabb9bf',
      name: 'setup',
      result: 'passed',
      test_run_id: '9eb0ef2a-a988-4182-bf25-b7df1455283c',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:45.836Z',
      finished_at: '2025-07-29T07:26:45.895Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '9eb0ef2a-a988-4182-bf25-b7df1455283c',
      name: 'test_full_qr_payment_flow_universal[Universal-QR]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_universal[Universal-QR]',
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:45.920Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '9eb0ef2a-a988-4182-bf25-b7df1455283c',
      name: 'test_full_qr_payment_flow_universal[Universal-QR]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_universal[Universal-QR]',
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 129,
      started_at: '2025-07-29T07:26:45.920Z',
      finished_at: '2025-07-29T07:26:46.049Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '7bf23045-168e-4317-b165-c131342b0674',
      name: 'teardown',
      result: 'pending',
      test_run_id: '9eb0ef2a-a988-4182-bf25-b7df1455283c',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:46.098Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '7bf23045-168e-4317-b165-c131342b0674',
      name: 'teardown',
      result: 'passed',
      test_run_id: '9eb0ef2a-a988-4182-bf25-b7df1455283c',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:46.098Z',
      finished_at: '2025-07-29T07:26:46.138Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'bff3c7f6-f7d6-4290-bc40-78b20977d7d3',
      name: 'setup',
      result: 'pending',
      test_run_id: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:46.194Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'bff3c7f6-f7d6-4290-bc40-78b20977d7d3',
      name: 'setup',
      result: 'passed',
      test_run_id: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:46.194Z',
      finished_at: '2025-07-29T07:26:46.247Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513',
      name: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:46.274Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513',
      name: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 135,
      started_at: '2025-07-29T07:26:46.274Z',
      finished_at: '2025-07-29T07:26:46.409Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '32ef275f-6f28-41af-b187-ac29b256bac6',
      name: 'teardown',
      result: 'pending',
      test_run_id: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:46.460Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '32ef275f-6f28-41af-b187-ac29b256bac6',
      name: 'teardown',
      result: 'passed',
      test_run_id: '5f24ca6e-98b4-4b17-ba3a-71cc98fd9513',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:46.460Z',
      finished_at: '2025-07-29T07:26:46.503Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '9666d045-83bc-4d78-ac39-cb33e7a1f220',
      name: 'setup',
      result: 'pending',
      test_run_id: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:46.561Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '9666d045-83bc-4d78-ac39-cb33e7a1f220',
      name: 'setup',
      result: 'passed',
      test_run_id: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:46.561Z',
      finished_at: '2025-07-29T07:26:46.601Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
      name: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:46.630Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 11957:0
2025-07-29T07:26:46.828Z CLI info  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T07:26:46.839Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.894Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
    name: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    @pytest.mark.parametrize("device_name", ["samsung_s22", "pixel_6"])\n' +
        '    def test_qr_scanner_ui_elements_multidevice(self, driver, device_name):\n' +
        '        """Smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {device_name}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui_{device_name}")\n' +
        '\n' +
        '            logger.info(f"‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ {device_name}")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 221,
    started_at: '2025-07-29T07:26:46.630Z',
    finished_at: '2025-07-29T07:26:46.851Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[samsung_s22]'
    },
    hooks: [ '9666d045-83bc-4d78-ac39-cb33e7a1f220' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:46.910Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '409c7300-6603-4c85-86b1-ef4d4a6745c8',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:46.905Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:46.923Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:46Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[samsung_s22] (–∑–∞ 0.32—Å)',
      level: 'INFO',
      test_run_uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.937Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:46.922Z',
      uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[samsung_s22] (–∑–∞ 0.32—Å)',
      level: 'INFO',
      test_run_uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.937Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:46.668Z',
      uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
      kind: 'TEST_LOG',
      message: 'üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: QR Scanner UI - samsung_s22',
      level: 'INFO',
      test_run_uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.937Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:46.683Z',
      uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.938Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:46.696Z',
      uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.938Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:46.709Z',
      uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.938Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:46.721Z',
      uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260'
    }
  ]
} to 11957:0
2025-07-29T07:26:46.958Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '409c7300-6603-4c85-86b1-ef4d4a6745c8',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:46.905Z',
    finished_at: '2025-07-29T07:26:46.950Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:47.015Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'd44636f3-4278-4860-9a61-d02c77dd184f',
    name: 'setup',
    result: 'pending',
    test_run_id: '8a72b096-e029-40b5-850c-82eb624c8f81',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:47.011Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:47.036Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '8a72b096-e029-40b5-850c-82eb624c8f81',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:47Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_qr_scanner_ui_elements_multidevice[pixel_6]',
      level: 'INFO',
      test_run_uuid: '8a72b096-e029-40b5-850c-82eb624c8f81'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.057Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'd44636f3-4278-4860-9a61-d02c77dd184f',
    name: 'setup',
    result: 'passed',
    test_run_id: '8a72b096-e029-40b5-850c-82eb624c8f81',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:47.011Z',
    finished_at: '2025-07-29T07:26:47.052Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:47.114Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '8a72b096-e029-40b5-850c-82eb624c8f81',
    name: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    @pytest.mark.parametrize("device_name", ["samsung_s22", "pixel_6"])\n' +
        '    def test_qr_scanner_ui_elements_multidevice(self, driver, device_name):\n' +
        '        """Smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {device_name}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui_{device_name}")\n' +
        '\n' +
        '            logger.info(f"‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ {device_name}")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:47.082Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[pixel_6]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:47.127Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '8a72b096-e029-40b5-850c-82eb624c8f81',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:47Z [tests.test_b2b][INFO] - üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: QR Scanner UI - pixel_6',
      level: 'INFO',
      test_run_uuid: '8a72b096-e029-40b5-850c-82eb624c8f81'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.141Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '8a72b096-e029-40b5-850c-82eb624c8f81',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:47Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '8a72b096-e029-40b5-850c-82eb624c8f81'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.154Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '8a72b096-e029-40b5-850c-82eb624c8f81',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:47Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '8a72b096-e029-40b5-850c-82eb624c8f81'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.169Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '8a72b096-e029-40b5-850c-82eb624c8f81',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:47Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '8a72b096-e029-40b5-850c-82eb624c8f81'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.182Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '8a72b096-e029-40b5-850c-82eb624c8f81',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:47Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '8a72b096-e029-40b5-850c-82eb624c8f81'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.231Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '8a72b096-e029-40b5-850c-82eb624c8f81',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '8a72b096-e029-40b5-850c-82eb624c8f81'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.244Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '8a72b096-e029-40b5-850c-82eb624c8f81',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[pixel_6]',
      level: 'INFO',
      test_run_uuid: '8a72b096-e029-40b5-850c-82eb624c8f81'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.257Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '8a72b096-e029-40b5-850c-82eb624c8f81',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '8a72b096-e029-40b5-850c-82eb624c8f81'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.270Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '8a72b096-e029-40b5-850c-82eb624c8f81',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[pixel_6] etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '8a72b096-e029-40b5-850c-82eb624c8f81'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.303Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '8a72b096-e029-40b5-850c-82eb624c8f81',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '8a72b096-e029-40b5-850c-82eb624c8f81'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.361Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '8a72b096-e029-40b5-850c-82eb624c8f81',
    name: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    @pytest.mark.parametrize("device_name", ["samsung_s22", "pixel_6"])\n' +
        '    def test_qr_scanner_ui_elements_multidevice(self, driver, device_name):\n' +
        '        """Smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {device_name}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui_{device_name}")\n' +
        '\n' +
        '            logger.info(f"‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ {device_name}")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 233,
    started_at: '2025-07-29T07:26:47.082Z',
    finished_at: '2025-07-29T07:26:47.315Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[pixel_6]'
    },
    hooks: [ 'd44636f3-4278-4860-9a61-d02c77dd184f' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:47.378Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '83ccea96-ca82-4761-a678-1ed369834fe3',
    name: 'teardown',
    result: 'pending',
    test_run_id: '8a72b096-e029-40b5-850c-82eb624c8f81',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:47.373Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:47.391Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: '8a72b096-e029-40b5-850c-82eb624c8f81',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:47Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[pixel_6] (–∑–∞ 0.34—Å)',
      level: 'INFO',
      test_run_uuid: '8a72b096-e029-40b5-850c-82eb624c8f81'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.407Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:47.390Z',
      uuid: '8a72b096-e029-40b5-850c-82eb624c8f81',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[pixel_6] (–∑–∞ 0.34—Å)',
      level: 'INFO',
      test_run_uuid: '8a72b096-e029-40b5-850c-82eb624c8f81'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.407Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:47.126Z',
      uuid: '8a72b096-e029-40b5-850c-82eb624c8f81',
      kind: 'TEST_LOG',
      message: 'üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: QR Scanner UI - pixel_6',
      level: 'INFO',
      test_run_uuid: '8a72b096-e029-40b5-850c-82eb624c8f81'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.407Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:47.139Z',
      uuid: '8a72b096-e029-40b5-850c-82eb624c8f81',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '8a72b096-e029-40b5-850c-82eb624c8f81'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.407Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:47.153Z',
      uuid: '8a72b096-e029-40b5-850c-82eb624c8f81',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '8a72b096-e029-40b5-850c-82eb624c8f81'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.407Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:47.167Z',
      uuid: '8a72b096-e029-40b5-850c-82eb624c8f81',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '8a72b096-e029-40b5-850c-82eb624c8f81'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.407Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:47.181Z',
      uuid: '8a72b096-e029-40b5-850c-82eb624c8f81',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '8a72b096-e029-40b5-850c-82eb624c8f81'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.427Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '83ccea96-ca82-4761-a678-1ed369834fe3',
    name: 'teardown',
    result: 'passed',
    test_run_id: '8a72b096-e029-40b5-850c-82eb624c8f81',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:47.373Z',
    finished_at: '2025-07-29T07:26:47.420Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:47.488Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '591b8932-6442-49b7-b90c-d5274c18ac47',
    name: 'setup',
    result: 'pending',
    test_run_id: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_universal',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:47.484Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:47.509Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:47Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_qr_scanner_ui_elements_universal',
      level: 'INFO',
      test_run_uuid: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.529Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '591b8932-6442-49b7-b90c-d5274c18ac47',
    name: 'setup',
    result: 'passed',
    test_run_id: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_universal',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:47.484Z',
    finished_at: '2025-07-29T07:26:47.523Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:47.584Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600',
    name: 'test_qr_scanner_ui_elements_universal',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    def test_qr_scanner_ui_elements_universal(self, driver):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {driver.test_mode}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui")\n' +
        '\n' +
        '            logger.info("‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_universal',
    scope: 'test_qr_scanner_ui_elements_universal',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:47.554Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_universal'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:47.617Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.631Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_universal',
      level: 'INFO',
      test_run_uuid: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.645Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.658Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_universal etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.694Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.755Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600',
    name: 'test_qr_scanner_ui_elements_universal',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    def test_qr_scanner_ui_elements_universal(self, driver):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {driver.test_mode}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui")\n' +
        '\n' +
        '            logger.info("‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_universal',
    scope: 'test_qr_scanner_ui_elements_universal',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 154,
    started_at: '2025-07-29T07:26:47.554Z',
    finished_at: '2025-07-29T07:26:47.708Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_universal'
    },
    hooks: [ '591b8932-6442-49b7-b90c-d5274c18ac47' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:47.780Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'dba9ac5b-f38a-45c2-8ccf-c661ad18b7b6',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_universal',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:47.773Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:47.804Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.817Z',
      uuid: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:47Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_universal (–∑–∞ 0.28—Å)',
      level: 'INFO',
      test_run_uuid: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.834Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:47.801Z',
      uuid: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_universal (–∑–∞ 0.28—Å)',
      level: 'INFO',
      test_run_uuid: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600'
    }
  ]
} to 11957:0
2025-07-29T07:26:47.862Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'dba9ac5b-f38a-45c2-8ccf-c661ad18b7b6',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_universal',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:47.773Z',
    finished_at: '2025-07-29T07:26:47.853Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:48.279Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9'
    }
  ]
} to 11957:0
2025-07-29T07:26:48.293Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      level: 'INFO',
      test_run_uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9'
    }
  ]
} to 11957:0
2025-07-29T07:26:48.308Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9'
    }
  ]
} to 11957:0
2025-07-29T07:26:48.322Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Pixel] etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9'
    }
  ]
} to 11957:0
2025-07-29T07:26:48.359Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9'
    }
  ]
} to 11957:0
2025-07-29T07:26:48.422Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
    name: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 4238,
    started_at: '2025-07-29T07:26:44.135Z',
    finished_at: '2025-07-29T07:26:48.373Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Pixel]'
    },
    hooks: [ '19f9f58c-1924-4a9d-ac93-203d2b6c26b5' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:48.440Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'edc279c8-6278-4b53-9447-ace86512ec9c',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:48.435Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:48.455Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:48Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Pixel] (–∑–∞ 4.36—Å)',
      level: 'INFO',
      test_run_uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9'
    }
  ]
} to 11957:0
2025-07-29T07:26:48.471Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:48.454Z',
      uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Pixel] (–∑–∞ 4.36—Å)',
      level: 'INFO',
      test_run_uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9'
    }
  ]
} to 11957:0
2025-07-29T07:26:48.471Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:44.167Z',
      uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      kind: 'TEST_LOG',
      message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - pixel_6',
      level: 'INFO',
      test_run_uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9'
    }
  ]
} to 11957:0
2025-07-29T07:26:48.471Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:44.177Z',
      uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9'
    }
  ]
} to 11957:0
2025-07-29T07:26:48.471Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:44.187Z',
      uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9'
    }
  ]
} to 11957:0
2025-07-29T07:26:48.472Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:44.197Z',
      uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9'
    }
  ]
} to 11957:0
2025-07-29T07:26:48.472Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:44.208Z',
      uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9'
    }
  ]
} to 11957:0
2025-07-29T07:26:48.472Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:44.366Z',
      uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      kind: 'TEST_LOG',
      message: 'post_data: Sending data to testhub for events HookRunStarted',
      level: 'DEBUG',
      test_run_uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9'
    }
  ]
} to 11957:0
2025-07-29T07:26:48.472Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:44.367Z',
      uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      kind: 'TEST_LOG',
      message: 'Starting new HTTPS connection (1): collector-observability.browserstack.com:443',
      level: 'DEBUG',
      test_run_uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9'
    }
  ]
} to 11957:0
2025-07-29T07:26:48.472Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:45.048Z',
      uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      kind: 'TEST_LOG',
      message: 'https://collector-observability.browserstack.com:443 "POST /api/v1/batch HTTP/1.1" 401 None',
      level: 'DEBUG',
      test_run_uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9'
    }
  ]
} to 11957:0
2025-07-29T07:26:48.493Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'edc279c8-6278-4b53-9447-ace86512ec9c',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:48.435Z',
    finished_at: '2025-07-29T07:26:48.485Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:48.558Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '9fbb9381-164f-46bc-8ca1-710d2bfe3313',
    name: 'setup',
    result: 'pending',
    test_run_id: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:48.554Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:48.581Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:48Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_universal[Universal-QR]',
      level: 'INFO',
      test_run_uuid: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44'
    }
  ]
} to 11957:0
2025-07-29T07:26:48.624Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '9fbb9381-164f-46bc-8ca1-710d2bfe3313',
    name: 'setup',
    result: 'passed',
    test_run_id: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:48.554Z',
    finished_at: '2025-07-29T07:26:48.618Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:48.686Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44',
    name: 'test_full_qr_payment_flow_universal[Universal-QR]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image",\n' +
        '        ["distrA", "distrB"],\n' +
        '        indirect=True,\n' +
        '        ids=["Universal-QR", "Megapolis-QR"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_universal(self, driver, qr_image):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ BrowserStack)"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {driver.test_mode}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_universal[Universal-QR]',
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:48.651Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Universal-QR]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:48.723Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44'
    }
  ]
} to 11957:0
2025-07-29T07:26:48.738Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Universal-QR]',
      level: 'INFO',
      test_run_uuid: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44'
    }
  ]
} to 11957:0
2025-07-29T07:26:48.753Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44'
    }
  ]
} to 11957:0
2025-07-29T07:26:48.768Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Universal-QR] etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44'
    }
  ]
} to 11957:0
2025-07-29T07:26:48.805Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44'
    }
  ]
} to 11957:0
2025-07-29T07:26:48.827Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
      name: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 221,
      started_at: '2025-07-29T07:26:46.630Z',
      finished_at: '2025-07-29T07:26:46.851Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '409c7300-6603-4c85-86b1-ef4d4a6745c8',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:46.905Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '409c7300-6603-4c85-86b1-ef4d4a6745c8',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'b67309d6-cd0b-466f-a119-ca31b61b5260',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:46.905Z',
      finished_at: '2025-07-29T07:26:46.950Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'd44636f3-4278-4860-9a61-d02c77dd184f',
      name: 'setup',
      result: 'pending',
      test_run_id: '8a72b096-e029-40b5-850c-82eb624c8f81',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:47.011Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'd44636f3-4278-4860-9a61-d02c77dd184f',
      name: 'setup',
      result: 'passed',
      test_run_id: '8a72b096-e029-40b5-850c-82eb624c8f81',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:47.011Z',
      finished_at: '2025-07-29T07:26:47.052Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '8a72b096-e029-40b5-850c-82eb624c8f81',
      name: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:47.082Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '8a72b096-e029-40b5-850c-82eb624c8f81',
      name: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 233,
      started_at: '2025-07-29T07:26:47.082Z',
      finished_at: '2025-07-29T07:26:47.315Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '83ccea96-ca82-4761-a678-1ed369834fe3',
      name: 'teardown',
      result: 'pending',
      test_run_id: '8a72b096-e029-40b5-850c-82eb624c8f81',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:47.373Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '83ccea96-ca82-4761-a678-1ed369834fe3',
      name: 'teardown',
      result: 'passed',
      test_run_id: '8a72b096-e029-40b5-850c-82eb624c8f81',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:47.373Z',
      finished_at: '2025-07-29T07:26:47.420Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '591b8932-6442-49b7-b90c-d5274c18ac47',
      name: 'setup',
      result: 'pending',
      test_run_id: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_universal',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:47.484Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '591b8932-6442-49b7-b90c-d5274c18ac47',
      name: 'setup',
      result: 'passed',
      test_run_id: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_universal',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:47.484Z',
      finished_at: '2025-07-29T07:26:47.523Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600',
      name: 'test_qr_scanner_ui_elements_universal',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_universal',
      scope: 'test_qr_scanner_ui_elements_universal',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:47.554Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600',
      name: 'test_qr_scanner_ui_elements_universal',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_universal',
      scope: 'test_qr_scanner_ui_elements_universal',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 154,
      started_at: '2025-07-29T07:26:47.554Z',
      finished_at: '2025-07-29T07:26:47.708Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'dba9ac5b-f38a-45c2-8ccf-c661ad18b7b6',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_universal',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:47.773Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'dba9ac5b-f38a-45c2-8ccf-c661ad18b7b6',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'cafa8aaa-670a-488c-82e7-7fde9c4cb600',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_universal',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:47.773Z',
      finished_at: '2025-07-29T07:26:47.853Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      name: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 4238,
      started_at: '2025-07-29T07:26:44.135Z',
      finished_at: '2025-07-29T07:26:48.373Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'edc279c8-6278-4b53-9447-ace86512ec9c',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:48.435Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'edc279c8-6278-4b53-9447-ace86512ec9c',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'a2e035eb-0a38-4e93-aaf7-ce537053d9d9',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:48.435Z',
      finished_at: '2025-07-29T07:26:48.485Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '9fbb9381-164f-46bc-8ca1-710d2bfe3313',
      name: 'setup',
      result: 'pending',
      test_run_id: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:48.554Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '9fbb9381-164f-46bc-8ca1-710d2bfe3313',
      name: 'setup',
      result: 'passed',
      test_run_id: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:48.554Z',
      finished_at: '2025-07-29T07:26:48.618Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44',
      name: 'test_full_qr_payment_flow_universal[Universal-QR]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_universal[Universal-QR]',
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:48.651Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 11957:0
2025-07-29T07:26:48.828Z CLI info  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T07:26:48.870Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44',
    name: 'test_full_qr_payment_flow_universal[Universal-QR]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image",\n' +
        '        ["distrA", "distrB"],\n' +
        '        indirect=True,\n' +
        '        ids=["Universal-QR", "Megapolis-QR"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_universal(self, driver, qr_image):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ BrowserStack)"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {driver.test_mode}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_universal[Universal-QR]',
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 168,
    started_at: '2025-07-29T07:26:48.651Z',
    finished_at: '2025-07-29T07:26:48.819Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Universal-QR]'
    },
    hooks: [ '9fbb9381-164f-46bc-8ca1-710d2bfe3313' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:48.893Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '0337ddfd-687a-4f14-83a9-9928dea88ff0',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:48.885Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:48.911Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:48Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Universal-QR] (–∑–∞ 0.31—Å)',
      level: 'INFO',
      test_run_uuid: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44'
    }
  ]
} to 11957:0
2025-07-29T07:26:48.931Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:48.910Z',
      uuid: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Universal-QR] (–∑–∞ 0.31—Å)',
      level: 'INFO',
      test_run_uuid: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44'
    }
  ]
} to 11957:0
2025-07-29T07:26:48.960Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '0337ddfd-687a-4f14-83a9-9928dea88ff0',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:48.885Z',
    finished_at: '2025-07-29T07:26:48.950Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:49.032Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'e624a756-45a5-4261-b602-e89d7f4da08a',
    name: 'setup',
    result: 'pending',
    test_run_id: '601951fb-65dd-4eeb-86a2-41466d39f771',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:49.027Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:49.055Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '601951fb-65dd-4eeb-86a2-41466d39f771',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:49Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_universal[Megapolis-QR]',
      level: 'INFO',
      test_run_uuid: '601951fb-65dd-4eeb-86a2-41466d39f771'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.103Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'e624a756-45a5-4261-b602-e89d7f4da08a',
    name: 'setup',
    result: 'passed',
    test_run_id: '601951fb-65dd-4eeb-86a2-41466d39f771',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:49.027Z',
    finished_at: '2025-07-29T07:26:49.097Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:49.168Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '601951fb-65dd-4eeb-86a2-41466d39f771',
    name: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image",\n' +
        '        ["distrA", "distrB"],\n' +
        '        indirect=True,\n' +
        '        ids=["Universal-QR", "Megapolis-QR"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_universal(self, driver, qr_image):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ BrowserStack)"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {driver.test_mode}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:49.132Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Megapolis-QR]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:49.208Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '601951fb-65dd-4eeb-86a2-41466d39f771',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '601951fb-65dd-4eeb-86a2-41466d39f771'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.224Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '601951fb-65dd-4eeb-86a2-41466d39f771',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Megapolis-QR]',
      level: 'INFO',
      test_run_uuid: '601951fb-65dd-4eeb-86a2-41466d39f771'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.240Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '601951fb-65dd-4eeb-86a2-41466d39f771',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '601951fb-65dd-4eeb-86a2-41466d39f771'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.255Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '601951fb-65dd-4eeb-86a2-41466d39f771',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Megapolis-QR] etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '601951fb-65dd-4eeb-86a2-41466d39f771'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.292Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '601951fb-65dd-4eeb-86a2-41466d39f771',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '601951fb-65dd-4eeb-86a2-41466d39f771'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.360Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '601951fb-65dd-4eeb-86a2-41466d39f771',
    name: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image",\n' +
        '        ["distrA", "distrB"],\n' +
        '        indirect=True,\n' +
        '        ids=["Universal-QR", "Megapolis-QR"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_universal(self, driver, qr_image):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ BrowserStack)"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {driver.test_mode}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 175,
    started_at: '2025-07-29T07:26:49.132Z',
    finished_at: '2025-07-29T07:26:49.307Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Megapolis-QR]'
    },
    hooks: [ 'e624a756-45a5-4261-b602-e89d7f4da08a' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:49.380Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '168dc73e-9bdf-4b70-93fe-12db516ebf0e',
    name: 'teardown',
    result: 'pending',
    test_run_id: '601951fb-65dd-4eeb-86a2-41466d39f771',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:49.374Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:49.395Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '601951fb-65dd-4eeb-86a2-41466d39f771',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:49Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Megapolis-QR] (–∑–∞ 0.32—Å)',
      level: 'INFO',
      test_run_uuid: '601951fb-65dd-4eeb-86a2-41466d39f771'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.411Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:49.393Z',
      uuid: '601951fb-65dd-4eeb-86a2-41466d39f771',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Megapolis-QR] (–∑–∞ 0.32—Å)',
      level: 'INFO',
      test_run_uuid: '601951fb-65dd-4eeb-86a2-41466d39f771'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.435Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '168dc73e-9bdf-4b70-93fe-12db516ebf0e',
    name: 'teardown',
    result: 'passed',
    test_run_id: '601951fb-65dd-4eeb-86a2-41466d39f771',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:49.374Z',
    finished_at: '2025-07-29T07:26:49.427Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:49.499Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'db171897-6cd7-453c-834e-83dc026cf0d3',
    name: 'setup',
    result: 'pending',
    test_run_id: '495afc9a-d443-424d-b978-4b0cf48eaa13',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:49.495Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:49.520Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:49Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      level: 'INFO',
      test_run_uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.544Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'db171897-6cd7-453c-834e-83dc026cf0d3',
    name: 'setup',
    result: 'passed',
    test_run_id: '495afc9a-d443-424d-b978-4b0cf48eaa13',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:49.495Z',
    finished_at: '2025-07-29T07:26:49.538Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:49.610Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13',
    name: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    @pytest.mark.parametrize("device_name", ["samsung_s22", "pixel_6"])\n' +
        '    def test_qr_scanner_ui_elements_multidevice(self, driver, device_name):\n' +
        '        """Smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {device_name}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui_{device_name}")\n' +
        '\n' +
        '            logger.info(f"‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ {device_name}")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:49.574Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[samsung_s22]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:49.625Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:49Z [tests.test_b2b][INFO] - üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: QR Scanner UI - samsung_s22',
      level: 'INFO',
      test_run_uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.643Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:49Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.661Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:49Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.677Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:49Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.695Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:49Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.749Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.777Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.791Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      level: 'INFO',
      test_run_uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.805Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.819Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Pixel] etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.859Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.928Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
    name: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image,device_name",\n' +
        '        [\n' +
        '            ("distrA", "samsung_s22"),\n' +
        '            ("distrB", "samsung_s22"),\n' +
        '            ("distrA", "pixel_6"),\n' +
        '            ("distrB", "pixel_6"),\n' +
        '        ],\n' +
        '        indirect=["qr_image"],\n' +
        '        ids=["Universal-Samsung", "Megapolis-Samsung", "Universal-Pixel", "Megapolis-Pixel"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_multidevice(self, driver, qr_image, device_name):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {device_name}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened_{device_name}")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result_{device_name}")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked_{device_name}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed_{device_name}")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success_{device_name}")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error_{device_name}")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout_{device_name}")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error_{device_name}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 5232,
    started_at: '2025-07-29T07:26:44.642Z',
    finished_at: '2025-07-29T07:26:49.874Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_multidevice[Megapolis-Pixel]'
    },
    hooks: [ '39815cd9-54f4-4fce-ac3d-db0f5f66d4b4' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:49.947Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '3f823e4b-1957-4d10-be73-73a56d2692fa',
    name: 'teardown',
    result: 'pending',
    test_run_id: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:49.942Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:49.962Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:49Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Pixel] (–∑–∞ 5.36—Å)',
      level: 'INFO',
      test_run_uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.980Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:49.960Z',
      uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_multidevice[Megapolis-Pixel] (–∑–∞ 5.36—Å)',
      level: 'INFO',
      test_run_uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.980Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:44.674Z',
      uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      kind: 'TEST_LOG',
      message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: QR Payment Flow - pixel_6',
      level: 'INFO',
      test_run_uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.980Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:44.685Z',
      uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.980Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:44.697Z',
      uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.980Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:44.709Z',
      uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.980Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:44.721Z',
      uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.980Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:44.809Z',
      uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      kind: 'TEST_LOG',
      message: 'post_data: Sending data to testhub for events HookRunStarted, HookRunStarted',
      level: 'DEBUG',
      test_run_uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.980Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:44.810Z',
      uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      kind: 'TEST_LOG',
      message: 'Starting new HTTPS connection (1): collector-observability.browserstack.com:443',
      level: 'DEBUG',
      test_run_uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936'
    }
  ]
} to 11957:0
2025-07-29T07:26:49.980Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:45.465Z',
      uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      kind: 'TEST_LOG',
      message: 'https://collector-observability.browserstack.com:443 "POST /api/v1/batch HTTP/1.1" 401 None',
      level: 'DEBUG',
      test_run_uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936'
    }
  ]
} to 11957:0
2025-07-29T07:26:50.003Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '3f823e4b-1957-4d10-be73-73a56d2692fa',
    name: 'teardown',
    result: 'passed',
    test_run_id: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:49.942Z',
    finished_at: '2025-07-29T07:26:49.996Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:50.071Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '4b355016-c80d-475a-8c18-38ab15540d5d',
    name: 'setup',
    result: 'pending',
    test_run_id: '1c0157bf-a7ea-40ac-971d-1b4371ce9648',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:50.067Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:50.095Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '1c0157bf-a7ea-40ac-971d-1b4371ce9648',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:50Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_universal[Universal-QR]',
      level: 'INFO',
      test_run_uuid: '1c0157bf-a7ea-40ac-971d-1b4371ce9648'
    }
  ]
} to 11957:0
2025-07-29T07:26:50.141Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '4b355016-c80d-475a-8c18-38ab15540d5d',
    name: 'setup',
    result: 'passed',
    test_run_id: '1c0157bf-a7ea-40ac-971d-1b4371ce9648',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:50.067Z',
    finished_at: '2025-07-29T07:26:50.135Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:50.208Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '1c0157bf-a7ea-40ac-971d-1b4371ce9648',
    name: 'test_full_qr_payment_flow_universal[Universal-QR]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image",\n' +
        '        ["distrA", "distrB"],\n' +
        '        indirect=True,\n' +
        '        ids=["Universal-QR", "Megapolis-QR"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_universal(self, driver, qr_image):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ BrowserStack)"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {driver.test_mode}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_universal[Universal-QR]',
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:50.172Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Universal-QR]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:50.247Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '1c0157bf-a7ea-40ac-971d-1b4371ce9648',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '1c0157bf-a7ea-40ac-971d-1b4371ce9648'
    }
  ]
} to 11957:0
2025-07-29T07:26:50.262Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '1c0157bf-a7ea-40ac-971d-1b4371ce9648',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Universal-QR]',
      level: 'INFO',
      test_run_uuid: '1c0157bf-a7ea-40ac-971d-1b4371ce9648'
    }
  ]
} to 11957:0
2025-07-29T07:26:50.278Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '1c0157bf-a7ea-40ac-971d-1b4371ce9648',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '1c0157bf-a7ea-40ac-971d-1b4371ce9648'
    }
  ]
} to 11957:0
2025-07-29T07:26:50.294Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '1c0157bf-a7ea-40ac-971d-1b4371ce9648',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Universal-QR] etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '1c0157bf-a7ea-40ac-971d-1b4371ce9648'
    }
  ]
} to 11957:0
2025-07-29T07:26:50.334Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '1c0157bf-a7ea-40ac-971d-1b4371ce9648',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '1c0157bf-a7ea-40ac-971d-1b4371ce9648'
    }
  ]
} to 11957:0
2025-07-29T07:26:50.407Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '1c0157bf-a7ea-40ac-971d-1b4371ce9648',
    name: 'test_full_qr_payment_flow_universal[Universal-QR]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image",\n' +
        '        ["distrA", "distrB"],\n' +
        '        indirect=True,\n' +
        '        ids=["Universal-QR", "Megapolis-QR"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_universal(self, driver, qr_image):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ BrowserStack)"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {driver.test_mode}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_universal[Universal-QR]',
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 179,
    started_at: '2025-07-29T07:26:50.172Z',
    finished_at: '2025-07-29T07:26:50.351Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Universal-QR]'
    },
    hooks: [ '4b355016-c80d-475a-8c18-38ab15540d5d' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:50.426Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '03815ee7-1dea-4b83-9cee-eac498c64e36',
    name: 'teardown',
    result: 'pending',
    test_run_id: '1c0157bf-a7ea-40ac-971d-1b4371ce9648',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:50.422Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:50.443Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '1c0157bf-a7ea-40ac-971d-1b4371ce9648',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:50Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Universal-QR] (–∑–∞ 0.33—Å)',
      level: 'INFO',
      test_run_uuid: '1c0157bf-a7ea-40ac-971d-1b4371ce9648'
    }
  ]
} to 11957:0
2025-07-29T07:26:50.462Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:50.442Z',
      uuid: '1c0157bf-a7ea-40ac-971d-1b4371ce9648',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Universal-QR] (–∑–∞ 0.33—Å)',
      level: 'INFO',
      test_run_uuid: '1c0157bf-a7ea-40ac-971d-1b4371ce9648'
    }
  ]
} to 11957:0
2025-07-29T07:26:50.486Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '03815ee7-1dea-4b83-9cee-eac498c64e36',
    name: 'teardown',
    result: 'passed',
    test_run_id: '1c0157bf-a7ea-40ac-971d-1b4371ce9648',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:50.422Z',
    finished_at: '2025-07-29T07:26:50.479Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:50.558Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '63857697-cdc4-4b53-8aa2-7bb0a3e5a9fd',
    name: 'setup',
    result: 'pending',
    test_run_id: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:50.554Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:50.580Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:50Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_full_qr_payment_flow_universal[Megapolis-QR]',
      level: 'INFO',
      test_run_uuid: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:50.622Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '63857697-cdc4-4b53-8aa2-7bb0a3e5a9fd',
    name: 'setup',
    result: 'passed',
    test_run_id: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:50.554Z',
    finished_at: '2025-07-29T07:26:50.617Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:50.689Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f',
    name: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image",\n' +
        '        ["distrA", "distrB"],\n' +
        '        indirect=True,\n' +
        '        ids=["Universal-QR", "Megapolis-QR"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_universal(self, driver, qr_image):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ BrowserStack)"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {driver.test_mode}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:50.653Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Megapolis-QR]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:50.728Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:50.744Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Megapolis-QR]',
      level: 'INFO',
      test_run_uuid: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:50.760Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:50.775Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Megapolis-QR] etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:50.815Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:50.827Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44',
      name: 'test_full_qr_payment_flow_universal[Universal-QR]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_universal[Universal-QR]',
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 168,
      started_at: '2025-07-29T07:26:48.651Z',
      finished_at: '2025-07-29T07:26:48.819Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '0337ddfd-687a-4f14-83a9-9928dea88ff0',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:48.885Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '0337ddfd-687a-4f14-83a9-9928dea88ff0',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'e50b2d17-ae14-4bb6-bf39-2e6069451e44',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:48.885Z',
      finished_at: '2025-07-29T07:26:48.950Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'e624a756-45a5-4261-b602-e89d7f4da08a',
      name: 'setup',
      result: 'pending',
      test_run_id: '601951fb-65dd-4eeb-86a2-41466d39f771',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:49.027Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'e624a756-45a5-4261-b602-e89d7f4da08a',
      name: 'setup',
      result: 'passed',
      test_run_id: '601951fb-65dd-4eeb-86a2-41466d39f771',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:49.027Z',
      finished_at: '2025-07-29T07:26:49.097Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '601951fb-65dd-4eeb-86a2-41466d39f771',
      name: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:49.132Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '601951fb-65dd-4eeb-86a2-41466d39f771',
      name: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 175,
      started_at: '2025-07-29T07:26:49.132Z',
      finished_at: '2025-07-29T07:26:49.307Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '168dc73e-9bdf-4b70-93fe-12db516ebf0e',
      name: 'teardown',
      result: 'pending',
      test_run_id: '601951fb-65dd-4eeb-86a2-41466d39f771',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:49.374Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '168dc73e-9bdf-4b70-93fe-12db516ebf0e',
      name: 'teardown',
      result: 'passed',
      test_run_id: '601951fb-65dd-4eeb-86a2-41466d39f771',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:49.374Z',
      finished_at: '2025-07-29T07:26:49.427Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'db171897-6cd7-453c-834e-83dc026cf0d3',
      name: 'setup',
      result: 'pending',
      test_run_id: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:49.495Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'db171897-6cd7-453c-834e-83dc026cf0d3',
      name: 'setup',
      result: 'passed',
      test_run_id: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:49.495Z',
      finished_at: '2025-07-29T07:26:49.538Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      name: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:49.574Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      name: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 5232,
      started_at: '2025-07-29T07:26:44.642Z',
      finished_at: '2025-07-29T07:26:49.874Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '3f823e4b-1957-4d10-be73-73a56d2692fa',
      name: 'teardown',
      result: 'pending',
      test_run_id: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:49.942Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '3f823e4b-1957-4d10-be73-73a56d2692fa',
      name: 'teardown',
      result: 'passed',
      test_run_id: '1a9f9dfb-645c-404a-8a35-0a54a41db936',
      body: [Object],
      scope: 'test_full_qr_payment_flow_multidevice[Megapolis-Pixel]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:49.942Z',
      finished_at: '2025-07-29T07:26:49.996Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '4b355016-c80d-475a-8c18-38ab15540d5d',
      name: 'setup',
      result: 'pending',
      test_run_id: '1c0157bf-a7ea-40ac-971d-1b4371ce9648',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:50.067Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '4b355016-c80d-475a-8c18-38ab15540d5d',
      name: 'setup',
      result: 'passed',
      test_run_id: '1c0157bf-a7ea-40ac-971d-1b4371ce9648',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:50.067Z',
      finished_at: '2025-07-29T07:26:50.135Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '1c0157bf-a7ea-40ac-971d-1b4371ce9648',
      name: 'test_full_qr_payment_flow_universal[Universal-QR]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_universal[Universal-QR]',
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:50.172Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '1c0157bf-a7ea-40ac-971d-1b4371ce9648',
      name: 'test_full_qr_payment_flow_universal[Universal-QR]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_universal[Universal-QR]',
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 179,
      started_at: '2025-07-29T07:26:50.172Z',
      finished_at: '2025-07-29T07:26:50.351Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '03815ee7-1dea-4b83-9cee-eac498c64e36',
      name: 'teardown',
      result: 'pending',
      test_run_id: '1c0157bf-a7ea-40ac-971d-1b4371ce9648',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:50.422Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '03815ee7-1dea-4b83-9cee-eac498c64e36',
      name: 'teardown',
      result: 'passed',
      test_run_id: '1c0157bf-a7ea-40ac-971d-1b4371ce9648',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Universal-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:50.422Z',
      finished_at: '2025-07-29T07:26:50.479Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '63857697-cdc4-4b53-8aa2-7bb0a3e5a9fd',
      name: 'setup',
      result: 'pending',
      test_run_id: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:50.554Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '63857697-cdc4-4b53-8aa2-7bb0a3e5a9fd',
      name: 'setup',
      result: 'passed',
      test_run_id: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:50.554Z',
      finished_at: '2025-07-29T07:26:50.617Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f',
      name: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:50.653Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 11957:0
2025-07-29T07:26:50.829Z CLI info  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T07:26:50.889Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f',
    name: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.parametrize(\n' +
        '        "qr_image",\n' +
        '        ["distrA", "distrB"],\n' +
        '        indirect=True,\n' +
        '        ids=["Universal-QR", "Megapolis-QR"]\n' +
        '    )\n' +
        '    def test_full_qr_payment_flow_universal(self, driver, qr_image):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç QR –ø–ª–∞—Ç–µ–∂–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ BrowserStack)"""\n' +
        '\n' +
        '        test_name = f"QR Payment Flow - {driver.test_mode}"\n' +
        '        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            confirmation = PaymentConfirmationPage(driver)\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ QR —Å–∫–∞–Ω–µ—Ä–∞\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '            scanner.allow_camera_permission()\n' +
        '\n' +
        '            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏ –≤—ã–±–æ—Ä QR\n' +
        '            scanner.open_gallery()\n' +
        '            wait_and_screenshot(driver, f"gallery_opened")\n' +
        '\n' +
        '            assert scanner.select_qr_from_gallery(qr_image), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"\n' +
        '            wait_and_screenshot(driver, f"qr_image_selected")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n' +
        '            assert scanner.wait_for_qr_scan_result(), \\\n' +
        '                "QR –∫–æ–¥ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω"\n' +
        '            wait_and_screenshot(driver, f"qr_scan_result")\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.is_payment_form_displayed(), \\\n' +
        '                "–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"\n' +
        '\n' +
        '            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ\n' +
        '            amount = scanner.get_payment_amount()\n' +
        '            recipient = scanner.get_recipient_info()\n' +
        '\n' +
        '            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ - –°—É–º–º–∞: {amount}, –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}")\n' +
        '\n' +
        '            # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã\n' +
        '            assert scanner.click_pay_button(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç—ã"\n' +
        '            wait_and_screenshot(driver, f"payment_button_clicked")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞\n' +
        '            confirmation.wait_for_confirmation_page()\n' +
        '            payment_info = confirmation.get_payment_info()\n' +
        '\n' +
        '            logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {payment_info}")\n' +
        '\n' +
        '            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n' +
        '            assert confirmation.confirm_payment(), \\\n' +
        '                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂"\n' +
        '            wait_and_screenshot(driver, f"payment_confirmed")\n' +
        '\n' +
        '            # –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n' +
        '            result = confirmation.wait_for_payment_result(timeout=30)\n' +
        '\n' +
        '            if result == "success":\n' +
        '                transaction_id = confirmation.get_transaction_id()\n' +
        '                logger.info(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω! ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction_id}")\n' +
        '                wait_and_screenshot(driver, f"payment_success")\n' +
        '\n' +
        '            elif result == "error":\n' +
        '                error_msg = confirmation.get_error_message()\n' +
        '                logger.error(f"‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '                wait_and_screenshot(driver, f"payment_error")\n' +
        '\n' +
        '                pytest.fail(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω: {error_msg}")\n' +
        '\n' +
        '            else:  # timeout\n' +
        '                wait_and_screenshot(driver, f"payment_timeout")\n' +
        '\n' +
        '                pytest.fail("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏\n' +
        '            wait_and_screenshot(driver, f"test_error")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 179,
    started_at: '2025-07-29T07:26:50.653Z',
    finished_at: '2025-07-29T07:26:50.832Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_full_qr_payment_flow_universal[Megapolis-QR]'
    },
    hooks: [ '63857697-cdc4-4b53-8aa2-7bb0a3e5a9fd' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:50.907Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'c5811c3c-f801-4c12-bc04-6ab7bc5a0a16',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:50.903Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:50.923Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:50Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Megapolis-QR] (–∑–∞ 0.32—Å)',
      level: 'INFO',
      test_run_uuid: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:50.940Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:50.922Z',
      uuid: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_full_qr_payment_flow_universal[Megapolis-QR] (–∑–∞ 0.32—Å)',
      level: 'INFO',
      test_run_uuid: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f'
    }
  ]
} to 11957:0
2025-07-29T07:26:50.963Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'c5811c3c-f801-4c12-bc04-6ab7bc5a0a16',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f',
    body: { lang: 'python', code: null },
    scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:50.903Z',
    finished_at: '2025-07-29T07:26:50.956Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:51.032Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '1fb0ec8c-6aea-458e-995b-2be355826933',
    name: 'setup',
    result: 'pending',
    test_run_id: '904ac5fe-c900-48b3-b966-ab434c353855',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:51.027Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:51.058Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '904ac5fe-c900-48b3-b966-ab434c353855',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:51Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      level: 'INFO',
      test_run_uuid: '904ac5fe-c900-48b3-b966-ab434c353855'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.084Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '1fb0ec8c-6aea-458e-995b-2be355826933',
    name: 'setup',
    result: 'passed',
    test_run_id: '904ac5fe-c900-48b3-b966-ab434c353855',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:51.027Z',
    finished_at: '2025-07-29T07:26:51.079Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:51.159Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '904ac5fe-c900-48b3-b966-ab434c353855',
    name: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    @pytest.mark.parametrize("device_name", ["samsung_s22", "pixel_6"])\n' +
        '    def test_qr_scanner_ui_elements_multidevice(self, driver, device_name):\n' +
        '        """Smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {device_name}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui_{device_name}")\n' +
        '\n' +
        '            logger.info(f"‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ {device_name}")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:51.118Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[samsung_s22]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:51.177Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '904ac5fe-c900-48b3-b966-ab434c353855',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:51Z [tests.test_b2b][INFO] - üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: QR Scanner UI - samsung_s22',
      level: 'INFO',
      test_run_uuid: '904ac5fe-c900-48b3-b966-ab434c353855'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.195Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '904ac5fe-c900-48b3-b966-ab434c353855',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:51Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '904ac5fe-c900-48b3-b966-ab434c353855'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.214Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '904ac5fe-c900-48b3-b966-ab434c353855',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:51Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '904ac5fe-c900-48b3-b966-ab434c353855'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.234Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '904ac5fe-c900-48b3-b966-ab434c353855',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:51Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '904ac5fe-c900-48b3-b966-ab434c353855'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.253Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '904ac5fe-c900-48b3-b966-ab434c353855',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:51Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '904ac5fe-c900-48b3-b966-ab434c353855'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.313Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '904ac5fe-c900-48b3-b966-ab434c353855',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '904ac5fe-c900-48b3-b966-ab434c353855'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.331Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '904ac5fe-c900-48b3-b966-ab434c353855',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      level: 'INFO',
      test_run_uuid: '904ac5fe-c900-48b3-b966-ab434c353855'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.349Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '904ac5fe-c900-48b3-b966-ab434c353855',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '904ac5fe-c900-48b3-b966-ab434c353855'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.367Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '904ac5fe-c900-48b3-b966-ab434c353855',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[samsung_s22] etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '904ac5fe-c900-48b3-b966-ab434c353855'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.410Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '904ac5fe-c900-48b3-b966-ab434c353855',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '904ac5fe-c900-48b3-b966-ab434c353855'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.489Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '904ac5fe-c900-48b3-b966-ab434c353855',
    name: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    @pytest.mark.parametrize("device_name", ["samsung_s22", "pixel_6"])\n' +
        '    def test_qr_scanner_ui_elements_multidevice(self, driver, device_name):\n' +
        '        """Smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {device_name}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui_{device_name}")\n' +
        '\n' +
        '            logger.info(f"‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ {device_name}")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 309,
    started_at: '2025-07-29T07:26:51.118Z',
    finished_at: '2025-07-29T07:26:51.427Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[samsung_s22]'
    },
    hooks: [ '1fb0ec8c-6aea-458e-995b-2be355826933' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:51.510Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'cb244e2a-5b3b-46b3-9e4c-00d9fe6320b9',
    name: 'teardown',
    result: 'pending',
    test_run_id: '904ac5fe-c900-48b3-b966-ab434c353855',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:51.505Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:51.527Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: '904ac5fe-c900-48b3-b966-ab434c353855',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:51Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[samsung_s22] (–∑–∞ 0.45—Å)',
      level: 'INFO',
      test_run_uuid: '904ac5fe-c900-48b3-b966-ab434c353855'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.548Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:51.476Z',
      uuid: '904ac5fe-c900-48b3-b966-ab434c353855',
      kind: 'TEST_LOG',
      message: 'post_data: Sending data to testhub for events HookRunStarted, HookRunStarted, HookRunStarted',
      level: 'DEBUG',
      test_run_uuid: '904ac5fe-c900-48b3-b966-ab434c353855'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.548Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:51.483Z',
      uuid: '904ac5fe-c900-48b3-b966-ab434c353855',
      kind: 'TEST_LOG',
      message: 'Starting new HTTPS connection (1): collector-observability.browserstack.com:443',
      level: 'DEBUG',
      test_run_uuid: '904ac5fe-c900-48b3-b966-ab434c353855'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.548Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:51.526Z',
      uuid: '904ac5fe-c900-48b3-b966-ab434c353855',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[samsung_s22] (–∑–∞ 0.45—Å)',
      level: 'INFO',
      test_run_uuid: '904ac5fe-c900-48b3-b966-ab434c353855'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.548Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:51.176Z',
      uuid: '904ac5fe-c900-48b3-b966-ab434c353855',
      kind: 'TEST_LOG',
      message: 'üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: QR Scanner UI - samsung_s22',
      level: 'INFO',
      test_run_uuid: '904ac5fe-c900-48b3-b966-ab434c353855'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.548Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:51.194Z',
      uuid: '904ac5fe-c900-48b3-b966-ab434c353855',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '904ac5fe-c900-48b3-b966-ab434c353855'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.548Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:51.213Z',
      uuid: '904ac5fe-c900-48b3-b966-ab434c353855',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '904ac5fe-c900-48b3-b966-ab434c353855'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.548Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:51.233Z',
      uuid: '904ac5fe-c900-48b3-b966-ab434c353855',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '904ac5fe-c900-48b3-b966-ab434c353855'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.548Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:51.252Z',
      uuid: '904ac5fe-c900-48b3-b966-ab434c353855',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '904ac5fe-c900-48b3-b966-ab434c353855'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.573Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: 'cb244e2a-5b3b-46b3-9e4c-00d9fe6320b9',
    name: 'teardown',
    result: 'passed',
    test_run_id: '904ac5fe-c900-48b3-b966-ab434c353855',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:51.505Z',
    finished_at: '2025-07-29T07:26:51.566Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:51.649Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'b5a12197-2d0e-4507-9df4-3e0561446dc8',
    name: 'setup',
    result: 'pending',
    test_run_id: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:51.646Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:51.674Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:51Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_qr_scanner_ui_elements_multidevice[pixel_6]',
      level: 'INFO',
      test_run_uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.702Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'b5a12197-2d0e-4507-9df4-3e0561446dc8',
    name: 'setup',
    result: 'passed',
    test_run_id: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:51.646Z',
    finished_at: '2025-07-29T07:26:51.696Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:51.772Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
    name: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    @pytest.mark.parametrize("device_name", ["samsung_s22", "pixel_6"])\n' +
        '    def test_qr_scanner_ui_elements_multidevice(self, driver, device_name):\n' +
        '        """Smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {device_name}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui_{device_name}")\n' +
        '\n' +
        '            logger.info(f"‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ {device_name}")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:51.735Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[pixel_6]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:51.787Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:51Z [tests.test_b2b][INFO] - üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: QR Scanner UI - pixel_6',
      level: 'INFO',
      test_run_uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.806Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:51Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.826Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:51Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.845Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:51Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.865Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:51Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.926Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.945Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[pixel_6]',
      level: 'INFO',
      test_run_uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.964Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2'
    }
  ]
} to 11957:0
2025-07-29T07:26:51.985Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[pixel_6] etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2'
    }
  ]
} to 11957:0
2025-07-29T07:26:52.032Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2'
    }
  ]
} to 11957:0
2025-07-29T07:26:52.162Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
    name: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    @pytest.mark.parametrize("device_name", ["samsung_s22", "pixel_6"])\n' +
        '    def test_qr_scanner_ui_elements_multidevice(self, driver, device_name):\n' +
        '        """Smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {device_name}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui_{device_name}")\n' +
        '\n' +
        '            logger.info(f"‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ {device_name}")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 316,
    started_at: '2025-07-29T07:26:51.735Z',
    finished_at: '2025-07-29T07:26:52.051Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[pixel_6]'
    },
    hooks: [ 'b5a12197-2d0e-4507-9df4-3e0561446dc8' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:52.194Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '45a9681b-7b4e-4139-b0ed-32b94cd01974',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:52.188Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:52.217Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:52Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[pixel_6] (–∑–∞ 0.52—Å)',
      level: 'INFO',
      test_run_uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2'
    }
  ]
} to 11957:0
2025-07-29T07:26:52.240Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:52.160Z',
      uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      kind: 'TEST_LOG',
      message: 'https://collector-observability.browserstack.com:443 "POST /api/v1/batch HTTP/1.1" 401 None',
      level: 'DEBUG',
      test_run_uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2'
    }
  ]
} to 11957:0
2025-07-29T07:26:52.241Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:52.216Z',
      uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[pixel_6] (–∑–∞ 0.52—Å)',
      level: 'INFO',
      test_run_uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2'
    }
  ]
} to 11957:0
2025-07-29T07:26:52.241Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:51.786Z',
      uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      kind: 'TEST_LOG',
      message: 'üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: QR Scanner UI - pixel_6',
      level: 'INFO',
      test_run_uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2'
    }
  ]
} to 11957:0
2025-07-29T07:26:52.241Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:51.805Z',
      uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2'
    }
  ]
} to 11957:0
2025-07-29T07:26:52.241Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:51.824Z',
      uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2'
    }
  ]
} to 11957:0
2025-07-29T07:26:52.241Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:51.844Z',
      uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2'
    }
  ]
} to 11957:0
2025-07-29T07:26:52.241Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:51.863Z',
      uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2'
    }
  ]
} to 11957:0
2025-07-29T07:26:52.267Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '45a9681b-7b4e-4139-b0ed-32b94cd01974',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:52.188Z',
    finished_at: '2025-07-29T07:26:52.260Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:52.348Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'c8f39fb9-9dc9-4147-b703-a20d7aa10c9e',
    name: 'setup',
    result: 'pending',
    test_run_id: 'c679dae3-abea-455a-ab67-9c74208ea38f',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_universal',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:52.345Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:52.376Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'c679dae3-abea-455a-ab67-9c74208ea38f',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:52Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_qr_scanner_ui_elements_universal',
      level: 'INFO',
      test_run_uuid: 'c679dae3-abea-455a-ab67-9c74208ea38f'
    }
  ]
} to 11957:0
2025-07-29T07:26:52.402Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'c8f39fb9-9dc9-4147-b703-a20d7aa10c9e',
    name: 'setup',
    result: 'passed',
    test_run_id: 'c679dae3-abea-455a-ab67-9c74208ea38f',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_universal',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:52.345Z',
    finished_at: '2025-07-29T07:26:52.396Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:52.482Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'c679dae3-abea-455a-ab67-9c74208ea38f',
    name: 'test_qr_scanner_ui_elements_universal',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    def test_qr_scanner_ui_elements_universal(self, driver):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {driver.test_mode}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui")\n' +
        '\n' +
        '            logger.info("‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_universal',
    scope: 'test_qr_scanner_ui_elements_universal',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:52.440Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_universal'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:52.529Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'c679dae3-abea-455a-ab67-9c74208ea38f',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: 'c679dae3-abea-455a-ab67-9c74208ea38f'
    }
  ]
} to 11957:0
2025-07-29T07:26:52.547Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'c679dae3-abea-455a-ab67-9c74208ea38f',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_universal',
      level: 'INFO',
      test_run_uuid: 'c679dae3-abea-455a-ab67-9c74208ea38f'
    }
  ]
} to 11957:0
2025-07-29T07:26:52.565Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'c679dae3-abea-455a-ab67-9c74208ea38f',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'c679dae3-abea-455a-ab67-9c74208ea38f'
    }
  ]
} to 11957:0
2025-07-29T07:26:52.584Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'c679dae3-abea-455a-ab67-9c74208ea38f',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_universal etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: 'c679dae3-abea-455a-ab67-9c74208ea38f'
    }
  ]
} to 11957:0
2025-07-29T07:26:52.630Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'c679dae3-abea-455a-ab67-9c74208ea38f',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: 'c679dae3-abea-455a-ab67-9c74208ea38f'
    }
  ]
} to 11957:0
2025-07-29T07:26:52.714Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: 'c679dae3-abea-455a-ab67-9c74208ea38f',
    name: 'test_qr_scanner_ui_elements_universal',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    def test_qr_scanner_ui_elements_universal(self, driver):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {driver.test_mode}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui")\n' +
        '\n' +
        '            logger.info("‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_universal',
    scope: 'test_qr_scanner_ui_elements_universal',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 209,
    started_at: '2025-07-29T07:26:52.440Z',
    finished_at: '2025-07-29T07:26:52.649Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_universal'
    },
    hooks: [ 'c8f39fb9-9dc9-4147-b703-a20d7aa10c9e' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:52.737Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '26dc0735-8768-4eab-b6ae-9b33bb2ecbb3',
    name: 'teardown',
    result: 'pending',
    test_run_id: 'c679dae3-abea-455a-ab67-9c74208ea38f',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_universal',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:52.732Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:52.755Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.847Z',
      uuid: 'c679dae3-abea-455a-ab67-9c74208ea38f',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:52Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_universal (–∑–∞ 0.36—Å)',
      level: 'INFO',
      test_run_uuid: 'c679dae3-abea-455a-ab67-9c74208ea38f'
    }
  ]
} to 11957:0
2025-07-29T07:26:52.776Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:52.754Z',
      uuid: 'c679dae3-abea-455a-ab67-9c74208ea38f',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_universal (–∑–∞ 0.36—Å)',
      level: 'INFO',
      test_run_uuid: 'c679dae3-abea-455a-ab67-9c74208ea38f'
    }
  ]
} to 11957:0
2025-07-29T07:26:52.802Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '26dc0735-8768-4eab-b6ae-9b33bb2ecbb3',
    name: 'teardown',
    result: 'passed',
    test_run_id: 'c679dae3-abea-455a-ab67-9c74208ea38f',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_universal',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:52.732Z',
    finished_at: '2025-07-29T07:26:52.795Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:52.828Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f',
      name: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      body: [Object],
      identifier: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 179,
      started_at: '2025-07-29T07:26:50.653Z',
      finished_at: '2025-07-29T07:26:50.832Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'c5811c3c-f801-4c12-bc04-6ab7bc5a0a16',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:50.903Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'c5811c3c-f801-4c12-bc04-6ab7bc5a0a16',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'cf97e6db-6720-4fc8-a4a9-785d0d123e3f',
      body: [Object],
      scope: 'test_full_qr_payment_flow_universal[Megapolis-QR]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:50.903Z',
      finished_at: '2025-07-29T07:26:50.956Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '1fb0ec8c-6aea-458e-995b-2be355826933',
      name: 'setup',
      result: 'pending',
      test_run_id: '904ac5fe-c900-48b3-b966-ab434c353855',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:51.027Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '1fb0ec8c-6aea-458e-995b-2be355826933',
      name: 'setup',
      result: 'passed',
      test_run_id: '904ac5fe-c900-48b3-b966-ab434c353855',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:51.027Z',
      finished_at: '2025-07-29T07:26:51.079Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '904ac5fe-c900-48b3-b966-ab434c353855',
      name: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:51.118Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '904ac5fe-c900-48b3-b966-ab434c353855',
      name: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 309,
      started_at: '2025-07-29T07:26:51.118Z',
      finished_at: '2025-07-29T07:26:51.427Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'cb244e2a-5b3b-46b3-9e4c-00d9fe6320b9',
      name: 'teardown',
      result: 'pending',
      test_run_id: '904ac5fe-c900-48b3-b966-ab434c353855',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:51.505Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: 'cb244e2a-5b3b-46b3-9e4c-00d9fe6320b9',
      name: 'teardown',
      result: 'passed',
      test_run_id: '904ac5fe-c900-48b3-b966-ab434c353855',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:51.505Z',
      finished_at: '2025-07-29T07:26:51.566Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'b5a12197-2d0e-4507-9df4-3e0561446dc8',
      name: 'setup',
      result: 'pending',
      test_run_id: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:51.646Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'b5a12197-2d0e-4507-9df4-3e0561446dc8',
      name: 'setup',
      result: 'passed',
      test_run_id: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:51.646Z',
      finished_at: '2025-07-29T07:26:51.696Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      name: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:51.735Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      name: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 316,
      started_at: '2025-07-29T07:26:51.735Z',
      finished_at: '2025-07-29T07:26:52.051Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '45a9681b-7b4e-4139-b0ed-32b94cd01974',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:52.188Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '45a9681b-7b4e-4139-b0ed-32b94cd01974',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'de9acb7c-6d6a-4169-ad94-ef22554328b2',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:52.188Z',
      finished_at: '2025-07-29T07:26:52.260Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'c8f39fb9-9dc9-4147-b703-a20d7aa10c9e',
      name: 'setup',
      result: 'pending',
      test_run_id: 'c679dae3-abea-455a-ab67-9c74208ea38f',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_universal',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:52.345Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'c8f39fb9-9dc9-4147-b703-a20d7aa10c9e',
      name: 'setup',
      result: 'passed',
      test_run_id: 'c679dae3-abea-455a-ab67-9c74208ea38f',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_universal',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:52.345Z',
      finished_at: '2025-07-29T07:26:52.396Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'c679dae3-abea-455a-ab67-9c74208ea38f',
      name: 'test_qr_scanner_ui_elements_universal',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_universal',
      scope: 'test_qr_scanner_ui_elements_universal',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:52.440Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: 'c679dae3-abea-455a-ab67-9c74208ea38f',
      name: 'test_qr_scanner_ui_elements_universal',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_universal',
      scope: 'test_qr_scanner_ui_elements_universal',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 209,
      started_at: '2025-07-29T07:26:52.440Z',
      finished_at: '2025-07-29T07:26:52.649Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '26dc0735-8768-4eab-b6ae-9b33bb2ecbb3',
      name: 'teardown',
      result: 'pending',
      test_run_id: 'c679dae3-abea-455a-ab67-9c74208ea38f',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_universal',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:52.732Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '26dc0735-8768-4eab-b6ae-9b33bb2ecbb3',
      name: 'teardown',
      result: 'passed',
      test_run_id: 'c679dae3-abea-455a-ab67-9c74208ea38f',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_universal',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:52.732Z',
      finished_at: '2025-07-29T07:26:52.795Z'
    },
    logs: []
  }
] to 11957:0
2025-07-29T07:26:52.830Z CLI info  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T07:26:52.902Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      level: 'INFO',
      test_run_uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13'
    }
  ]
} to 11957:0
2025-07-29T07:26:52.923Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13'
    }
  ]
} to 11957:0
2025-07-29T07:26:52.943Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[samsung_s22] etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13'
    }
  ]
} to 11957:0
2025-07-29T07:26:52.990Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.078Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13',
    name: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    @pytest.mark.parametrize("device_name", ["samsung_s22", "pixel_6"])\n' +
        '    def test_qr_scanner_ui_elements_multidevice(self, driver, device_name):\n' +
        '        """Smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {device_name}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui_{device_name}")\n' +
        '\n' +
        '            logger.info(f"‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ {device_name}")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 3436,
    started_at: '2025-07-29T07:26:49.574Z',
    finished_at: '2025-07-29T07:26:53.010Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[samsung_s22]'
    },
    hooks: [ 'db171897-6cd7-453c-834e-83dc026cf0d3' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:53.104Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '7809dd63-a37a-4dc8-a067-f1080e3136fe',
    name: 'teardown',
    result: 'pending',
    test_run_id: '495afc9a-d443-424d-b978-4b0cf48eaa13',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:53.098Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:53.125Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:53Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[samsung_s22] (–∑–∞ 3.59—Å)',
      level: 'INFO',
      test_run_uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.147Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:53.124Z',
      uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[samsung_s22] (–∑–∞ 3.59—Å)',
      level: 'INFO',
      test_run_uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.147Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:49.623Z',
      uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      kind: 'TEST_LOG',
      message: 'üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: QR Scanner UI - samsung_s22',
      level: 'INFO',
      test_run_uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.147Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:49.642Z',
      uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.147Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:49.659Z',
      uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.148Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:49.690Z',
      uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      kind: 'TEST_LOG',
      message: 'https://collector-observability.browserstack.com:443 "POST /api/v1/batch HTTP/1.1" 401 None',
      level: 'DEBUG',
      test_run_uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.148Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:49.676Z',
      uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.148Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:49.694Z',
      uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.174Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '7809dd63-a37a-4dc8-a067-f1080e3136fe',
    name: 'teardown',
    result: 'passed',
    test_run_id: '495afc9a-d443-424d-b978-4b0cf48eaa13',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:53.098Z',
    finished_at: '2025-07-29T07:26:53.167Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:53.254Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '76737195-8558-4595-972a-8b8a85098499',
    name: 'setup',
    result: 'pending',
    test_run_id: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:53.250Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:53.281Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:53Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_qr_scanner_ui_elements_multidevice[pixel_6]',
      level: 'INFO',
      test_run_uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.310Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: '76737195-8558-4595-972a-8b8a85098499',
    name: 'setup',
    result: 'passed',
    test_run_id: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:53.250Z',
    finished_at: '2025-07-29T07:26:53.304Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:53.388Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
    name: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    @pytest.mark.parametrize("device_name", ["samsung_s22", "pixel_6"])\n' +
        '    def test_qr_scanner_ui_elements_multidevice(self, driver, device_name):\n' +
        '        """Smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {device_name}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui_{device_name}")\n' +
        '\n' +
        '            logger.info(f"‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ {device_name}")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:53.348Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'parametrize', 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[pixel_6]'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:53.406Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:53Z [tests.test_b2b][INFO] - üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: QR Scanner UI - pixel_6',
      level: 'INFO',
      test_run_uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.430Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:53Z [utils.test_helpers][INFO] - –®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.451Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:53Z [pages.main_page_ob][INFO] - –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.472Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:53Z [utils.test_helpers][ERROR] - –û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.494Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
      kind: 'TEST_LOG',
      message: "2025-07-29T07:26:53Z [tests.test_b2b][ERROR] - ‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'INFO',
      test_run_uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.558Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.577Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[pixel_6]',
      level: 'INFO',
      test_run_uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.597Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.618Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[pixel_6] etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.664Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.745Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
    name: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    @pytest.mark.parametrize("device_name", ["samsung_s22", "pixel_6"])\n' +
        '    def test_qr_scanner_ui_elements_multidevice(self, driver, device_name):\n' +
        '        """Smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {device_name}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui_{device_name}")\n' +
        '\n' +
        '            logger.info(f"‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ {device_name}")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 333,
    started_at: '2025-07-29T07:26:53.348Z',
    finished_at: '2025-07-29T07:26:53.681Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'parametrize', 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_multidevice[pixel_6]'
    },
    hooks: [ '76737195-8558-4595-972a-8b8a85098499' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:53.772Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '22749302-1595-4e9b-8e76-01a0edd7d12e',
    name: 'teardown',
    result: 'pending',
    test_run_id: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:53.766Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:53.794Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:53Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[pixel_6] (–∑–∞ 0.49—Å)',
      level: 'INFO',
      test_run_uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.817Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:53.793Z',
      uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_multidevice[pixel_6] (–∑–∞ 0.49—Å)',
      level: 'INFO',
      test_run_uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.818Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:53.405Z',
      uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
      kind: 'TEST_LOG',
      message: 'üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: QR Scanner UI - pixel_6',
      level: 'INFO',
      test_run_uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.818Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:53.429Z',
      uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
      kind: 'TEST_LOG',
      message: '–®–ê–ì: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É',
      level: 'INFO',
      test_run_uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.818Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:53.450Z',
      uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
      kind: 'TEST_LOG',
      message: '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...',
      level: 'INFO',
      test_run_uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.818Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:53.471Z',
      uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
      kind: 'TEST_LOG',
      message: "–û–®–ò–ë–ö–ê –í –®–ê–ì–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ QR —Å–∫–∞–Ω–µ—Ä—É - 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.818Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:53.493Z',
      uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
      kind: 'TEST_LOG',
      message: "‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: 'NoneType' object has no attribute 'find_element'",
      level: 'ERROR',
      test_run_uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.846Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '22749302-1595-4e9b-8e76-01a0edd7d12e',
    name: 'teardown',
    result: 'passed',
    test_run_id: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:53.766Z',
    finished_at: '2025-07-29T07:26:53.839Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:53.930Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'e0e2a321-4584-4832-8102-a61750414012',
    name: 'setup',
    result: 'pending',
    test_run_id: '54ff186a-9896-478d-a0cf-06349f3d7540',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_universal',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:53.926Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:53.959Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '54ff186a-9896-478d-a0cf-06349f3d7540',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:53Z [conftest][INFO] - ‚ñ∂Ô∏è –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢: test_qr_scanner_ui_elements_universal',
      level: 'INFO',
      test_run_uuid: '54ff186a-9896-478d-a0cf-06349f3d7540'
    }
  ]
} to 11957:0
2025-07-29T07:26:53.988Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'pytest',
    uuid: 'e0e2a321-4584-4832-8102-a61750414012',
    name: 'setup',
    result: 'passed',
    test_run_id: '54ff186a-9896-478d-a0cf-06349f3d7540',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_universal',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:53.926Z',
    finished_at: '2025-07-29T07:26:53.982Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:54.070Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunStarted',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '54ff186a-9896-478d-a0cf-06349f3d7540',
    name: 'test_qr_scanner_ui_elements_universal',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    def test_qr_scanner_ui_elements_universal(self, driver):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {driver.test_mode}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui")\n' +
        '\n' +
        '            logger.info("‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_universal',
    scope: 'test_qr_scanner_ui_elements_universal',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-07-29T07:26:54.026Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    custom_metadata: undefined,
    tags: [ 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_universal'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:54.114Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '54ff186a-9896-478d-a0cf-06349f3d7540',
      kind: 'TEST_LOG',
      message: 'Test failed:',
      level: 'INFO',
      test_run_uuid: '54ff186a-9896-478d-a0cf-06349f3d7540'
    }
  ]
} to 11957:0
2025-07-29T07:26:54.134Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '54ff186a-9896-478d-a0cf-06349f3d7540',
      kind: 'TEST_LOG',
      message: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_universal',
      level: 'INFO',
      test_run_uuid: '54ff186a-9896-478d-a0cf-06349f3d7540'
    }
  ]
} to 11957:0
2025-07-29T07:26:54.152Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '54ff186a-9896-478d-a0cf-06349f3d7540',
      kind: 'TEST_LOG',
      message: 'etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '54ff186a-9896-478d-a0cf-06349f3d7540'
    }
  ]
} to 11957:0
2025-07-29T07:26:54.172Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '54ff186a-9896-478d-a0cf-06349f3d7540',
      kind: 'TEST_LOG',
      message: 'Test failed:  tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_universal etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r',
      level: 'INFO',
      test_run_uuid: '54ff186a-9896-478d-a0cf-06349f3d7540'
    }
  ]
} to 11957:0
2025-07-29T07:26:54.219Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '54ff186a-9896-478d-a0cf-06349f3d7540',
      kind: 'TEST_LOG',
      message: '\x1B[31mF\x1B[0m',
      level: 'INFO',
      test_run_uuid: '54ff186a-9896-478d-a0cf-06349f3d7540'
    }
  ]
} to 11957:0
2025-07-29T07:26:54.304Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'TestRunFinished',
  test_run: {
    type: 'test',
    framework: 'pytest',
    uuid: '54ff186a-9896-478d-a0cf-06349f3d7540',
    name: 'test_qr_scanner_ui_elements_universal',
    body: {
      lang: 'python',
      code: '    @pytest.mark.smoke\n' +
        '    def test_qr_scanner_ui_elements_universal(self, driver):\n' +
        '        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π smoke test UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ QR —Å–∫–∞–Ω–µ—Ä–∞"""\n' +
        '\n' +
        '        test_name = f"QR Scanner UI - {driver.test_mode}"\n' +
        '        logger.info(f"üîç –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–∞: {test_name}")\n' +
        '\n' +
        '        try:\n' +
        '            self.navigate_to_qr_scanner(driver)\n' +
        '\n' +
        '            scanner = QrScanerPage(driver)\n' +
        '            scanner.wait_for_qr_scanner()\n' +
        '\n' +
        '            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n' +
        '            assert scanner.is_element_present(scanner.QR_FRAME), \\\n' +
        '                "QR —Ä–∞–º–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            assert scanner.is_element_present(scanner.GALLERY_BUTTON), \\\n' +
        '                "–ö–Ω–æ–ø–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"\n' +
        '\n' +
        '            wait_and_screenshot(driver, f"qr_scanner_ui")\n' +
        '\n' +
        '            logger.info("‚úÖ Smoke test UI –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ")\n' +
        '\n' +
        '        except Exception as e:\n' +
        '            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ smoke —Ç–µ—Å—Ç–µ: {e}")\n' +
        '\n' +
        '            raise\n'
    },
    identifier: 'test_qr_scanner_ui_elements_universal',
    scope: 'test_qr_scanner_ui_elements_universal',
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    result: 'failed',
    duration_in_ms: 213,
    started_at: '2025-07-29T07:26:54.026Z',
    finished_at: '2025-07-29T07:26:54.239Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    custom_metadata: {},
    tags: [ 'smoke', 'browserstack' ],
    customRerunParam: {
      rerun_name: 'tests/test_b2b.py::TestQrPaymentBrowserStack::test_qr_scanner_ui_elements_universal'
    },
    hooks: [ 'e0e2a321-4584-4832-8102-a61750414012' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: false,
      app_automate: true
    }
  },
  logs: []
} to 11957:0
2025-07-29T07:26:54.327Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '9d8da41e-d9dd-43fa-8530-6066b0f9f31c',
    name: 'teardown',
    result: 'pending',
    test_run_id: '54ff186a-9896-478d-a0cf-06349f3d7540',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_universal',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:54.323Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:54.346Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:34.818Z',
      uuid: '54ff186a-9896-478d-a0cf-06349f3d7540',
      kind: 'TEST_LOG',
      message: '2025-07-29T07:26:54Z [conftest][INFO] - ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_universal (–∑–∞ 0.36—Å)',
      level: 'INFO',
      test_run_uuid: '54ff186a-9896-478d-a0cf-06349f3d7540'
    }
  ]
} to 11957:0
2025-07-29T07:26:54.370Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:54.364Z',
      uuid: '54ff186a-9896-478d-a0cf-06349f3d7540',
      kind: 'TEST_LOG',
      message: 'post_data: Sending data to testhub for events HookRunStarted, HookRunStarted',
      level: 'DEBUG',
      test_run_uuid: '54ff186a-9896-478d-a0cf-06349f3d7540'
    }
  ]
} to 11957:0
2025-07-29T07:26:54.370Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:54.367Z',
      uuid: '54ff186a-9896-478d-a0cf-06349f3d7540',
      kind: 'TEST_LOG',
      message: 'Starting new HTTPS connection (1): collector-observability.browserstack.com:443',
      level: 'DEBUG',
      test_run_uuid: '54ff186a-9896-478d-a0cf-06349f3d7540'
    }
  ]
} to 11957:0
2025-07-29T07:26:54.370Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'pytest',
      testFrameworkVersion: '8.4.1',
      testFrameworkState: 'INIT_TEST',
      timestamp: '2025-07-29T07:26:54.345Z',
      uuid: '54ff186a-9896-478d-a0cf-06349f3d7540',
      kind: 'TEST_LOG',
      message: '‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù: test_qr_scanner_ui_elements_universal (–∑–∞ 0.36—Å)',
      level: 'INFO',
      test_run_uuid: '54ff186a-9896-478d-a0cf-06349f3d7540'
    }
  ]
} to 11957:0
2025-07-29T07:26:54.399Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'AFTER_EACH',
    framework: 'pytest',
    uuid: '9d8da41e-d9dd-43fa-8530-6066b0f9f31c',
    name: 'teardown',
    result: 'passed',
    test_run_id: '54ff186a-9896-478d-a0cf-06349f3d7540',
    body: { lang: 'python', code: null },
    scope: 'test_qr_scanner_ui_elements_universal',
    custom_metadata: {},
    tags: [],
    scopes: [ 'tests', 'test_b2b.py', 'TestQrPaymentBrowserStack' ],
    file_name: 'tests/test_b2b.py',
    location: 'tests/test_b2b.py',
    vc_filepath: 'tests/test_b2b.py',
    started_at: '2025-07-29T07:26:54.323Z',
    finished_at: '2025-07-29T07:26:54.392Z'
  },
  logs: []
} to 11957:0
2025-07-29T07:26:54.829Z CLI info [testhub:request-queue-handler]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      name: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 3436,
      started_at: '2025-07-29T07:26:49.574Z',
      finished_at: '2025-07-29T07:26:53.010Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '7809dd63-a37a-4dc8-a067-f1080e3136fe',
      name: 'teardown',
      result: 'pending',
      test_run_id: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:53.098Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '7809dd63-a37a-4dc8-a067-f1080e3136fe',
      name: 'teardown',
      result: 'passed',
      test_run_id: '495afc9a-d443-424d-b978-4b0cf48eaa13',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[samsung_s22]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:53.098Z',
      finished_at: '2025-07-29T07:26:53.167Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '76737195-8558-4595-972a-8b8a85098499',
      name: 'setup',
      result: 'pending',
      test_run_id: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:53.250Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: '76737195-8558-4595-972a-8b8a85098499',
      name: 'setup',
      result: 'passed',
      test_run_id: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:53.250Z',
      finished_at: '2025-07-29T07:26:53.304Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
      name: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:53.348Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
      name: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 333,
      started_at: '2025-07-29T07:26:53.348Z',
      finished_at: '2025-07-29T07:26:53.681Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '22749302-1595-4e9b-8e76-01a0edd7d12e',
      name: 'teardown',
      result: 'pending',
      test_run_id: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:53.766Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '22749302-1595-4e9b-8e76-01a0edd7d12e',
      name: 'teardown',
      result: 'passed',
      test_run_id: '122e1fb6-4041-4657-8ee2-5d8420c43f19',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_multidevice[pixel_6]',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:53.766Z',
      finished_at: '2025-07-29T07:26:53.839Z'
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'e0e2a321-4584-4832-8102-a61750414012',
      name: 'setup',
      result: 'pending',
      test_run_id: '54ff186a-9896-478d-a0cf-06349f3d7540',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_universal',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:53.926Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'pytest',
      uuid: 'e0e2a321-4584-4832-8102-a61750414012',
      name: 'setup',
      result: 'passed',
      test_run_id: '54ff186a-9896-478d-a0cf-06349f3d7540',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_universal',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:53.926Z',
      finished_at: '2025-07-29T07:26:53.982Z'
    },
    logs: []
  },
  {
    event_type: 'TestRunStarted',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '54ff186a-9896-478d-a0cf-06349f3d7540',
      name: 'test_qr_scanner_ui_elements_universal',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_universal',
      scope: 'test_qr_scanner_ui_elements_universal',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-07-29T07:26:54.026Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      custom_metadata: undefined,
      tags: [Array],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'TestRunFinished',
    test_run: {
      type: 'test',
      framework: 'pytest',
      uuid: '54ff186a-9896-478d-a0cf-06349f3d7540',
      name: 'test_qr_scanner_ui_elements_universal',
      body: [Object],
      identifier: 'test_qr_scanner_ui_elements_universal',
      scope: 'test_qr_scanner_ui_elements_universal',
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      result: 'failed',
      duration_in_ms: 213,
      started_at: '2025-07-29T07:26:54.026Z',
      finished_at: '2025-07-29T07:26:54.239Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      custom_metadata: {},
      tags: [Array],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    },
    logs: []
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '9d8da41e-d9dd-43fa-8530-6066b0f9f31c',
      name: 'teardown',
      result: 'pending',
      test_run_id: '54ff186a-9896-478d-a0cf-06349f3d7540',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_universal',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:54.323Z'
    },
    logs: []
  },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'AFTER_EACH',
      framework: 'pytest',
      uuid: '9d8da41e-d9dd-43fa-8530-6066b0f9f31c',
      name: 'teardown',
      result: 'passed',
      test_run_id: '54ff186a-9896-478d-a0cf-06349f3d7540',
      body: [Object],
      scope: 'test_qr_scanner_ui_elements_universal',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: 'tests/test_b2b.py',
      location: 'tests/test_b2b.py',
      vc_filepath: 'tests/test_b2b.py',
      started_at: '2025-07-29T07:26:54.323Z',
      finished_at: '2025-07-29T07:26:54.392Z'
    },
    logs: []
  }
] to 11957:0
2025-07-29T07:26:54.831Z CLI info  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-07-29T07:26:55.852Z CLI info  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  [PRODUCTION] Making PUT request to https://collector-observability.browserstack.com
2025-07-29T07:26:56.469Z CLI info [testhub:module]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  stopBuild: etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r request={"finished_at":"2025-07-29T07:26:55.146Z","finished_metadata":[],"custom_metadata":null} response={"data":""}
2025-07-29T07:26:56.471Z CLI info  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  [PRODUCTION] Making POST request to https://api.browserstack.com
2025-07-29T07:26:56.476Z CLI info [observability:module]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Visit https://observability.browserstack.com/builds/etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r to view build report, insights, and many more debugging information all at one place!
2025-07-29T07:26:59.055Z CLI info  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  [PRODUCTION] Making GET request to https://api.browserstack.com
2025-07-29T07:26:59.603Z CLI info  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  [PRODUCTION] Making POST request to https://eds.browserstack.com
2025-07-29T07:27:01.184Z CLI info [main]  [kanat_VX6i9G]  [etquiwvs4wlayn6wwno4t7anu6bwrft5v2jzgn0r]  [413401a1-518a-489e-a4c2-7d22c92a59e6]  Received graceful signal termination, performing cleanup
