import requests
import json
import os
from appium import webdriver
from selenium.common.exceptions import WebDriverException
from config.settings import *

class BrowserStackHelper:
    def __init__(self):
        self.username = BROWSERSTACK_USERNAME
        self.access_key = BROWSERSTACK_ACCESS_KEY
        self.upload_url = "https://api-cloud.browserstack.com/app-automate/upload"
        
    def upload_app(self, app_path):
        """–ó–∞–≥—Ä—É–∑–∏—Ç—å APK –≤ BrowserStack"""
        if not os.path.exists(app_path):
            raise FileNotFoundError(f"APK —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {app_path}")
            
        print(f"üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º APK –≤ BrowserStack: {app_path}")
        
        with open(app_path, 'rb') as f:
            files = {'file': f}
            
            response = requests.post(
                self.upload_url,
                files=files,
                auth=(self.username, self.access_key)
            )
            
        if response.status_code == 200:
            result = response.json()
            app_id = result.get('app_url')
            print(f"‚úÖ APK —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω! App ID: {app_id}")
            return app_id
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ APK: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            return None
    
    def get_uploaded_apps(self):
        """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π"""
        url = "https://api-cloud.browserstack.com/app-automate/recent_apps"
        
        response = requests.get(url, auth=(self.username, self.access_key))
        
        if response.status_code == 200:
            return response.json()
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π: {response.status_code}")
            return None
    
    def create_driver(self, capabilities):
        """–°–æ–∑–¥–∞—Ç—å –¥—Ä–∞–π–≤–µ—Ä –¥–ª—è BrowserStack"""
        try:
            print(f"üöÄ –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä BrowserStack —Å capabilities: {capabilities}")
            driver = webdriver.Remote(
                command_executor=BROWSERSTACK_URL,
                desired_capabilities=capabilities
            )
            print("‚úÖ –î—Ä–∞–π–≤–µ—Ä BrowserStack —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
            return driver
        except WebDriverException as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞ BrowserStack: {e}")
            return None
    
    def mark_test_status(self, driver, status, reason=""):
        """–û—Ç–º–µ—Ç–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ç–µ—Å—Ç–∞ –≤ BrowserStack"""
        script = f'''browserstack_executor: {{"action": "setSessionStatus", "arguments": {{"status":"{status}", "reason": "{reason}"}}}}'''
        try:
            driver.execute_script(script)
            print(f"üìù –°—Ç–∞—Ç—É—Å —Ç–µ—Å—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {status}")
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ç–µ—Å—Ç–∞: {e}")


def setup_browserstack_driver():
    """–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –¥—Ä–∞–π–≤–µ—Ä –¥–ª—è BrowserStack"""
    helper = BrowserStackHelper()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º APK –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    app_id = None
    if USE_LOCAL_APK and AVAILABLE_APK_PATH:
        app_id = helper.upload_app(AVAILABLE_APK_PATH)
        if not app_id:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å APK, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º capabilities
    caps = BROWSERSTACK_ANDROID_CAPS.copy()
    if app_id:
        caps['app'] = app_id
    else:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º package/activity –¥–ª—è —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        caps['appPackage'] = APP_PACKAGE
        caps['appActivity'] = APP_ACTIVITY
    
    # –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä
    driver = helper.create_driver(caps)
    
    return driver, helper
